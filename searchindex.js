Search.setIndex({"docnames": ["_autosummary/phygnn", "_autosummary/phygnn.base", "_autosummary/phygnn.base.CustomNetwork", "_autosummary/phygnn.base.GradientUtils", "_autosummary/phygnn.layers", "_autosummary/phygnn.layers.custom_layers", "_autosummary/phygnn.layers.custom_layers.Attention", "_autosummary/phygnn.layers.custom_layers.AxialAttentionBlock", "_autosummary/phygnn.layers.custom_layers.CBAM", "_autosummary/phygnn.layers.custom_layers.ExpandDims", "_autosummary/phygnn.layers.custom_layers.FNO", "_autosummary/phygnn.layers.custom_layers.FlattenAxis", "_autosummary/phygnn.layers.custom_layers.FlexiblePadding", "_autosummary/phygnn.layers.custom_layers.FunctionalLayer", "_autosummary/phygnn.layers.custom_layers.GaussianAveragePooling2D", "_autosummary/phygnn.layers.custom_layers.GaussianNoiseAxis", "_autosummary/phygnn.layers.custom_layers.LogTransform", "_autosummary/phygnn.layers.custom_layers.MaskedSqueezeAndExcitation", "_autosummary/phygnn.layers.custom_layers.SigLin", "_autosummary/phygnn.layers.custom_layers.SkipConnection", "_autosummary/phygnn.layers.custom_layers.SparseAttention", "_autosummary/phygnn.layers.custom_layers.SpatialExpansion", "_autosummary/phygnn.layers.custom_layers.SpatioTemporalExpansion", "_autosummary/phygnn.layers.custom_layers.SqueezeAndExcitation", "_autosummary/phygnn.layers.custom_layers.Sup3rAdder", "_autosummary/phygnn.layers.custom_layers.Sup3rConcat", "_autosummary/phygnn.layers.custom_layers.Sup3rConcatObs", "_autosummary/phygnn.layers.custom_layers.Sup3rObsModel", "_autosummary/phygnn.layers.custom_layers.TileLayer", "_autosummary/phygnn.layers.custom_layers.UnitConversion", "_autosummary/phygnn.layers.handlers", "_autosummary/phygnn.layers.handlers.HiddenLayers", "_autosummary/phygnn.layers.handlers.Layers", "_autosummary/phygnn.model_interfaces", "_autosummary/phygnn.model_interfaces.base_model", "_autosummary/phygnn.model_interfaces.base_model.ModelBase", "_autosummary/phygnn.model_interfaces.phygnn_model", "_autosummary/phygnn.model_interfaces.phygnn_model.PhygnnModel", "_autosummary/phygnn.model_interfaces.random_forest_model", "_autosummary/phygnn.model_interfaces.random_forest_model.RandomForestModel", "_autosummary/phygnn.model_interfaces.tf_model", "_autosummary/phygnn.model_interfaces.tf_model.TfModel", "_autosummary/phygnn.phygnn", "_autosummary/phygnn.phygnn.PhysicsGuidedNeuralNetwork", "_autosummary/phygnn.utilities", "_autosummary/phygnn.utilities.loss_metrics", "_autosummary/phygnn.utilities.loss_metrics.binary_crossentropy", "_autosummary/phygnn.utilities.loss_metrics.mae", "_autosummary/phygnn.utilities.loss_metrics.mbe", "_autosummary/phygnn.utilities.loss_metrics.mse", "_autosummary/phygnn.utilities.loss_metrics.relative_mae", "_autosummary/phygnn.utilities.loss_metrics.relative_mbe", "_autosummary/phygnn.utilities.loss_metrics.relative_mse", "_autosummary/phygnn.utilities.pre_processing", "_autosummary/phygnn.utilities.pre_processing.PreProcess", "_autosummary/phygnn.utilities.tf_utilities", "_autosummary/phygnn.utilities.tf_utilities.idw_fill", "_autosummary/phygnn.utilities.tf_utilities.mean_fill", "_autosummary/phygnn.utilities.tf_utilities.tf_isin", "_autosummary/phygnn.utilities.tf_utilities.tf_log10", "api", "index", "misc/installation", "misc/installation_usage"], "filenames": ["_autosummary/phygnn.rst", "_autosummary/phygnn.base.rst", "_autosummary/phygnn.base.CustomNetwork.rst", "_autosummary/phygnn.base.GradientUtils.rst", "_autosummary/phygnn.layers.rst", "_autosummary/phygnn.layers.custom_layers.rst", "_autosummary/phygnn.layers.custom_layers.Attention.rst", "_autosummary/phygnn.layers.custom_layers.AxialAttentionBlock.rst", "_autosummary/phygnn.layers.custom_layers.CBAM.rst", "_autosummary/phygnn.layers.custom_layers.ExpandDims.rst", "_autosummary/phygnn.layers.custom_layers.FNO.rst", "_autosummary/phygnn.layers.custom_layers.FlattenAxis.rst", "_autosummary/phygnn.layers.custom_layers.FlexiblePadding.rst", "_autosummary/phygnn.layers.custom_layers.FunctionalLayer.rst", "_autosummary/phygnn.layers.custom_layers.GaussianAveragePooling2D.rst", "_autosummary/phygnn.layers.custom_layers.GaussianNoiseAxis.rst", "_autosummary/phygnn.layers.custom_layers.LogTransform.rst", "_autosummary/phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.rst", "_autosummary/phygnn.layers.custom_layers.SigLin.rst", "_autosummary/phygnn.layers.custom_layers.SkipConnection.rst", "_autosummary/phygnn.layers.custom_layers.SparseAttention.rst", "_autosummary/phygnn.layers.custom_layers.SpatialExpansion.rst", "_autosummary/phygnn.layers.custom_layers.SpatioTemporalExpansion.rst", "_autosummary/phygnn.layers.custom_layers.SqueezeAndExcitation.rst", "_autosummary/phygnn.layers.custom_layers.Sup3rAdder.rst", "_autosummary/phygnn.layers.custom_layers.Sup3rConcat.rst", "_autosummary/phygnn.layers.custom_layers.Sup3rConcatObs.rst", "_autosummary/phygnn.layers.custom_layers.Sup3rObsModel.rst", "_autosummary/phygnn.layers.custom_layers.TileLayer.rst", "_autosummary/phygnn.layers.custom_layers.UnitConversion.rst", "_autosummary/phygnn.layers.handlers.rst", "_autosummary/phygnn.layers.handlers.HiddenLayers.rst", "_autosummary/phygnn.layers.handlers.Layers.rst", "_autosummary/phygnn.model_interfaces.rst", "_autosummary/phygnn.model_interfaces.base_model.rst", "_autosummary/phygnn.model_interfaces.base_model.ModelBase.rst", "_autosummary/phygnn.model_interfaces.phygnn_model.rst", "_autosummary/phygnn.model_interfaces.phygnn_model.PhygnnModel.rst", "_autosummary/phygnn.model_interfaces.random_forest_model.rst", "_autosummary/phygnn.model_interfaces.random_forest_model.RandomForestModel.rst", "_autosummary/phygnn.model_interfaces.tf_model.rst", "_autosummary/phygnn.model_interfaces.tf_model.TfModel.rst", "_autosummary/phygnn.phygnn.rst", "_autosummary/phygnn.phygnn.PhysicsGuidedNeuralNetwork.rst", "_autosummary/phygnn.utilities.rst", "_autosummary/phygnn.utilities.loss_metrics.rst", "_autosummary/phygnn.utilities.loss_metrics.binary_crossentropy.rst", "_autosummary/phygnn.utilities.loss_metrics.mae.rst", "_autosummary/phygnn.utilities.loss_metrics.mbe.rst", "_autosummary/phygnn.utilities.loss_metrics.mse.rst", "_autosummary/phygnn.utilities.loss_metrics.relative_mae.rst", "_autosummary/phygnn.utilities.loss_metrics.relative_mbe.rst", "_autosummary/phygnn.utilities.loss_metrics.relative_mse.rst", "_autosummary/phygnn.utilities.pre_processing.rst", "_autosummary/phygnn.utilities.pre_processing.PreProcess.rst", "_autosummary/phygnn.utilities.tf_utilities.rst", "_autosummary/phygnn.utilities.tf_utilities.idw_fill.rst", "_autosummary/phygnn.utilities.tf_utilities.mean_fill.rst", "_autosummary/phygnn.utilities.tf_utilities.tf_isin.rst", "_autosummary/phygnn.utilities.tf_utilities.tf_log10.rst", "api.rst", "index.rst", "misc/installation.rst", "misc/installation_usage.rst"], "titles": ["phygnn", "phygnn.base", "phygnn.base.CustomNetwork", "phygnn.base.GradientUtils", "phygnn.layers", "phygnn.layers.custom_layers", "phygnn.layers.custom_layers.Attention", "phygnn.layers.custom_layers.AxialAttentionBlock", "phygnn.layers.custom_layers.CBAM", "phygnn.layers.custom_layers.ExpandDims", "phygnn.layers.custom_layers.FNO", "phygnn.layers.custom_layers.FlattenAxis", "phygnn.layers.custom_layers.FlexiblePadding", "phygnn.layers.custom_layers.FunctionalLayer", "phygnn.layers.custom_layers.GaussianAveragePooling2D", "phygnn.layers.custom_layers.GaussianNoiseAxis", "phygnn.layers.custom_layers.LogTransform", "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation", "phygnn.layers.custom_layers.SigLin", "phygnn.layers.custom_layers.SkipConnection", "phygnn.layers.custom_layers.SparseAttention", "phygnn.layers.custom_layers.SpatialExpansion", "phygnn.layers.custom_layers.SpatioTemporalExpansion", "phygnn.layers.custom_layers.SqueezeAndExcitation", "phygnn.layers.custom_layers.Sup3rAdder", "phygnn.layers.custom_layers.Sup3rConcat", "phygnn.layers.custom_layers.Sup3rConcatObs", "phygnn.layers.custom_layers.Sup3rObsModel", "phygnn.layers.custom_layers.TileLayer", "phygnn.layers.custom_layers.UnitConversion", "phygnn.layers.handlers", "phygnn.layers.handlers.HiddenLayers", "phygnn.layers.handlers.Layers", "phygnn.model_interfaces", "phygnn.model_interfaces.base_model", "phygnn.model_interfaces.base_model.ModelBase", "phygnn.model_interfaces.phygnn_model", "phygnn.model_interfaces.phygnn_model.PhygnnModel", "phygnn.model_interfaces.random_forest_model", "phygnn.model_interfaces.random_forest_model.RandomForestModel", "phygnn.model_interfaces.tf_model", "phygnn.model_interfaces.tf_model.TfModel", "phygnn.phygnn", "phygnn.phygnn.PhysicsGuidedNeuralNetwork", "phygnn.utilities", "phygnn.utilities.loss_metrics", "phygnn.utilities.loss_metrics.binary_crossentropy", "phygnn.utilities.loss_metrics.mae", "phygnn.utilities.loss_metrics.mbe", "phygnn.utilities.loss_metrics.mse", "phygnn.utilities.loss_metrics.relative_mae", "phygnn.utilities.loss_metrics.relative_mbe", "phygnn.utilities.loss_metrics.relative_mse", "phygnn.utilities.pre_processing", "phygnn.utilities.pre_processing.PreProcess", "phygnn.utilities.tf_utilities", "phygnn.utilities.tf_utilities.idw_fill", "phygnn.utilities.tf_utilities.mean_fill", "phygnn.utilities.tf_utilities.tf_isin", "phygnn.utilities.tf_utilities.tf_log10", "&lt;no title&gt;", "phygnn", "Installation", "Installation and Usage"], "terms": {"physic": [0, 37, 42, 43, 61], "guid": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 42, 43, 61], "neural": [0, 1, 2, 10, 37, 42, 43, 61], "network": [0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 42, 43, 61], "python": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41, 61, 62], "librari": 0, "custom": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43, 61], "infrastructur": [1, 2], "class": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 53, 54, 61], "n_featur": [2, 9, 11, 21, 22, 32, 37, 41, 43, 56, 57], "none": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 35, 37, 39, 41, 43, 54], "n_label": [2, 32, 41, 43], "hidden_lay": [2, 27, 31, 32, 37, 41, 43], "input_lay": [2, 32, 37, 41, 43], "fals": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 35, 37, 39, 41, 43, 54], "output_lay": [2, 32, 37, 41, 43], "layers_obj": [2, 37, 43], "feature_nam": [2, 35, 37, 39, 41, 43, 54], "output_nam": [2, 43], "name": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 37, 39, 41, 43, 54, 61, 62], "sourc": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 37, 39, 41, 43, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59], "abc": [2, 3, 35], "feed": [2, 43], "forward": [2, 24, 25, 26, 27, 33], "note": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43, 48, 51, 61, 62], "model": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 61], "requir": [2, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43], "tensorflow": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 43, 55], "2": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 41, 43], "x": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43, 56, 57, 59], "paramet": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 37, 39, 41, 43, 54, 56, 57], "int": [2, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 20, 21, 22, 23, 32, 35, 37, 39, 41, 43, 54], "option": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 35, 37, 39, 41, 43, 54], "number": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 35, 37, 39, 41, 43, 54, 61], "input": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 37, 39, 41, 43, 54, 56, 57], "featur": [2, 3, 16, 21, 22, 24, 25, 26, 27, 29, 32, 35, 37, 39, 41, 43, 54, 57], "thi": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 37, 39, 41, 43, 48, 51, 54, 56, 57, 61], "should": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 37, 39, 41, 43, 61], "match": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43], "last": [2, 3, 8, 10, 17, 23, 43], "dimens": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 43, 56], "train": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 35, 37, 39, 41, 43, 61], "data": [2, 3, 10, 16, 19, 24, 26, 27, 28, 31, 32, 35, 37, 39, 41, 43, 53, 54, 61], "output": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 37, 39, 41, 43, 61], "label": [2, 32, 35, 37, 39, 41, 43, 54], "list": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 37, 39, 41, 43, 54], "dictionari": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 37, 39, 41, 43], "kei": [2, 31, 32, 35, 37, 39, 41, 43, 54], "word": [2, 31, 32, 37, 41, 43], "argument": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 41, 43], "each": [2, 6, 7, 14, 20, 28, 29, 31, 32, 37, 41, 43], "hidden": [2, 27, 31, 32, 37, 41, 43], "layer": [2, 33, 37, 41, 43], "nn": [2, 3, 22, 31, 32, 37, 41, 43, 48, 51], "dens": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 41, 43], "linear": [2, 18, 29, 31, 32, 37, 41, 43], "can": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 41, 43, 61], "activ": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 41, 43, 61, 62], "separ": [2, 31, 32, 37, 41, 43], "more": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 41, 43, 54], "explicit": [2, 31, 32, 37, 41, 43], "control": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 41, 43], "over": [2, 31, 32, 37, 41, 43, 56], "order": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 37, 39, 41, 43], "For": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 41, 43, 61], "exampl": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 41, 43, 61], "i": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 41, 43, 48, 51, 54, 56, 57, 58, 61, 62], "valid": [2, 14, 26, 27, 31, 32, 37, 39, 41, 43, 61], "yield": [2, 31, 32, 37, 41, 43], "8": [2, 32, 37, 43, 61, 62], "10": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 37, 41, 43, 59, 61], "includ": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 41, 43, 57], "unit": [2, 18, 29, 31, 32, 37, 41, 43], "64": [2, 31, 32, 37, 41, 43], "relu": [2, 31, 32, 37, 41, 43], "dropout": [2, 31, 32, 37, 41, 43], "0": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 37, 39, 41, 43, 54, 56, 57, 61], "01": [2, 31, 32, 37, 41, 43, 61], "batch_norm": [2, 31, 32, 37, 41, 43], "axi": [2, 3, 7, 9, 11, 15, 19, 22, 28, 31, 32, 37, 41, 43], "1": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 41, 43, 54, 56, 57], "flatten": [2, 11, 32, 37, 43], "bool": [2, 14, 16, 26, 27, 32, 35, 37, 39, 41, 43, 54, 56], "dict": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 37, 39, 41, 43, 54], "specif": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 37, 41, 43], "similar": [2, 22, 32, 37, 41, 43, 61], "specifi": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 37, 41, 43], "conv": [2, 8, 17, 23, 32, 37, 43], "lstm": [2, 32, 37, 43], "default": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 35, 37, 39, 41, 43, 54], "so": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43, 48, 51, 61], "classfic": [2, 32, 37, 41, 43], "problem": [2, 32, 37, 41, 43], "singl": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 37, 41, 43], "sigmoid": [2, 18, 32, 37, 41, 43], "util": [2, 3, 37, 43], "tf_layer": [2, 37, 43], "initi": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 37, 39, 41, 43], "object": [2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 37, 41, 43, 54], "set": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41, 43], "pre": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 43, 53, 54], "weight": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 41, 43, 61], "overrid": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 43], "tupl": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41, 43], "string": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 43], "mostli": [2, 43], "conveni": [2, 43], "load": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 37, 39, 41, 43], "from": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 37, 39, 41, 43, 46, 61, 62], "disk": [2, 37, 39, 41, 43], "have": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 43, 54, 61, 62], "declar": [2, 43], "make": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43], "easier": [2, 43], "predict": [2, 3, 35, 37, 39, 41, 43, 48, 51, 61], "also": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43, 61], "get": [2, 31, 32, 35, 37, 39, 41, 43], "datafram": [2, 35, 37, 39, 41, 43, 54], "understand": [2, 43], "str": [2, 6, 7, 10, 12, 13, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 29, 31, 32, 35, 37, 39, 41, 43, 54], "debug": [2, 37, 43], "method": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 37, 39, 41, 43, 54, 61], "attribut": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 37, 39, 41, 43], "properti": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 37, 39, 41, 43, 61], "version_record": [2, 35, 37, 39, 41, 43], "A": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41, 43, 61], "record": [2, 35, 37, 39, 41, 43], "import": [2, 35, 37, 39, 41, 43, 61, 62], "version": [2, 35, 37, 39, 41, 43, 61], "wa": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41, 43, 61], "built": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41, 43], "return": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 37, 39, 41, 43, 54, 56, 57], "kera": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 37, 39, 41, 43, 46], "up": [2, 8, 10, 14, 17, 23, 43, 61], "handler": [2, 43], "bia": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 41, 43, 48, 51], "term": [2, 16, 29, 37, 43, 61], "gradient": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 41, 43], "calcul": [2, 31, 32, 37, 41, 43, 47, 48, 49, 50, 51, 52, 61], "kernel_weight": [2, 31, 32, 37, 41, 43], "kernel": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 41, 43], "tensor": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 41, 43, 56, 57, 59, 61], "us": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 37, 39, 41, 43, 54, 56, 61, 62], "regular": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 41, 43, 61], "doe": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 41, 43, 61], "bias_weight": [2, 31, 32, 37, 41, 43], "model_param": [2, 43], "save": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 37, 39, 41, 43], "disc": [2, 43], "static": [2, 18, 24, 25, 31, 32, 35, 37, 39, 41, 43, 54, 61, 62], "seed": [2, 35, 37, 39, 41, 43], "": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41, 43, 61], "random": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 38, 39, 41, 43], "reproduc": [2, 35, 37, 39, 41, 43, 61], "result": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41, 43, 54, 61], "classmethod": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 39, 41, 43, 54], "get_val_split": [2, 43], "arg": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 43, 46], "shuffl": [2, 37, 39, 41, 43], "true": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41, 43, 56], "validation_split": [2, 37, 41, 43], "split": [2, 37, 43], "remov": [2, 43, 54], "appli": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43, 61], "along": [2, 7, 15, 19, 43], "1st": [2, 43], "np": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 43, 54], "ndarrai": [2, 3, 14, 24, 25, 26, 27, 35, 37, 39, 41, 43, 54], "one": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 37, 39, 41, 43, 54], "posit": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43], "ar": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 43, 54, 57, 61], "numpi": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 43], "arrai": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41, 43, 54], "thei": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43], "must": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 43, 54], "same": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 37, 39, 41, 43], "length": [2, 14, 28, 29, 43, 54], "flag": [2, 14, 35, 37, 39, 41, 43, 54], "randomli": [2, 37, 39, 41, 43], "subset": [2, 37, 39, 41, 43], "y": [2, 3, 16, 17, 18, 20, 29, 43], "take": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 43], "first": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43], "entri": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 43, 54], "float": [2, 10, 13, 14, 15, 16, 29, 35, 37, 39, 41, 43, 54], "fraction": [2, 37, 41, 43], "put": [2, 43], "out": [2, 35, 37, 39, 41, 43, 61], "itself": [2, 43], "two": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43], "format": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41, 43, 54], "correspond": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43], "make_batch": [2, 43], "n_batch": [2, 37, 43], "16": [2, 21, 22, 23, 37, 43], "batch_siz": [2, 37, 43], "uniqu": [2, 15, 19, 24, 25, 26, 27, 31, 32, 43, 54], "batch": [2, 3, 37, 39, 41, 43], "time": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 43, 56], "updat": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41, 43, 54, 61], "per": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 43], "epoch": [2, 37, 41, 43], "The": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 39, 41, 43, 54, 61], "mani": [2, 28, 37, 43, 54], "move": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 43], "onto": [2, 37, 43], "next": [2, 37, 43], "sampl": [2, 37, 43, 61], "redund": [2, 37, 43], "generatortyp": [2, 43], "gener": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41, 43, 61], "iter": [2, 37, 43], "ha": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43], "an": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 41, 43, 54, 61], "nd": [2, 43], "origin": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43, 54], "just": [2, 37, 43], "preflight_featur": [2, 43], "run": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41, 43, 61, 62], "preflight": [2, 37, 43], "check": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 43, 54, 58], "convers": [2, 43], "pd": [2, 37, 43, 54], "2d": [2, 3, 14, 37, 43, 54], "If": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 43, 54, 56, 57], "index": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 43], "ignor": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 43], "column": [2, 35, 37, 39, 41, 43, 54], "self": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41, 43], "df": [2, 37, 43], "convert": [2, 12, 29, 35, 37, 39, 41, 43, 54], "pass": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 37, 43], "algorithm": [2, 37, 43], "speak": [2, 3, 43], "alwai": [2, 3, 43], "observ": [2, 3, 11, 12, 26, 27, 43, 61], "channel": [2, 3, 8, 10, 16, 17, 23, 26, 27, 29, 43, 56, 57], "spatial": [2, 3, 7, 15, 21, 22, 24, 25, 26, 27, 43], "tempor": [2, 3, 7, 9, 11, 15, 22, 24, 25, 26, 27, 43], "intermedi": [2, 3, 43], "ax": [2, 3, 9, 15, 21, 22, 28, 43], "to_numpi": [2, 43], "training_lay": [2, 43], "src": [2, 41, 43], "normal": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 35, 37, 39, 41, 43, 54], "batchnorm": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43], "rnn": [2, 43], "routin": [2, 12, 43], "freez": [2, 43], "By": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43], "tf": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 41, 43, 56, 57], "fpath": [2, 43], "pickl": [2, 37, 39, 41, 43], "file": [2, 37, 39, 41, 43], "path": [2, 37, 39, 41, 43], "pkl": [2, 37, 43], "been": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 43], "physicsguidedneuralnetwork": [2, 37, 61, 62], "instanti": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 43], "descent": [3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43], "abstract": [3, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33], "placehold": 3, "loss": [3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 41, 43, 45, 46, 61], "function": [3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 41, 43, 45, 55, 61], "y_predict": [3, 37, 43, 47, 48, 49, 50, 51, 52], "calc_loss": [3, 43], "y_true": [3, 37, 43, 47, 48, 49, 50, 51, 52], "known": [3, 37, 43, 61], "compar": [3, 43, 61], "against": [3, 43, 54, 61], "run_gradient_desc": [3, 43], "mini": [3, 37, 43], "adjust": [3, 43, 61], "valu": [3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41, 43, 54, 57, 61], "kwarg": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 37, 39, 41, 43], "base": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 37, 39, 41, 43, 54, 59, 61], "block": [6, 7, 8, 10, 17, 20, 23], "num_head": [6, 7, 20], "head": [6, 7, 20], "key_dim": [6, 7, 20], "size": [6, 7, 12, 14, 20], "call": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "__call__": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "wrap": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "post": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "process": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43, 53, 54], "step": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "keyword": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "follow": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 61, 62], "reserv": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "boolean": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41, 54], "scalar": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "indic": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 54], "whether": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41, 58], "meant": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "infer": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "mask": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 56, 57], "some": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "do": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41, 43, 61], "its": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "previou": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43], "did": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "come": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "e": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 61, 62], "came": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "support": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "build": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 37, 39, 41], "rais": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "valueerror": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "invalid": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "runtimeerror": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "super": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "__init__": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "constructor": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "activity_regular": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "add_loss": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "add": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 43], "potenti": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "depend": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "instanc": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 43, 61], "mai": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "when": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 41, 61], "henc": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "reus": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "differ": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "b": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 58, 61], "automat": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 54], "keep": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "track": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "insid": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "subclass": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "which": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 41, 61], "case": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "mylay": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "def": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "ab": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 48, 51, 61], "reduce_mean": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "code": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "work": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41, 61], "distribut": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "treat": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "like": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "averag": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "across": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "replica": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "loop": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 56], "both": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41], "fit": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 39, 41, 43], "compliant": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "directli": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "dure": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 41], "construct": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "In": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "ani": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32], "symbol": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "abl": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "trace": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "back": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "These": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "becom": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "part": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "topologi": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "get_config": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 43], "shape": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 37, 41, 43, 56, 57], "your": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61, 62], "refer": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "variabl": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41, 61], "you": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "zero": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 43], "lambda": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "sinc": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "t": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41], "serial": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "d": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "rather": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "than": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "callabl": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "creat": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 43, 61, 62], "backward": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "compat": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "onli": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "add_metr": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "metric": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 41, 43, 45], "mymetriclay": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "my_metric_lay": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "mean": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41, 47, 48, 49, 50, 51, 52, 54, 57], "metric_1": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "reduce_sum": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "metric_2": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "via": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61, 62], "math_op": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "shown": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "below": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "becaus": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "we": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "cannot": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "addit": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "accept": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "aggreg": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "provid": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 39, 41, 54], "add_upd": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "op": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "varianc": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "eager": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "execut": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "enabl": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "fly": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33], "thu": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "need": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 35, 37, 39, 41], "later": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "disabl": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 43], "trainabl": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "mode": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "add_vari": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "deprec": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "NOT": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "alia": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37], "add_weight": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "dtype": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "constraint": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "use_resourc": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "synchron": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "variablesynchron": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "auto": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "variableaggregationv2": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "new": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 43, 54, 61, 62], "unspecifi": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "type": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43, 54], "trainable_vari": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "g": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 61], "bias": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 43], "non_trainable_vari": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "on_read": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "resourcevari": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "see": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "http": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "www": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "org": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "migrat": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "tf1_vs_tf2": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "resourcevariables_instead_of_referencevari": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "inform": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "constant": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "defin": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "current": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43, 61], "distributionstrategi": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "choos": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "how": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "variableaggreg": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "getter": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "collect": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "experimental_autocast": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "caching_devic": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "give": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "unsupport": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "input_shap": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "implement": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 56, 61], "state": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "creation": [6, 9, 11, 12, 13, 18, 19, 20, 24, 25, 26, 28], "between": [6, 9, 11, 12, 13, 18, 19, 20, 24, 25, 26, 28], "It": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "invok": [6, 9, 11, 12, 13, 18, 19, 20, 24, 25, 26, 28], "befor": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41], "typic": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "discret": [6, 9, 11, 12, 13, 18, 19, 20, 24, 25, 26, 28], "tensorshap": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "expect": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "build_from_config": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "config": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 43], "suppli": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "contain": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 61, 62], "other": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "associ": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "compute_dtyp": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "comput": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 59, 61], "equival": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "dtype_polici": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "unless": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "mix": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "precis": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "cast": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "caus": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "well": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "done": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "insert": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "own": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "often": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "perform": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "certain": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "intern": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "higher": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "float16": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "bfloat16": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "numer": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41, 43, 54], "stabil": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "still": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "compute_mask": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "compute_output_shap": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "happen": [6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "here": [6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "integ": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 54], "structur": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 43], "free": [6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "instead": [6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "compute_output_signatur": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "input_signatur": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "signatur": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "unlik": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "tensorspec": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "allow": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "doesn": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "framework": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 39, 41, 61], "fall": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "assum": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 56, 57], "nest": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41], "describ": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "candid": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "would": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 43], "transform": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 54, 61], "typeerror": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "non": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 57], "count_param": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "count": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "total": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 41], "compos": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "isn": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "yet": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 41, 43], "aren": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "variable_dtyp": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "polici": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "mixed_precis": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "dynam": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "finalize_st": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "final": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "after": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41], "overridden": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "restor": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "from_config": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "revers": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "capabl": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "handl": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 54], "connect": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32], "nor": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "set_weight": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "get_build_config": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "all": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 35, 37, 39, 41, 57], "lookup": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "tabl": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41], "re": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "write": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "unusu": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "wai": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "sure": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43], "alreadi": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32], "attempt": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "upon": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "serializ": [6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "configur": [6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "reinstanti": [6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "without": [6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43], "abov": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 43], "guarante": [6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "fresh": [6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "copi": [6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 37, 39, 41], "everi": [6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "caller": [6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "want": [6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "modifi": [6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "get_input_at": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "node_index": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "retriev": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "given": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41, 43, 54], "node": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "multipl": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "get_input_mask_at": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "get_input_shape_at": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "get_output_at": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "get_output_mask_at": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "get_output_shape_at": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "get_weight": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "repres": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "turn": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "similarli": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "parameter": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "matrix": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "vector": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41, 54], "anoth": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "layer_a": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "kernel_initi": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "constant_initi": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "a_out": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "convert_to_tensor": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "3": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61, 62], "float32": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "layer_b": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "b_out": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "20": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "30": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "inbound_nod": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "api": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "upstream": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "applic": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "exactli": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "incom": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "attributeerror": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "inbound": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "found": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "input_mask": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "input_spec": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "inputspec": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "consid": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "conv2d": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "rank": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "4": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "As": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "ndim": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 43], "now": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "try": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "nice": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "error": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 47, 48, 49, 50, 51, 52], "incompat": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "full": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "receiv": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "etc": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "thereof": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "load_own_vari": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "store": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "load_model": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "ad": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32], "access": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "safe": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "under": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "gradienttap": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "propag": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "l": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "ones": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "len": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "reduce_max": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "max": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "reduce_min": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "min": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "m": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "name_scop": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "sequenc": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "modul": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 53], "submodul": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33], "reflect": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "find": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "reason": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "wish": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "cach": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "don": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41], "chang": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "sort": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "recurs": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 39, 41], "breadth": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "non_trainable_weight": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "manual": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "outbound_nod": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "downstream": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "output_mask": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "output_shap": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "save_own_vari": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "where": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 54, 56, 57], "sub": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32], "c": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61, 62], "supports_mask": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "trainable_weight": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "themselv": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "with_name_scop": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "decor": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "enter": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "scope": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "mymodul": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "hasattr": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "w": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "matmul": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "produc": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61], "whose": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "mod": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "my_modul": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "axial": 7, "attent": [7, 8, 20], "multidimension": 7, "arxiv": [7, 10, 20, 23, 61], "1912": 7, "12180": 7, "convolut": [8, 14, 17, 23], "woo": 8, "sanghyun": 8, "et": [8, 20, 23, 61], "al": [8, 20, 23, 61], "proceed": [8, 61], "european": 8, "confer": 8, "vision": [8, 20], "eccv": 8, "2018": [8, 61], "ma": 8, "bing": 8, "gan": [8, 61], "adversari": 8, "artifici": 8, "intellig": 8, "secur": 8, "5th": 8, "icai": 8, "2019": [8, 23], "york": 8, "ny": 8, "usa": 8, "juli": 8, "26": 8, "28": 8, "5": [8, 18, 21, 22, 37, 43], "springer": 8, "publish": [8, 61], "ratio": [8, 17, 23], "filter": [8, 10, 17, 23], "divid": [8, 17, 23], "channel_attent": 8, "multipli": [8, 13, 17, 21, 22, 23], "spatiotemporal_attent": 8, "spatiotempor": [8, 9, 11, 15, 21, 22, 24, 25, 26, 27], "extra": [9, 14], "target": [9, 11, 37], "expand": [9, 21, 22], "n_observ": [9, 11, 21, 22, 37], "n_spatial_0": [9, 11, 21, 22], "n_spatial_1": [9, 11, 21, 22], "n_tempor": [9, 11, 22, 56, 57], "dim": 9, "oper": [9, 10, 11, 13, 14, 15, 16, 18, 22, 28, 33, 61], "init": 9, "fourier": 10, "fourcastnet": 10, "global": 10, "driven": [10, 61], "high": [10, 24, 25, 61], "resolut": [10, 24, 25, 26, 27], "weather": 10, "adapt": 10, "2202": 10, "11214": 10, "effici": [10, 61], "token": 10, "mixer": 10, "2111": 10, "13587": 10, "sparsity_threshold": 10, "sparsiti": 10, "shrinkag": 10, "softshrink": 10, "mlp": 10, "fourierneuraloper": 10, "5d": [11, 15, 22, 24, 25, 26, 27, 57], "hold": 11, "4d": [11, 21, 24, 25, 26, 27, 37, 57], "pad": [12, 14], "n": [12, 31, 32], "element": 12, "lead": [12, 32, 41], "trail": [12, 19, 57], "symmetr": 12, "silent": 12, "failur": 12, "larger": [12, 28], "might": 12, "prefer": 12, "larg": [12, 37, 43, 48, 51, 61], "chunk": 12, "much": 12, "slower": [12, 56], "issu": [12, 61, 62], "github": [12, 61, 62], "com": [12, 23, 61, 62], "91027": 12, "subtract": 13, "maximum": 13, "minimum": [13, 18], "equal": [13, 54], "lower": 13, "pool": 14, "gaussian": 14, "basic": 14, "smooth": 14, "fix": [14, 26], "window": 14, "limit": 14, "area": 14, "effect": 14, "pool_siz": 14, "pixel": 14, "stride": 14, "half": 14, "One": [14, 16, 35, 37, 39, 41], "insensit": 14, "evenli": 14, "left": 14, "right": 14, "down": 14, "height": 14, "width": 14, "sigma": 14, "make_kernel": 14, "side": 14, "sequenti": [14, 32, 41], "nois": 15, "stddev": 15, "standard": [15, 43], "deviat": 15, "tile": [15, 28], "request": [15, 41], "log": [16, 59], "invers": 16, "adder": [16, 24, 29], "exp": [16, 18], "idf": 16, "squeez": [17, 23], "excit": [17, 23], "se": [17, 23], "squeezeandexcit": 17, "spars": [17, 20, 26, 27], "soft": 18, "rang": 18, "skip": [19, 31, 32], "referenc": 19, "start": [19, 31, 32, 61, 62], "end": [19, 22, 31, 32], "identifi": [19, 24, 25, 26, 27, 31, 32], "endpoint": [19, 31, 32], "combin": [19, 26, 31, 32, 61], "concat": [19, 25], "manipul": 19, "accord": [19, 54], "scan": 20, "fan": 20, "qihang": 20, "prior": [20, 31, 32], "preprint": 20, "2405": 20, "13335": 20, "2024": 20, "possibl": [20, 35, 37, 39, 41, 54], "nan": [20, 26, 27, 56, 57], "spatial_mult": [21, 22], "expans": [21, 22], "un": [21, 22, 35, 37, 39, 41, 54], "pack": [21, 22], "123": [21, 22], "divis": [21, 22], "squar": [21, 22, 49, 52], "spatial_method": [21, 22], "either": [21, 22, 31, 32, 35, 37, 39, 41, 57], "depth_to_spac": [21, 22], "interpol": [21, 22], "imag": [21, 22], "resiz": [21, 22], "24": 22, "temporal_mult": 22, "48": 22, "temporal_method": 22, "depth_to_tim": 22, "unpack": 22, "t_roll": 22, "roll": 22, "24x": 22, "timestep": 22, "idt": 22, "12": 22, "36": 22, "60": 22, "longer": 22, "recommend": 22, "seri": 22, "begin": 22, "hu": [23, 61], "jie": 23, "1709": 23, "01507": 23, "pr\u00f6ve": 23, "paul": 23, "loui": 23, "medium": 23, "18": 23, "oct": 23, "2017": [23, 61], "towardsdatasci": 23, "9ef5e71eacd7": 23, "sup3r": [24, 25], "middl": [24, 25, 26, 27], "usual": [24, 25, 26, 27], "hi": [24, 25, 26, 27], "hi_res_add": 24, "enhanc": [24, 25, 26, 27], "ob": [24, 25, 26, 27], "spatial_1": [24, 25, 26, 27, 56, 57], "spatial_2": [24, 25, 26, 27, 56, 57], "concaten": [25, 26, 27], "hi_res_featur": [25, 26, 27], "condit": 26, "background": 26, "fill_method": [26, 27], "fill": [26, 27, 56, 57], "otherwis": 26, "idw": [26, 27, 56], "include_mask": [26, 27], "show": [26, 43], "real": [26, 27, 43], "exist": [26, 27], "learn": [27, 37, 39, 41, 43, 61], "embed": 27, "mutipl": 27, "continu": [27, 37, 43], "exogen": 27, "simpli": 27, "exo_featur": 27, "net": 27, "exo_data": 27, "emb": 27, "variou": 27, "imform": 27, "topographi": 27, "repeat": [28, 31, 32], "determin": [28, 54], "Be": 29, "interact": 29, "factor": 29, "7": [31, 32, 41], "parse_repeat": [31, 32], "pars": [31, 32, 35, 37, 39, 41], "possibli": [31, 32], "duplic": [31, 32, 54], "explod": [31, 32], "skip_lay": [31, 32], "skipconnect": [31, 32], "hidden_layer_kwarg": [31, 32], "reconstruct": [31, 32], "add_skip_lay": [31, 32], "look": [31, 32], "point": [31, 32, 43], "add_layer_by_class": [31, 32], "class_nam": [31, 32], "custom_lay": [31, 32], "add_lay": [31, 32], "layer_kwarg": [31, 32], "dnn": [31, 32], "05": [31, 32], "relu1": [31, 32], "compil": [31, 32, 41], "too": [31, 32], "hiddenlay": 32, "Will": [32, 37, 41, 43], "inputlay": [32, 37, 41, 43], "best": [32, 37, 41, 43], "regress": [32, 37, 39, 41, 43, 61], "input_layer_kwarg": 32, "output_layer_kwarg": 32, "9": [32, 41, 61, 62], "help": [33, 61], "ml": 33, "engin": [33, 61], "hot": [33, 35, 37, 39, 41, 54], "encod": [33, 35, 37, 39, 41, 54], "interfac": [34, 35, 37, 39, 41, 43], "label_nam": [35, 37, 39, 41], "norm_param": [35, 37, 39, 41], "one_hot_categori": [35, 37, 39, 41, 54], "obj": [35, 37, 39, 41], "map": [35, 37, 39, 41], "stdev": [35, 37, 39, 41, 54], "normalize_featur": [35, 37, 39, 41], "normalize_label": [35, 37, 39, 41], "categori": [35, 37, 39, 41, 54], "model_summari": [35, 37, 39, 41], "summari": [35, 37, 39, 41], "feature_dim": [35, 37, 39, 41], "label_dim": [35, 37, 39, 41], "normalization_paramet": [35, 37, 39, 41], "feature_mean": [35, 37, 39, 41], "feature_stdev": [35, 37, 39, 41], "label_mean": [35, 37, 39, 41], "label_stdev": [35, 37, 39, 41], "input_feature_nam": [35, 37, 39, 41], "one_hot_input_feature_nam": [35, 37, 39, 41], "one_hot_feature_nam": [35, 37, 39, 41], "dict_json_convert": [35, 37, 39, 41], "inp": [35, 37, 39, 41], "json": [35, 37, 39, 41], "dump": [35, 37, 39, 41], "make_one_hot_feature_nam": [35, 37, 39, 41], "one_hot": [35, 37, 39, 41, 54], "get_norm_param": [35, 37, 39, 41], "param": [35, 37, 39, 41], "get_mean": [35, 37, 39, 41], "get_stdev": [35, 37, 39, 41], "panda": [35, 37, 39, 41, 43], "item": [35, 37, 39, 41], "unnorm": [35, 37, 39, 41, 54], "nativ": [35, 37, 39, 41, 54], "parse_featur": [35, 37, 39, 41], "preprocess": [35, 37, 39, 41], "desir": [35, 37, 39, 41, 61, 62], "parse_label": [35, 37, 39, 41], "parse_kwarg": [35, 37, 39, 41], "predict_kwarg": [35, 37, 39, 41], "cl": [35, 37, 39, 41], "modelbas": [37, 39, 41], "model_class": 37, "histori": [37, 41, 43], "train_model": [37, 39, 41], "p": [37, 43, 61], "n_epoch": [37, 43], "run_preflight": [37, 43], "return_diagnost": [37, 43], "p_kwarg": [37, 43], "3d": 37, "n_timestep": 37, "test": [37, 41, 61, 62], "caution": 37, "rule": [37, 43], "supplement": [37, 43, 61], "select": [37, 39, 41, 43], "p_fun": [37, 43], "diagnost": [37, 43], "norm_label": [37, 41], "namespac": [37, 43], "save_model": [37, 39, 41], "directori": [37, 39, 41, 61, 62], "popul": 37, "set_loss_weight": [37, 43], "loss_weight": [37, 43], "v": [37, 43], "respect": [37, 43, 61], "simplifi": [37, 43], "mae": [37, 41, 43, 50], "optim": [37, 41, 43], "learning_r": [37, 41, 43], "kernel_reg_r": [37, 43], "kernel_reg_pow": [37, 43], "bias_reg_r": [37, 43], "bias_reg_pow": [37, 43], "fun": [37, 43], "datatyp": [37, 43], "loss_metr": [37, 43], "adam": [37, 41, 43], "rate": [37, 41, 43], "Not": [37, 43], "session": [37, 43], "increas": [37, 43], "disincentiv": [37, 43], "reduc": [37, 43], "complex": [37, 43], "power": [37, 43], "l1": [37, 43], "lasso": [37, 43], "l2": [37, 43], "ridg": [37, 43], "build_train": [37, 39, 41], "save_path": [37, 39, 41], "while": [37, 39, 41], "tfmodel": 37, "There": [37, 41], "forest": [38, 39], "scikit": 39, "sklearn": 39, "ensembl": 39, "randomforestregressor": 39, "compile_model": [39, 41], "unnormalize_predict": 39, "fit_kwarg": [39, 41], "compile_kwarg": [39, 41], "randomforest": 39, "001": 41, "mean_squared_error": 41, "mse": [41, 52], "optimizer_class": 41, "evalu": 41, "instant": 41, "100": 41, "early_stop": 41, "stop_kwarg": 41, "stop": 41, "improv": [41, 61], "callback": 41, "earlystop": 41, "monitor": 41, "val_loss": 41, "patienc": 41, "customnetwork": 43, "simpl": [43, 63], "deep": [43, 61], "p_fun_dummi": 43, "dummi": 43, "were": 43, "y_physic": 43, "row": 43, "carri": 43, "through": 43, "alongsid": 43, "p_loss": 43, "0d": 43, "preflight_data": 43, "kernel_reg_term": 43, "bias_reg_term": 43, "preflight_p_fun": 43, "flight": 43, "differenti": 43, "reset_histori": 43, "eras": 43, "reset": 43, "_p_fun": 43, "sum": 43, "nn_loss": 43, "binari": 46, "crossentropi": 46, "absolut": [47, 48, 50], "actual": [48, 51], "doesnt": [48, 51], "neg": [48, 51], "rel": [50, 51, 52], "mbe": 51, "arr": 54, "norm_arr": 54, "1d": 54, "native_arr": 54, "check_one_hot_categori": 54, "update_nam": 54, "oh": 54, "header": 54, "empti": 54, "being": 54, "col_name1": 54, "cat1": 54, "cat2": 54, "cat3": 54, "col_name2": 54, "other_cat1": 54, "other_cat2": 54, "process_one_hot": 54, "convert_int": 54, "return_ind": 54, "append": 54, "one_hot_ind": 54, "low_mem": 56, "n_ob": [56, 57], "low": 56, "memori": 56, "less": 56, "x_fill": [56, 57], "fi": 61, "geon": 61, "\u02c8fi": 61, "j\u0259n": 61, "noun": 61, "rare": 61, "mythic": 61, "bird": 61, "augment": 61, "tradit": 61, "theoret": 61, "scientif": 61, "softwar": 61, "scientist": 61, "easili": 61, "integr": 61, "machin": 61, "allevi": 61, "challeng": 61, "encount": 61, "pure": 61, "inconsist": 61, "troubl": 61, "scenario": 61, "detail": 61, "document": 61, "notebook": 61, "architectur": 61, "classif": 61, "even": 61, "cloud": 61, "host": 61, "jupyt": 61, "binder": 61, "At": 61, "nation": 61, "renew": 61, "energi": 61, "lab": 61, "nrel": [61, 62], "satellit": 61, "optic": 61, "mechanist": 61, "fail": 61, "radi": 61, "transfer": 61, "irradi": 61, "qualiti": 61, "ground": 61, "measur": 61, "seen": 61, "excel": 61, "rigor": 61, "experi": 61, "buster": 61, "2021": 61, "research": 61, "enforc": 61, "consist": 61, "lake": 61, "temperatur": 61, "topolog": 61, "extend": 61, "empir": 61, "literatur": 61, "relat": 61, "inspir": 61, "grant": 61, "mike": 61, "bannist": 61, "aron": 61, "habt": 61, "dylan": 61, "hetting": 61, "galen": 61, "maclaurin": 61, "michael": 61, "rossol": 61, "manajit": 61, "sengupta": 61, "yu": 61, "xie": 61, "accuraci": 61, "solar": 61, "radiat": 61, "databas": 61, "232": 61, "januari": 61, "15": 61, "2022": 61, "483": 61, "92": 61, "doi": 61, "1016": 61, "j": 61, "solen": 61, "004": 61, "jare": 61, "willard": 61, "xiaowei": 61, "jia": 61, "shaom": 61, "xu": 61, "steinbach": 61, "vipin": 61, "kumar": 61, "survei": 61, "2003": 61, "04919": 61, "2020": 61, "forssel": 61, "u": 61, "lindskog": 61, "semi": 61, "ofit": 61, "ifac": 61, "volum": 61, "1997": 61, "767": 61, "770": 61, "xinyu": 61, "haoji": 61, "saurabh": 61, "verma": 61, "zhi": 61, "li": 61, "zhang": 61, "powerflow": 61, "analysi": 61, "2002": 61, "00097v1": 61, "anuj": 61, "karpatn": 61, "william": 61, "watkin": 61, "jordan": 61, "read": 61, "pgnn": 61, "1710": 61, "11431v2": 61, "gowtham": 61, "atluri": 61, "jame": 61, "h": 61, "faghmou": 61, "arindam": 61, "banerje": 61, "auroop": 61, "ganguli": 61, "shashi": 61, "shekhar": 61, "nagiza": 61, "samatova": 61, "theori": 61, "scienc": 61, "paradigm": 61, "discoveri": 61, "ieee": 61, "transact": 61, "knowledg": 61, "29": 61, "2318": 61, "2331": 61, "justin": 61, "sirignano": 61, "jonathan": 61, "f": 61, "macart": 61, "freund": 61, "dpm": 61, "pde": 61, "eddi": 61, "simul": 61, "journal": 61, "423": 61, "issn": 61, "0021": 61, "9991": 61, "jcp": 61, "109811": 61, "v0": 61, "5281": 61, "zenodo": 61, "4498541": 61, "conda": [61, 62], "anaconda": [61, 62], "miniconda": [61, 62], "environ": [61, 62], "pip": [61, 62], "user": [61, 62], "report": [61, 62], "env": [61, 62], "clone": [61, 62], "repositori": [61, 62], "git": [61, 62], "navig": [61, 62], "repo": [61, 62], "checkout": [61, 62], "branch": [61, 62], "main": [61, 62], "setup": [61, 62], "py": [61, 62], "ipython": [61, 62], "command": [61, 62], "pytest": [61, 62], "author": 61, "laboratori": 61, "allianc": 61, "sustain": 61, "llc": 61, "depart": 61, "contract": 61, "No": 61, "de": 61, "ac36": 61, "08go28308": 61, "materi": 61, "offic": 61, "eer": 61, "technologi": 61, "system": 61, "subprogram": 61, "36598": 61, "view": 61, "express": 61, "articl": 61, "necessarili": 61, "govern": 61, "retain": 61, "public": 61, "nonexclus": 61, "paid": 61, "irrevoc": 61, "worldwid": 61, "licens": 61, "form": 61, "purpos": 61, "phygnn": 62, "develop": 63}, "objects": {"": [[0, 0, 0, "-", "phygnn"]], "phygnn": [[1, 0, 0, "-", "base"], [4, 0, 0, "-", "layers"], [33, 0, 0, "-", "model_interfaces"], [42, 0, 0, "-", "phygnn"], [44, 0, 0, "-", "utilities"]], "phygnn.base": [[2, 1, 1, "", "CustomNetwork"], [3, 1, 1, "", "GradientUtils"]], "phygnn.base.CustomNetwork": [[2, 2, 1, "", "bias_weights"], [2, 3, 1, "", "get_val_split"], [2, 2, 1, "", "kernel_weights"], [2, 2, 1, "", "layers"], [2, 2, 1, "", "layers_obj"], [2, 3, 1, "", "load"], [2, 3, 1, "", "make_batches"], [2, 2, 1, "", "model_params"], [2, 3, 1, "", "predict"], [2, 3, 1, "", "preflight_features"], [2, 3, 1, "", "save"], [2, 3, 1, "", "seed"], [2, 2, 1, "", "version_record"], [2, 2, 1, "", "weights"]], "phygnn.base.GradientUtils": [[3, 3, 1, "", "calc_loss"], [3, 3, 1, "", "predict"], [3, 3, 1, "", "run_gradient_descent"]], "phygnn.layers": [[5, 0, 0, "-", "custom_layers"], [30, 0, 0, "-", "handlers"]], "phygnn.layers.custom_layers": [[6, 1, 1, "", "Attention"], [7, 1, 1, "", "AxialAttentionBlock"], [8, 1, 1, "", "CBAM"], [9, 1, 1, "", "ExpandDims"], [10, 1, 1, "", "FNO"], [11, 1, 1, "", "FlattenAxis"], [12, 1, 1, "", "FlexiblePadding"], [13, 1, 1, "", "FunctionalLayer"], [14, 1, 1, "", "GaussianAveragePooling2D"], [15, 1, 1, "", "GaussianNoiseAxis"], [16, 1, 1, "", "LogTransform"], [17, 1, 1, "", "MaskedSqueezeAndExcitation"], [18, 1, 1, "", "SigLin"], [19, 1, 1, "", "SkipConnection"], [20, 1, 1, "", "SparseAttention"], [21, 1, 1, "", "SpatialExpansion"], [22, 1, 1, "", "SpatioTemporalExpansion"], [23, 1, 1, "", "SqueezeAndExcitation"], [24, 1, 1, "", "Sup3rAdder"], [25, 1, 1, "", "Sup3rConcat"], [26, 1, 1, "", "Sup3rConcatObs"], [27, 1, 1, "", "Sup3rObsModel"], [28, 1, 1, "", "TileLayer"], [29, 1, 1, "", "UnitConversion"]], "phygnn.layers.custom_layers.Attention": [[6, 3, 1, "", "__call__"], [6, 2, 1, "", "activity_regularizer"], [6, 3, 1, "", "add_loss"], [6, 3, 1, "", "add_metric"], [6, 3, 1, "", "add_update"], [6, 3, 1, "", "add_variable"], [6, 3, 1, "", "add_weight"], [6, 3, 1, "", "build"], [6, 3, 1, "", "build_from_config"], [6, 3, 1, "", "call"], [6, 2, 1, "", "compute_dtype"], [6, 3, 1, "", "compute_mask"], [6, 3, 1, "", "compute_output_shape"], [6, 3, 1, "", "compute_output_signature"], [6, 3, 1, "", "count_params"], [6, 2, 1, "", "dtype"], [6, 2, 1, "", "dtype_policy"], [6, 2, 1, "", "dynamic"], [6, 3, 1, "", "finalize_state"], [6, 3, 1, "", "from_config"], [6, 3, 1, "", "get_build_config"], [6, 3, 1, "", "get_config"], [6, 3, 1, "", "get_input_at"], [6, 3, 1, "", "get_input_mask_at"], [6, 3, 1, "", "get_input_shape_at"], [6, 3, 1, "", "get_output_at"], [6, 3, 1, "", "get_output_mask_at"], [6, 3, 1, "", "get_output_shape_at"], [6, 3, 1, "", "get_weights"], [6, 2, 1, "", "inbound_nodes"], [6, 2, 1, "", "input"], [6, 2, 1, "", "input_mask"], [6, 2, 1, "", "input_shape"], [6, 2, 1, "", "input_spec"], [6, 3, 1, "", "load_own_variables"], [6, 2, 1, "", "losses"], [6, 2, 1, "", "metrics"], [6, 2, 1, "", "name"], [6, 2, 1, "", "name_scope"], [6, 2, 1, "", "non_trainable_variables"], [6, 2, 1, "", "non_trainable_weights"], [6, 2, 1, "", "outbound_nodes"], [6, 2, 1, "", "output"], [6, 2, 1, "", "output_mask"], [6, 2, 1, "", "output_shape"], [6, 3, 1, "", "save_own_variables"], [6, 3, 1, "", "set_weights"], [6, 2, 1, "", "submodules"], [6, 2, 1, "", "supports_masking"], [6, 2, 1, "", "trainable_variables"], [6, 2, 1, "", "trainable_weights"], [6, 2, 1, "", "variable_dtype"], [6, 2, 1, "", "variables"], [6, 2, 1, "", "weights"], [6, 3, 1, "", "with_name_scope"]], "phygnn.layers.custom_layers.AxialAttentionBlock": [[7, 3, 1, "", "__call__"], [7, 2, 1, "", "activity_regularizer"], [7, 3, 1, "", "add_loss"], [7, 3, 1, "", "add_metric"], [7, 3, 1, "", "add_update"], [7, 3, 1, "", "add_variable"], [7, 3, 1, "", "add_weight"], [7, 3, 1, "", "build"], [7, 3, 1, "", "build_from_config"], [7, 3, 1, "", "call"], [7, 2, 1, "", "compute_dtype"], [7, 3, 1, "", "compute_mask"], [7, 3, 1, "", "compute_output_shape"], [7, 3, 1, "", "compute_output_signature"], [7, 3, 1, "", "count_params"], [7, 2, 1, "", "dtype"], [7, 2, 1, "", "dtype_policy"], [7, 2, 1, "", "dynamic"], [7, 3, 1, "", "finalize_state"], [7, 3, 1, "", "from_config"], [7, 3, 1, "", "get_build_config"], [7, 3, 1, "", "get_config"], [7, 3, 1, "", "get_input_at"], [7, 3, 1, "", "get_input_mask_at"], [7, 3, 1, "", "get_input_shape_at"], [7, 3, 1, "", "get_output_at"], [7, 3, 1, "", "get_output_mask_at"], [7, 3, 1, "", "get_output_shape_at"], [7, 3, 1, "", "get_weights"], [7, 2, 1, "", "inbound_nodes"], [7, 2, 1, "", "input"], [7, 2, 1, "", "input_mask"], [7, 2, 1, "", "input_shape"], [7, 2, 1, "", "input_spec"], [7, 3, 1, "", "load_own_variables"], [7, 2, 1, "", "losses"], [7, 2, 1, "", "metrics"], [7, 2, 1, "", "name"], [7, 2, 1, "", "name_scope"], [7, 2, 1, "", "non_trainable_variables"], [7, 2, 1, "", "non_trainable_weights"], [7, 2, 1, "", "outbound_nodes"], [7, 2, 1, "", "output"], [7, 2, 1, "", "output_mask"], [7, 2, 1, "", "output_shape"], [7, 3, 1, "", "save_own_variables"], [7, 3, 1, "", "set_weights"], [7, 2, 1, "", "submodules"], [7, 2, 1, "", "supports_masking"], [7, 2, 1, "", "trainable_variables"], [7, 2, 1, "", "trainable_weights"], [7, 2, 1, "", "variable_dtype"], [7, 2, 1, "", "variables"], [7, 2, 1, "", "weights"], [7, 3, 1, "", "with_name_scope"]], "phygnn.layers.custom_layers.CBAM": [[8, 3, 1, "", "__call__"], [8, 2, 1, "", "activity_regularizer"], [8, 3, 1, "", "add_loss"], [8, 3, 1, "", "add_metric"], [8, 3, 1, "", "add_update"], [8, 3, 1, "", "add_variable"], [8, 3, 1, "", "add_weight"], [8, 3, 1, "", "build"], [8, 3, 1, "", "build_from_config"], [8, 3, 1, "", "call"], [8, 3, 1, "", "channel_attention"], [8, 2, 1, "", "compute_dtype"], [8, 3, 1, "", "compute_mask"], [8, 3, 1, "", "compute_output_shape"], [8, 3, 1, "", "compute_output_signature"], [8, 3, 1, "", "count_params"], [8, 2, 1, "", "dtype"], [8, 2, 1, "", "dtype_policy"], [8, 2, 1, "", "dynamic"], [8, 3, 1, "", "finalize_state"], [8, 3, 1, "", "from_config"], [8, 3, 1, "", "get_build_config"], [8, 3, 1, "", "get_config"], [8, 3, 1, "", "get_input_at"], [8, 3, 1, "", "get_input_mask_at"], [8, 3, 1, "", "get_input_shape_at"], [8, 3, 1, "", "get_output_at"], [8, 3, 1, "", "get_output_mask_at"], [8, 3, 1, "", "get_output_shape_at"], [8, 3, 1, "", "get_weights"], [8, 2, 1, "", "inbound_nodes"], [8, 2, 1, "", "input"], [8, 2, 1, "", "input_mask"], [8, 2, 1, "", "input_shape"], [8, 2, 1, "", "input_spec"], [8, 3, 1, "", "load_own_variables"], [8, 2, 1, "", "losses"], [8, 2, 1, "", "metrics"], [8, 2, 1, "", "name"], [8, 2, 1, "", "name_scope"], [8, 2, 1, "", "non_trainable_variables"], [8, 2, 1, "", "non_trainable_weights"], [8, 2, 1, "", "outbound_nodes"], [8, 2, 1, "", "output"], [8, 2, 1, "", "output_mask"], [8, 2, 1, "", "output_shape"], [8, 3, 1, "", "save_own_variables"], [8, 3, 1, "", "set_weights"], [8, 3, 1, "", "spatiotemporal_attention"], [8, 2, 1, "", "submodules"], [8, 2, 1, "", "supports_masking"], [8, 2, 1, "", "trainable_variables"], [8, 2, 1, "", "trainable_weights"], [8, 2, 1, "", "variable_dtype"], [8, 2, 1, "", "variables"], [8, 2, 1, "", "weights"], [8, 3, 1, "", "with_name_scope"]], "phygnn.layers.custom_layers.ExpandDims": [[9, 3, 1, "", "__call__"], [9, 2, 1, "", "activity_regularizer"], [9, 3, 1, "", "add_loss"], [9, 3, 1, "", "add_metric"], [9, 3, 1, "", "add_update"], [9, 3, 1, "", "add_variable"], [9, 3, 1, "", "add_weight"], [9, 3, 1, "", "build"], [9, 3, 1, "", "build_from_config"], [9, 3, 1, "", "call"], [9, 2, 1, "", "compute_dtype"], [9, 3, 1, "", "compute_mask"], [9, 3, 1, "", "compute_output_shape"], [9, 3, 1, "", "compute_output_signature"], [9, 3, 1, "", "count_params"], [9, 2, 1, "", "dtype"], [9, 2, 1, "", "dtype_policy"], [9, 2, 1, "", "dynamic"], [9, 3, 1, "", "finalize_state"], [9, 3, 1, "", "from_config"], [9, 3, 1, "", "get_build_config"], [9, 3, 1, "", "get_config"], [9, 3, 1, "", "get_input_at"], [9, 3, 1, "", "get_input_mask_at"], [9, 3, 1, "", "get_input_shape_at"], [9, 3, 1, "", "get_output_at"], [9, 3, 1, "", "get_output_mask_at"], [9, 3, 1, "", "get_output_shape_at"], [9, 3, 1, "", "get_weights"], [9, 2, 1, "", "inbound_nodes"], [9, 2, 1, "", "input"], [9, 2, 1, "", "input_mask"], [9, 2, 1, "", "input_shape"], [9, 2, 1, "", "input_spec"], [9, 3, 1, "", "load_own_variables"], [9, 2, 1, "", "losses"], [9, 2, 1, "", "metrics"], [9, 2, 1, "", "name"], [9, 2, 1, "", "name_scope"], [9, 2, 1, "", "non_trainable_variables"], [9, 2, 1, "", "non_trainable_weights"], [9, 2, 1, "", "outbound_nodes"], [9, 2, 1, "", "output"], [9, 2, 1, "", "output_mask"], [9, 2, 1, "", "output_shape"], [9, 3, 1, "", "save_own_variables"], [9, 3, 1, "", "set_weights"], [9, 2, 1, "", "submodules"], [9, 2, 1, "", "supports_masking"], [9, 2, 1, "", "trainable_variables"], [9, 2, 1, "", "trainable_weights"], [9, 2, 1, "", "variable_dtype"], [9, 2, 1, "", "variables"], [9, 2, 1, "", "weights"], [9, 3, 1, "", "with_name_scope"]], "phygnn.layers.custom_layers.FNO": [[10, 3, 1, "", "__call__"], [10, 2, 1, "", "activity_regularizer"], [10, 3, 1, "", "add_loss"], [10, 3, 1, "", "add_metric"], [10, 3, 1, "", "add_update"], [10, 3, 1, "", "add_variable"], [10, 3, 1, "", "add_weight"], [10, 3, 1, "", "build"], [10, 3, 1, "", "build_from_config"], [10, 3, 1, "", "call"], [10, 2, 1, "", "compute_dtype"], [10, 3, 1, "", "compute_mask"], [10, 3, 1, "", "compute_output_shape"], [10, 3, 1, "", "compute_output_signature"], [10, 3, 1, "", "count_params"], [10, 2, 1, "", "dtype"], [10, 2, 1, "", "dtype_policy"], [10, 2, 1, "", "dynamic"], [10, 3, 1, "", "finalize_state"], [10, 3, 1, "", "from_config"], [10, 3, 1, "", "get_build_config"], [10, 3, 1, "", "get_config"], [10, 3, 1, "", "get_input_at"], [10, 3, 1, "", "get_input_mask_at"], [10, 3, 1, "", "get_input_shape_at"], [10, 3, 1, "", "get_output_at"], [10, 3, 1, "", "get_output_mask_at"], [10, 3, 1, "", "get_output_shape_at"], [10, 3, 1, "", "get_weights"], [10, 2, 1, "", "inbound_nodes"], [10, 2, 1, "", "input"], [10, 2, 1, "", "input_mask"], [10, 2, 1, "", "input_shape"], [10, 2, 1, "", "input_spec"], [10, 3, 1, "", "load_own_variables"], [10, 2, 1, "", "losses"], [10, 2, 1, "", "metrics"], [10, 2, 1, "", "name"], [10, 2, 1, "", "name_scope"], [10, 2, 1, "", "non_trainable_variables"], [10, 2, 1, "", "non_trainable_weights"], [10, 2, 1, "", "outbound_nodes"], [10, 2, 1, "", "output"], [10, 2, 1, "", "output_mask"], [10, 2, 1, "", "output_shape"], [10, 3, 1, "", "save_own_variables"], [10, 3, 1, "", "set_weights"], [10, 2, 1, "", "submodules"], [10, 2, 1, "", "supports_masking"], [10, 2, 1, "", "trainable_variables"], [10, 2, 1, "", "trainable_weights"], [10, 2, 1, "", "variable_dtype"], [10, 2, 1, "", "variables"], [10, 2, 1, "", "weights"], [10, 3, 1, "", "with_name_scope"]], "phygnn.layers.custom_layers.FlattenAxis": [[11, 3, 1, "", "__call__"], [11, 2, 1, "", "activity_regularizer"], [11, 3, 1, "", "add_loss"], [11, 3, 1, "", "add_metric"], [11, 3, 1, "", "add_update"], [11, 3, 1, "", "add_variable"], [11, 3, 1, "", "add_weight"], [11, 3, 1, "", "build"], [11, 3, 1, "", "build_from_config"], [11, 3, 1, "", "call"], [11, 2, 1, "", "compute_dtype"], [11, 3, 1, "", "compute_mask"], [11, 3, 1, "", "compute_output_shape"], [11, 3, 1, "", "compute_output_signature"], [11, 3, 1, "", "count_params"], [11, 2, 1, "", "dtype"], [11, 2, 1, "", "dtype_policy"], [11, 2, 1, "", "dynamic"], [11, 3, 1, "", "finalize_state"], [11, 3, 1, "", "from_config"], [11, 3, 1, "", "get_build_config"], [11, 3, 1, "", "get_config"], [11, 3, 1, "", "get_input_at"], [11, 3, 1, "", "get_input_mask_at"], [11, 3, 1, "", "get_input_shape_at"], [11, 3, 1, "", "get_output_at"], [11, 3, 1, "", "get_output_mask_at"], [11, 3, 1, "", "get_output_shape_at"], [11, 3, 1, "", "get_weights"], [11, 2, 1, "", "inbound_nodes"], [11, 2, 1, "", "input"], [11, 2, 1, "", "input_mask"], [11, 2, 1, "", "input_shape"], [11, 2, 1, "", "input_spec"], [11, 3, 1, "", "load_own_variables"], [11, 2, 1, "", "losses"], [11, 2, 1, "", "metrics"], [11, 2, 1, "", "name"], [11, 2, 1, "", "name_scope"], [11, 2, 1, "", "non_trainable_variables"], [11, 2, 1, "", "non_trainable_weights"], [11, 2, 1, "", "outbound_nodes"], [11, 2, 1, "", "output"], [11, 2, 1, "", "output_mask"], [11, 2, 1, "", "output_shape"], [11, 3, 1, "", "save_own_variables"], [11, 3, 1, "", "set_weights"], [11, 2, 1, "", "submodules"], [11, 2, 1, "", "supports_masking"], [11, 2, 1, "", "trainable_variables"], [11, 2, 1, "", "trainable_weights"], [11, 2, 1, "", "variable_dtype"], [11, 2, 1, "", "variables"], [11, 2, 1, "", "weights"], [11, 3, 1, "", "with_name_scope"]], "phygnn.layers.custom_layers.FlexiblePadding": [[12, 3, 1, "", "__call__"], [12, 2, 1, "", "activity_regularizer"], [12, 3, 1, "", "add_loss"], [12, 3, 1, "", "add_metric"], [12, 3, 1, "", "add_update"], [12, 3, 1, "", "add_variable"], [12, 3, 1, "", "add_weight"], [12, 3, 1, "", "build"], [12, 3, 1, "", "build_from_config"], [12, 3, 1, "", "call"], [12, 2, 1, "", "compute_dtype"], [12, 3, 1, "", "compute_mask"], [12, 3, 1, "", "compute_output_shape"], [12, 3, 1, "", "compute_output_signature"], [12, 3, 1, "", "count_params"], [12, 2, 1, "", "dtype"], [12, 2, 1, "", "dtype_policy"], [12, 2, 1, "", "dynamic"], [12, 3, 1, "", "finalize_state"], [12, 3, 1, "", "from_config"], [12, 3, 1, "", "get_build_config"], [12, 3, 1, "", "get_config"], [12, 3, 1, "", "get_input_at"], [12, 3, 1, "", "get_input_mask_at"], [12, 3, 1, "", "get_input_shape_at"], [12, 3, 1, "", "get_output_at"], [12, 3, 1, "", "get_output_mask_at"], [12, 3, 1, "", "get_output_shape_at"], [12, 3, 1, "", "get_weights"], [12, 2, 1, "", "inbound_nodes"], [12, 2, 1, "", "input"], [12, 2, 1, "", "input_mask"], [12, 2, 1, "", "input_shape"], [12, 2, 1, "", "input_spec"], [12, 3, 1, "", "load_own_variables"], [12, 2, 1, "", "losses"], [12, 2, 1, "", "metrics"], [12, 2, 1, "", "name"], [12, 2, 1, "", "name_scope"], [12, 2, 1, "", "non_trainable_variables"], [12, 2, 1, "", "non_trainable_weights"], [12, 2, 1, "", "outbound_nodes"], [12, 2, 1, "", "output"], [12, 2, 1, "", "output_mask"], [12, 2, 1, "", "output_shape"], [12, 3, 1, "", "save_own_variables"], [12, 3, 1, "", "set_weights"], [12, 2, 1, "", "submodules"], [12, 2, 1, "", "supports_masking"], [12, 2, 1, "", "trainable_variables"], [12, 2, 1, "", "trainable_weights"], [12, 2, 1, "", "variable_dtype"], [12, 2, 1, "", "variables"], [12, 2, 1, "", "weights"], [12, 3, 1, "", "with_name_scope"]], "phygnn.layers.custom_layers.FunctionalLayer": [[13, 3, 1, "", "__call__"], [13, 2, 1, "", "activity_regularizer"], [13, 3, 1, "", "add_loss"], [13, 3, 1, "", "add_metric"], [13, 3, 1, "", "add_update"], [13, 3, 1, "", "add_variable"], [13, 3, 1, "", "add_weight"], [13, 3, 1, "", "build"], [13, 3, 1, "", "build_from_config"], [13, 3, 1, "", "call"], [13, 2, 1, "", "compute_dtype"], [13, 3, 1, "", "compute_mask"], [13, 3, 1, "", "compute_output_shape"], [13, 3, 1, "", "compute_output_signature"], [13, 3, 1, "", "count_params"], [13, 2, 1, "", "dtype"], [13, 2, 1, "", "dtype_policy"], [13, 2, 1, "", "dynamic"], [13, 3, 1, "", "finalize_state"], [13, 3, 1, "", "from_config"], [13, 3, 1, "", "get_build_config"], [13, 3, 1, "", "get_config"], [13, 3, 1, "", "get_input_at"], [13, 3, 1, "", "get_input_mask_at"], [13, 3, 1, "", "get_input_shape_at"], [13, 3, 1, "", "get_output_at"], [13, 3, 1, "", "get_output_mask_at"], [13, 3, 1, "", "get_output_shape_at"], [13, 3, 1, "", "get_weights"], [13, 2, 1, "", "inbound_nodes"], [13, 2, 1, "", "input"], [13, 2, 1, "", "input_mask"], [13, 2, 1, "", "input_shape"], [13, 2, 1, "", "input_spec"], [13, 3, 1, "", "load_own_variables"], [13, 2, 1, "", "losses"], [13, 2, 1, "", "metrics"], [13, 2, 1, "", "name"], [13, 2, 1, "", "name_scope"], [13, 2, 1, "", "non_trainable_variables"], [13, 2, 1, "", "non_trainable_weights"], [13, 2, 1, "", "outbound_nodes"], [13, 2, 1, "", "output"], [13, 2, 1, "", "output_mask"], [13, 2, 1, "", "output_shape"], [13, 3, 1, "", "save_own_variables"], [13, 3, 1, "", "set_weights"], [13, 2, 1, "", "submodules"], [13, 2, 1, "", "supports_masking"], [13, 2, 1, "", "trainable_variables"], [13, 2, 1, "", "trainable_weights"], [13, 2, 1, "", "variable_dtype"], [13, 2, 1, "", "variables"], [13, 2, 1, "", "weights"], [13, 3, 1, "", "with_name_scope"]], "phygnn.layers.custom_layers.GaussianAveragePooling2D": [[14, 3, 1, "", "__call__"], [14, 2, 1, "", "activity_regularizer"], [14, 3, 1, "", "add_loss"], [14, 3, 1, "", "add_metric"], [14, 3, 1, "", "add_update"], [14, 3, 1, "", "add_variable"], [14, 3, 1, "", "add_weight"], [14, 3, 1, "", "build"], [14, 3, 1, "", "build_from_config"], [14, 3, 1, "", "call"], [14, 2, 1, "", "compute_dtype"], [14, 3, 1, "", "compute_mask"], [14, 3, 1, "", "compute_output_shape"], [14, 3, 1, "", "compute_output_signature"], [14, 3, 1, "", "count_params"], [14, 2, 1, "", "dtype"], [14, 2, 1, "", "dtype_policy"], [14, 2, 1, "", "dynamic"], [14, 3, 1, "", "finalize_state"], [14, 3, 1, "", "from_config"], [14, 3, 1, "", "get_build_config"], [14, 3, 1, "", "get_config"], [14, 3, 1, "", "get_input_at"], [14, 3, 1, "", "get_input_mask_at"], [14, 3, 1, "", "get_input_shape_at"], [14, 3, 1, "", "get_output_at"], [14, 3, 1, "", "get_output_mask_at"], [14, 3, 1, "", "get_output_shape_at"], [14, 3, 1, "", "get_weights"], [14, 2, 1, "", "inbound_nodes"], [14, 2, 1, "", "input"], [14, 2, 1, "", "input_mask"], [14, 2, 1, "", "input_shape"], [14, 2, 1, "", "input_spec"], [14, 3, 1, "", "load_own_variables"], [14, 2, 1, "", "losses"], [14, 3, 1, "", "make_kernel"], [14, 2, 1, "", "metrics"], [14, 2, 1, "", "name"], [14, 2, 1, "", "name_scope"], [14, 2, 1, "", "non_trainable_variables"], [14, 2, 1, "", "non_trainable_weights"], [14, 2, 1, "", "outbound_nodes"], [14, 2, 1, "", "output"], [14, 2, 1, "", "output_mask"], [14, 2, 1, "", "output_shape"], [14, 3, 1, "", "save_own_variables"], [14, 3, 1, "", "set_weights"], [14, 2, 1, "", "submodules"], [14, 2, 1, "", "supports_masking"], [14, 2, 1, "", "trainable_variables"], [14, 2, 1, "", "trainable_weights"], [14, 2, 1, "", "variable_dtype"], [14, 2, 1, "", "variables"], [14, 2, 1, "", "weights"], [14, 3, 1, "", "with_name_scope"]], "phygnn.layers.custom_layers.GaussianNoiseAxis": [[15, 3, 1, "", "__call__"], [15, 2, 1, "", "activity_regularizer"], [15, 3, 1, "", "add_loss"], [15, 3, 1, "", "add_metric"], [15, 3, 1, "", "add_update"], [15, 3, 1, "", "add_variable"], [15, 3, 1, "", "add_weight"], [15, 3, 1, "", "build"], [15, 3, 1, "", "build_from_config"], [15, 3, 1, "", "call"], [15, 2, 1, "", "compute_dtype"], [15, 3, 1, "", "compute_mask"], [15, 3, 1, "", "compute_output_shape"], [15, 3, 1, "", "compute_output_signature"], [15, 3, 1, "", "count_params"], [15, 2, 1, "", "dtype"], [15, 2, 1, "", "dtype_policy"], [15, 2, 1, "", "dynamic"], [15, 3, 1, "", "finalize_state"], [15, 3, 1, "", "from_config"], [15, 3, 1, "", "get_build_config"], [15, 3, 1, "", "get_config"], [15, 3, 1, "", "get_input_at"], [15, 3, 1, "", "get_input_mask_at"], [15, 3, 1, "", "get_input_shape_at"], [15, 3, 1, "", "get_output_at"], [15, 3, 1, "", "get_output_mask_at"], [15, 3, 1, "", "get_output_shape_at"], [15, 3, 1, "", "get_weights"], [15, 2, 1, "", "inbound_nodes"], [15, 2, 1, "", "input"], [15, 2, 1, "", "input_mask"], [15, 2, 1, "", "input_shape"], [15, 2, 1, "", "input_spec"], [15, 3, 1, "", "load_own_variables"], [15, 2, 1, "", "losses"], [15, 2, 1, "", "metrics"], [15, 2, 1, "", "name"], [15, 2, 1, "", "name_scope"], [15, 2, 1, "", "non_trainable_variables"], [15, 2, 1, "", "non_trainable_weights"], [15, 2, 1, "", "outbound_nodes"], [15, 2, 1, "", "output"], [15, 2, 1, "", "output_mask"], [15, 2, 1, "", "output_shape"], [15, 3, 1, "", "save_own_variables"], [15, 3, 1, "", "set_weights"], [15, 2, 1, "", "submodules"], [15, 2, 1, "", "supports_masking"], [15, 2, 1, "", "trainable_variables"], [15, 2, 1, "", "trainable_weights"], [15, 2, 1, "", "variable_dtype"], [15, 2, 1, "", "variables"], [15, 2, 1, "", "weights"], [15, 3, 1, "", "with_name_scope"]], "phygnn.layers.custom_layers.LogTransform": [[16, 3, 1, "", "__call__"], [16, 2, 1, "", "activity_regularizer"], [16, 3, 1, "", "add_loss"], [16, 3, 1, "", "add_metric"], [16, 3, 1, "", "add_update"], [16, 3, 1, "", "add_variable"], [16, 3, 1, "", "add_weight"], [16, 3, 1, "", "build"], [16, 3, 1, "", "build_from_config"], [16, 3, 1, "", "call"], [16, 2, 1, "", "compute_dtype"], [16, 3, 1, "", "compute_mask"], [16, 3, 1, "", "compute_output_shape"], [16, 3, 1, "", "compute_output_signature"], [16, 3, 1, "", "count_params"], [16, 2, 1, "", "dtype"], [16, 2, 1, "", "dtype_policy"], [16, 2, 1, "", "dynamic"], [16, 3, 1, "", "finalize_state"], [16, 3, 1, "", "from_config"], [16, 3, 1, "", "get_build_config"], [16, 3, 1, "", "get_config"], [16, 3, 1, "", "get_input_at"], [16, 3, 1, "", "get_input_mask_at"], [16, 3, 1, "", "get_input_shape_at"], [16, 3, 1, "", "get_output_at"], [16, 3, 1, "", "get_output_mask_at"], [16, 3, 1, "", "get_output_shape_at"], [16, 3, 1, "", "get_weights"], [16, 2, 1, "", "inbound_nodes"], [16, 2, 1, "", "input"], [16, 2, 1, "", "input_mask"], [16, 2, 1, "", "input_shape"], [16, 2, 1, "", "input_spec"], [16, 3, 1, "", "load_own_variables"], [16, 2, 1, "", "losses"], [16, 2, 1, "", "metrics"], [16, 2, 1, "", "name"], [16, 2, 1, "", "name_scope"], [16, 2, 1, "", "non_trainable_variables"], [16, 2, 1, "", "non_trainable_weights"], [16, 2, 1, "", "outbound_nodes"], [16, 2, 1, "", "output"], [16, 2, 1, "", "output_mask"], [16, 2, 1, "", "output_shape"], [16, 3, 1, "", "save_own_variables"], [16, 3, 1, "", "set_weights"], [16, 2, 1, "", "submodules"], [16, 2, 1, "", "supports_masking"], [16, 2, 1, "", "trainable_variables"], [16, 2, 1, "", "trainable_weights"], [16, 2, 1, "", "variable_dtype"], [16, 2, 1, "", "variables"], [16, 2, 1, "", "weights"], [16, 3, 1, "", "with_name_scope"]], "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation": [[17, 3, 1, "", "__call__"], [17, 2, 1, "", "activity_regularizer"], [17, 3, 1, "", "add_loss"], [17, 3, 1, "", "add_metric"], [17, 3, 1, "", "add_update"], [17, 3, 1, "", "add_variable"], [17, 3, 1, "", "add_weight"], [17, 3, 1, "", "build"], [17, 3, 1, "", "build_from_config"], [17, 3, 1, "", "call"], [17, 2, 1, "", "compute_dtype"], [17, 3, 1, "", "compute_mask"], [17, 3, 1, "", "compute_output_shape"], [17, 3, 1, "", "compute_output_signature"], [17, 3, 1, "", "count_params"], [17, 2, 1, "", "dtype"], [17, 2, 1, "", "dtype_policy"], [17, 2, 1, "", "dynamic"], [17, 3, 1, "", "finalize_state"], [17, 3, 1, "", "from_config"], [17, 3, 1, "", "get_build_config"], [17, 3, 1, "", "get_config"], [17, 3, 1, "", "get_input_at"], [17, 3, 1, "", "get_input_mask_at"], [17, 3, 1, "", "get_input_shape_at"], [17, 3, 1, "", "get_output_at"], [17, 3, 1, "", "get_output_mask_at"], [17, 3, 1, "", "get_output_shape_at"], [17, 3, 1, "", "get_weights"], [17, 2, 1, "", "inbound_nodes"], [17, 2, 1, "", "input"], [17, 2, 1, "", "input_mask"], [17, 2, 1, "", "input_shape"], [17, 2, 1, "", "input_spec"], [17, 3, 1, "", "load_own_variables"], [17, 2, 1, "", "losses"], [17, 2, 1, "", "metrics"], [17, 2, 1, "", "name"], [17, 2, 1, "", "name_scope"], [17, 2, 1, "", "non_trainable_variables"], [17, 2, 1, "", "non_trainable_weights"], [17, 2, 1, "", "outbound_nodes"], [17, 2, 1, "", "output"], [17, 2, 1, "", "output_mask"], [17, 2, 1, "", "output_shape"], [17, 3, 1, "", "save_own_variables"], [17, 3, 1, "", "set_weights"], [17, 2, 1, "", "submodules"], [17, 2, 1, "", "supports_masking"], [17, 2, 1, "", "trainable_variables"], [17, 2, 1, "", "trainable_weights"], [17, 2, 1, "", "variable_dtype"], [17, 2, 1, "", "variables"], [17, 2, 1, "", "weights"], [17, 3, 1, "", "with_name_scope"]], "phygnn.layers.custom_layers.SigLin": [[18, 3, 1, "", "__call__"], [18, 2, 1, "", "activity_regularizer"], [18, 3, 1, "", "add_loss"], [18, 3, 1, "", "add_metric"], [18, 3, 1, "", "add_update"], [18, 3, 1, "", "add_variable"], [18, 3, 1, "", "add_weight"], [18, 3, 1, "", "build"], [18, 3, 1, "", "build_from_config"], [18, 3, 1, "", "call"], [18, 2, 1, "", "compute_dtype"], [18, 3, 1, "", "compute_mask"], [18, 3, 1, "", "compute_output_shape"], [18, 3, 1, "", "compute_output_signature"], [18, 3, 1, "", "count_params"], [18, 2, 1, "", "dtype"], [18, 2, 1, "", "dtype_policy"], [18, 2, 1, "", "dynamic"], [18, 3, 1, "", "finalize_state"], [18, 3, 1, "", "from_config"], [18, 3, 1, "", "get_build_config"], [18, 3, 1, "", "get_config"], [18, 3, 1, "", "get_input_at"], [18, 3, 1, "", "get_input_mask_at"], [18, 3, 1, "", "get_input_shape_at"], [18, 3, 1, "", "get_output_at"], [18, 3, 1, "", "get_output_mask_at"], [18, 3, 1, "", "get_output_shape_at"], [18, 3, 1, "", "get_weights"], [18, 2, 1, "", "inbound_nodes"], [18, 2, 1, "", "input"], [18, 2, 1, "", "input_mask"], [18, 2, 1, "", "input_shape"], [18, 2, 1, "", "input_spec"], [18, 3, 1, "", "load_own_variables"], [18, 2, 1, "", "losses"], [18, 2, 1, "", "metrics"], [18, 2, 1, "", "name"], [18, 2, 1, "", "name_scope"], [18, 2, 1, "", "non_trainable_variables"], [18, 2, 1, "", "non_trainable_weights"], [18, 2, 1, "", "outbound_nodes"], [18, 2, 1, "", "output"], [18, 2, 1, "", "output_mask"], [18, 2, 1, "", "output_shape"], [18, 3, 1, "", "save_own_variables"], [18, 3, 1, "", "set_weights"], [18, 2, 1, "", "submodules"], [18, 2, 1, "", "supports_masking"], [18, 2, 1, "", "trainable_variables"], [18, 2, 1, "", "trainable_weights"], [18, 2, 1, "", "variable_dtype"], [18, 2, 1, "", "variables"], [18, 2, 1, "", "weights"], [18, 3, 1, "", "with_name_scope"]], "phygnn.layers.custom_layers.SkipConnection": [[19, 3, 1, "", "__call__"], [19, 2, 1, "", "activity_regularizer"], [19, 3, 1, "", "add_loss"], [19, 3, 1, "", "add_metric"], [19, 3, 1, "", "add_update"], [19, 3, 1, "", "add_variable"], [19, 3, 1, "", "add_weight"], [19, 3, 1, "", "build"], [19, 3, 1, "", "build_from_config"], [19, 3, 1, "", "call"], [19, 2, 1, "", "compute_dtype"], [19, 3, 1, "", "compute_mask"], [19, 3, 1, "", "compute_output_shape"], [19, 3, 1, "", "compute_output_signature"], [19, 3, 1, "", "count_params"], [19, 2, 1, "", "dtype"], [19, 2, 1, "", "dtype_policy"], [19, 2, 1, "", "dynamic"], [19, 3, 1, "", "finalize_state"], [19, 3, 1, "", "from_config"], [19, 3, 1, "", "get_build_config"], [19, 3, 1, "", "get_config"], [19, 3, 1, "", "get_input_at"], [19, 3, 1, "", "get_input_mask_at"], [19, 3, 1, "", "get_input_shape_at"], [19, 3, 1, "", "get_output_at"], [19, 3, 1, "", "get_output_mask_at"], [19, 3, 1, "", "get_output_shape_at"], [19, 3, 1, "", "get_weights"], [19, 2, 1, "", "inbound_nodes"], [19, 2, 1, "", "input"], [19, 2, 1, "", "input_mask"], [19, 2, 1, "", "input_shape"], [19, 2, 1, "", "input_spec"], [19, 3, 1, "", "load_own_variables"], [19, 2, 1, "", "losses"], [19, 2, 1, "", "metrics"], [19, 2, 1, "", "name"], [19, 2, 1, "", "name_scope"], [19, 2, 1, "", "non_trainable_variables"], [19, 2, 1, "", "non_trainable_weights"], [19, 2, 1, "", "outbound_nodes"], [19, 2, 1, "", "output"], [19, 2, 1, "", "output_mask"], [19, 2, 1, "", "output_shape"], [19, 3, 1, "", "save_own_variables"], [19, 3, 1, "", "set_weights"], [19, 2, 1, "", "submodules"], [19, 2, 1, "", "supports_masking"], [19, 2, 1, "", "trainable_variables"], [19, 2, 1, "", "trainable_weights"], [19, 2, 1, "", "variable_dtype"], [19, 2, 1, "", "variables"], [19, 2, 1, "", "weights"], [19, 3, 1, "", "with_name_scope"]], "phygnn.layers.custom_layers.SparseAttention": [[20, 3, 1, "", "__call__"], [20, 2, 1, "", "activity_regularizer"], [20, 3, 1, "", "add_loss"], [20, 3, 1, "", "add_metric"], [20, 3, 1, "", "add_update"], [20, 3, 1, "", "add_variable"], [20, 3, 1, "", "add_weight"], [20, 3, 1, "", "build"], [20, 3, 1, "", "build_from_config"], [20, 3, 1, "", "call"], [20, 2, 1, "", "compute_dtype"], [20, 3, 1, "", "compute_mask"], [20, 3, 1, "", "compute_output_shape"], [20, 3, 1, "", "compute_output_signature"], [20, 3, 1, "", "count_params"], [20, 2, 1, "", "dtype"], [20, 2, 1, "", "dtype_policy"], [20, 2, 1, "", "dynamic"], [20, 3, 1, "", "finalize_state"], [20, 3, 1, "", "from_config"], [20, 3, 1, "", "get_build_config"], [20, 3, 1, "", "get_config"], [20, 3, 1, "", "get_input_at"], [20, 3, 1, "", "get_input_mask_at"], [20, 3, 1, "", "get_input_shape_at"], [20, 3, 1, "", "get_output_at"], [20, 3, 1, "", "get_output_mask_at"], [20, 3, 1, "", "get_output_shape_at"], [20, 3, 1, "", "get_weights"], [20, 2, 1, "", "inbound_nodes"], [20, 2, 1, "", "input"], [20, 2, 1, "", "input_mask"], [20, 2, 1, "", "input_shape"], [20, 2, 1, "", "input_spec"], [20, 3, 1, "", "load_own_variables"], [20, 2, 1, "", "losses"], [20, 2, 1, "", "metrics"], [20, 2, 1, "", "name"], [20, 2, 1, "", "name_scope"], [20, 2, 1, "", "non_trainable_variables"], [20, 2, 1, "", "non_trainable_weights"], [20, 2, 1, "", "outbound_nodes"], [20, 2, 1, "", "output"], [20, 2, 1, "", "output_mask"], [20, 2, 1, "", "output_shape"], [20, 3, 1, "", "save_own_variables"], [20, 3, 1, "", "set_weights"], [20, 2, 1, "", "submodules"], [20, 2, 1, "", "supports_masking"], [20, 2, 1, "", "trainable_variables"], [20, 2, 1, "", "trainable_weights"], [20, 2, 1, "", "variable_dtype"], [20, 2, 1, "", "variables"], [20, 2, 1, "", "weights"], [20, 3, 1, "", "with_name_scope"]], "phygnn.layers.custom_layers.SpatialExpansion": [[21, 3, 1, "", "__call__"], [21, 2, 1, "", "activity_regularizer"], [21, 3, 1, "", "add_loss"], [21, 3, 1, "", "add_metric"], [21, 3, 1, "", "add_update"], [21, 3, 1, "", "add_variable"], [21, 3, 1, "", "add_weight"], [21, 3, 1, "", "build"], [21, 3, 1, "", "build_from_config"], [21, 3, 1, "", "call"], [21, 2, 1, "", "compute_dtype"], [21, 3, 1, "", "compute_mask"], [21, 3, 1, "", "compute_output_shape"], [21, 3, 1, "", "compute_output_signature"], [21, 3, 1, "", "count_params"], [21, 2, 1, "", "dtype"], [21, 2, 1, "", "dtype_policy"], [21, 2, 1, "", "dynamic"], [21, 3, 1, "", "finalize_state"], [21, 3, 1, "", "from_config"], [21, 3, 1, "", "get_build_config"], [21, 3, 1, "", "get_config"], [21, 3, 1, "", "get_input_at"], [21, 3, 1, "", "get_input_mask_at"], [21, 3, 1, "", "get_input_shape_at"], [21, 3, 1, "", "get_output_at"], [21, 3, 1, "", "get_output_mask_at"], [21, 3, 1, "", "get_output_shape_at"], [21, 3, 1, "", "get_weights"], [21, 2, 1, "", "inbound_nodes"], [21, 2, 1, "", "input"], [21, 2, 1, "", "input_mask"], [21, 2, 1, "", "input_shape"], [21, 2, 1, "", "input_spec"], [21, 3, 1, "", "load_own_variables"], [21, 2, 1, "", "losses"], [21, 2, 1, "", "metrics"], [21, 2, 1, "", "name"], [21, 2, 1, "", "name_scope"], [21, 2, 1, "", "non_trainable_variables"], [21, 2, 1, "", "non_trainable_weights"], [21, 2, 1, "", "outbound_nodes"], [21, 2, 1, "", "output"], [21, 2, 1, "", "output_mask"], [21, 2, 1, "", "output_shape"], [21, 3, 1, "", "save_own_variables"], [21, 3, 1, "", "set_weights"], [21, 2, 1, "", "submodules"], [21, 2, 1, "", "supports_masking"], [21, 2, 1, "", "trainable_variables"], [21, 2, 1, "", "trainable_weights"], [21, 2, 1, "", "variable_dtype"], [21, 2, 1, "", "variables"], [21, 2, 1, "", "weights"], [21, 3, 1, "", "with_name_scope"]], "phygnn.layers.custom_layers.SpatioTemporalExpansion": [[22, 3, 1, "", "__call__"], [22, 2, 1, "", "activity_regularizer"], [22, 3, 1, "", "add_loss"], [22, 3, 1, "", "add_metric"], [22, 3, 1, "", "add_update"], [22, 3, 1, "", "add_variable"], [22, 3, 1, "", "add_weight"], [22, 3, 1, "", "build"], [22, 3, 1, "", "build_from_config"], [22, 3, 1, "", "call"], [22, 2, 1, "", "compute_dtype"], [22, 3, 1, "", "compute_mask"], [22, 3, 1, "", "compute_output_shape"], [22, 3, 1, "", "compute_output_signature"], [22, 3, 1, "", "count_params"], [22, 2, 1, "", "dtype"], [22, 2, 1, "", "dtype_policy"], [22, 2, 1, "", "dynamic"], [22, 3, 1, "", "finalize_state"], [22, 3, 1, "", "from_config"], [22, 3, 1, "", "get_build_config"], [22, 3, 1, "", "get_config"], [22, 3, 1, "", "get_input_at"], [22, 3, 1, "", "get_input_mask_at"], [22, 3, 1, "", "get_input_shape_at"], [22, 3, 1, "", "get_output_at"], [22, 3, 1, "", "get_output_mask_at"], [22, 3, 1, "", "get_output_shape_at"], [22, 3, 1, "", "get_weights"], [22, 2, 1, "", "inbound_nodes"], [22, 2, 1, "", "input"], [22, 2, 1, "", "input_mask"], [22, 2, 1, "", "input_shape"], [22, 2, 1, "", "input_spec"], [22, 3, 1, "", "load_own_variables"], [22, 2, 1, "", "losses"], [22, 2, 1, "", "metrics"], [22, 2, 1, "", "name"], [22, 2, 1, "", "name_scope"], [22, 2, 1, "", "non_trainable_variables"], [22, 2, 1, "", "non_trainable_weights"], [22, 2, 1, "", "outbound_nodes"], [22, 2, 1, "", "output"], [22, 2, 1, "", "output_mask"], [22, 2, 1, "", "output_shape"], [22, 3, 1, "", "save_own_variables"], [22, 3, 1, "", "set_weights"], [22, 2, 1, "", "submodules"], [22, 2, 1, "", "supports_masking"], [22, 2, 1, "", "trainable_variables"], [22, 2, 1, "", "trainable_weights"], [22, 2, 1, "", "variable_dtype"], [22, 2, 1, "", "variables"], [22, 2, 1, "", "weights"], [22, 3, 1, "", "with_name_scope"]], "phygnn.layers.custom_layers.SqueezeAndExcitation": [[23, 3, 1, "", "__call__"], [23, 2, 1, "", "activity_regularizer"], [23, 3, 1, "", "add_loss"], [23, 3, 1, "", "add_metric"], [23, 3, 1, "", "add_update"], [23, 3, 1, "", "add_variable"], [23, 3, 1, "", "add_weight"], [23, 3, 1, "", "build"], [23, 3, 1, "", "build_from_config"], [23, 3, 1, "", "call"], [23, 2, 1, "", "compute_dtype"], [23, 3, 1, "", "compute_mask"], [23, 3, 1, "", "compute_output_shape"], [23, 3, 1, "", "compute_output_signature"], [23, 3, 1, "", "count_params"], [23, 2, 1, "", "dtype"], [23, 2, 1, "", "dtype_policy"], [23, 2, 1, "", "dynamic"], [23, 3, 1, "", "finalize_state"], [23, 3, 1, "", "from_config"], [23, 3, 1, "", "get_build_config"], [23, 3, 1, "", "get_config"], [23, 3, 1, "", "get_input_at"], [23, 3, 1, "", "get_input_mask_at"], [23, 3, 1, "", "get_input_shape_at"], [23, 3, 1, "", "get_output_at"], [23, 3, 1, "", "get_output_mask_at"], [23, 3, 1, "", "get_output_shape_at"], [23, 3, 1, "", "get_weights"], [23, 2, 1, "", "inbound_nodes"], [23, 2, 1, "", "input"], [23, 2, 1, "", "input_mask"], [23, 2, 1, "", "input_shape"], [23, 2, 1, "", "input_spec"], [23, 3, 1, "", "load_own_variables"], [23, 2, 1, "", "losses"], [23, 2, 1, "", "metrics"], [23, 2, 1, "", "name"], [23, 2, 1, "", "name_scope"], [23, 2, 1, "", "non_trainable_variables"], [23, 2, 1, "", "non_trainable_weights"], [23, 2, 1, "", "outbound_nodes"], [23, 2, 1, "", "output"], [23, 2, 1, "", "output_mask"], [23, 2, 1, "", "output_shape"], [23, 3, 1, "", "save_own_variables"], [23, 3, 1, "", "set_weights"], [23, 2, 1, "", "submodules"], [23, 2, 1, "", "supports_masking"], [23, 2, 1, "", "trainable_variables"], [23, 2, 1, "", "trainable_weights"], [23, 2, 1, "", "variable_dtype"], [23, 2, 1, "", "variables"], [23, 2, 1, "", "weights"], [23, 3, 1, "", "with_name_scope"]], "phygnn.layers.custom_layers.Sup3rAdder": [[24, 3, 1, "", "__call__"], [24, 2, 1, "", "activity_regularizer"], [24, 3, 1, "", "add_loss"], [24, 3, 1, "", "add_metric"], [24, 3, 1, "", "add_update"], [24, 3, 1, "", "add_variable"], [24, 3, 1, "", "add_weight"], [24, 3, 1, "", "build"], [24, 3, 1, "", "build_from_config"], [24, 3, 1, "", "call"], [24, 2, 1, "", "compute_dtype"], [24, 3, 1, "", "compute_mask"], [24, 3, 1, "", "compute_output_shape"], [24, 3, 1, "", "compute_output_signature"], [24, 3, 1, "", "count_params"], [24, 2, 1, "", "dtype"], [24, 2, 1, "", "dtype_policy"], [24, 2, 1, "", "dynamic"], [24, 3, 1, "", "finalize_state"], [24, 3, 1, "", "from_config"], [24, 3, 1, "", "get_build_config"], [24, 3, 1, "", "get_config"], [24, 3, 1, "", "get_input_at"], [24, 3, 1, "", "get_input_mask_at"], [24, 3, 1, "", "get_input_shape_at"], [24, 3, 1, "", "get_output_at"], [24, 3, 1, "", "get_output_mask_at"], [24, 3, 1, "", "get_output_shape_at"], [24, 3, 1, "", "get_weights"], [24, 2, 1, "", "inbound_nodes"], [24, 2, 1, "", "input"], [24, 2, 1, "", "input_mask"], [24, 2, 1, "", "input_shape"], [24, 2, 1, "", "input_spec"], [24, 3, 1, "", "load_own_variables"], [24, 2, 1, "", "losses"], [24, 2, 1, "", "metrics"], [24, 2, 1, "", "name"], [24, 2, 1, "", "name_scope"], [24, 2, 1, "", "non_trainable_variables"], [24, 2, 1, "", "non_trainable_weights"], [24, 2, 1, "", "outbound_nodes"], [24, 2, 1, "", "output"], [24, 2, 1, "", "output_mask"], [24, 2, 1, "", "output_shape"], [24, 3, 1, "", "save_own_variables"], [24, 3, 1, "", "set_weights"], [24, 2, 1, "", "submodules"], [24, 2, 1, "", "supports_masking"], [24, 2, 1, "", "trainable_variables"], [24, 2, 1, "", "trainable_weights"], [24, 2, 1, "", "variable_dtype"], [24, 2, 1, "", "variables"], [24, 2, 1, "", "weights"], [24, 3, 1, "", "with_name_scope"]], "phygnn.layers.custom_layers.Sup3rConcat": [[25, 3, 1, "", "__call__"], [25, 2, 1, "", "activity_regularizer"], [25, 3, 1, "", "add_loss"], [25, 3, 1, "", "add_metric"], [25, 3, 1, "", "add_update"], [25, 3, 1, "", "add_variable"], [25, 3, 1, "", "add_weight"], [25, 3, 1, "", "build"], [25, 3, 1, "", "build_from_config"], [25, 3, 1, "", "call"], [25, 2, 1, "", "compute_dtype"], [25, 3, 1, "", "compute_mask"], [25, 3, 1, "", "compute_output_shape"], [25, 3, 1, "", "compute_output_signature"], [25, 3, 1, "", "count_params"], [25, 2, 1, "", "dtype"], [25, 2, 1, "", "dtype_policy"], [25, 2, 1, "", "dynamic"], [25, 3, 1, "", "finalize_state"], [25, 3, 1, "", "from_config"], [25, 3, 1, "", "get_build_config"], [25, 3, 1, "", "get_config"], [25, 3, 1, "", "get_input_at"], [25, 3, 1, "", "get_input_mask_at"], [25, 3, 1, "", "get_input_shape_at"], [25, 3, 1, "", "get_output_at"], [25, 3, 1, "", "get_output_mask_at"], [25, 3, 1, "", "get_output_shape_at"], [25, 3, 1, "", "get_weights"], [25, 2, 1, "", "inbound_nodes"], [25, 2, 1, "", "input"], [25, 2, 1, "", "input_mask"], [25, 2, 1, "", "input_shape"], [25, 2, 1, "", "input_spec"], [25, 3, 1, "", "load_own_variables"], [25, 2, 1, "", "losses"], [25, 2, 1, "", "metrics"], [25, 2, 1, "", "name"], [25, 2, 1, "", "name_scope"], [25, 2, 1, "", "non_trainable_variables"], [25, 2, 1, "", "non_trainable_weights"], [25, 2, 1, "", "outbound_nodes"], [25, 2, 1, "", "output"], [25, 2, 1, "", "output_mask"], [25, 2, 1, "", "output_shape"], [25, 3, 1, "", "save_own_variables"], [25, 3, 1, "", "set_weights"], [25, 2, 1, "", "submodules"], [25, 2, 1, "", "supports_masking"], [25, 2, 1, "", "trainable_variables"], [25, 2, 1, "", "trainable_weights"], [25, 2, 1, "", "variable_dtype"], [25, 2, 1, "", "variables"], [25, 2, 1, "", "weights"], [25, 3, 1, "", "with_name_scope"]], "phygnn.layers.custom_layers.Sup3rConcatObs": [[26, 3, 1, "", "__call__"], [26, 2, 1, "", "activity_regularizer"], [26, 3, 1, "", "add_loss"], [26, 3, 1, "", "add_metric"], [26, 3, 1, "", "add_update"], [26, 3, 1, "", "add_variable"], [26, 3, 1, "", "add_weight"], [26, 3, 1, "", "build"], [26, 3, 1, "", "build_from_config"], [26, 3, 1, "", "call"], [26, 2, 1, "", "compute_dtype"], [26, 3, 1, "", "compute_mask"], [26, 3, 1, "", "compute_output_shape"], [26, 3, 1, "", "compute_output_signature"], [26, 3, 1, "", "count_params"], [26, 2, 1, "", "dtype"], [26, 2, 1, "", "dtype_policy"], [26, 2, 1, "", "dynamic"], [26, 3, 1, "", "finalize_state"], [26, 3, 1, "", "from_config"], [26, 3, 1, "", "get_build_config"], [26, 3, 1, "", "get_config"], [26, 3, 1, "", "get_input_at"], [26, 3, 1, "", "get_input_mask_at"], [26, 3, 1, "", "get_input_shape_at"], [26, 3, 1, "", "get_output_at"], [26, 3, 1, "", "get_output_mask_at"], [26, 3, 1, "", "get_output_shape_at"], [26, 3, 1, "", "get_weights"], [26, 2, 1, "", "inbound_nodes"], [26, 2, 1, "", "input"], [26, 2, 1, "", "input_mask"], [26, 2, 1, "", "input_shape"], [26, 2, 1, "", "input_spec"], [26, 3, 1, "", "load_own_variables"], [26, 2, 1, "", "losses"], [26, 2, 1, "", "metrics"], [26, 2, 1, "", "name"], [26, 2, 1, "", "name_scope"], [26, 2, 1, "", "non_trainable_variables"], [26, 2, 1, "", "non_trainable_weights"], [26, 2, 1, "", "outbound_nodes"], [26, 2, 1, "", "output"], [26, 2, 1, "", "output_mask"], [26, 2, 1, "", "output_shape"], [26, 3, 1, "", "save_own_variables"], [26, 3, 1, "", "set_weights"], [26, 2, 1, "", "submodules"], [26, 2, 1, "", "supports_masking"], [26, 2, 1, "", "trainable_variables"], [26, 2, 1, "", "trainable_weights"], [26, 2, 1, "", "variable_dtype"], [26, 2, 1, "", "variables"], [26, 2, 1, "", "weights"], [26, 3, 1, "", "with_name_scope"]], "phygnn.layers.custom_layers.Sup3rObsModel": [[27, 3, 1, "", "__call__"], [27, 2, 1, "", "activity_regularizer"], [27, 3, 1, "", "add_loss"], [27, 3, 1, "", "add_metric"], [27, 3, 1, "", "add_update"], [27, 3, 1, "", "add_variable"], [27, 3, 1, "", "add_weight"], [27, 3, 1, "", "build"], [27, 3, 1, "", "build_from_config"], [27, 3, 1, "", "call"], [27, 2, 1, "", "compute_dtype"], [27, 3, 1, "", "compute_mask"], [27, 3, 1, "", "compute_output_shape"], [27, 3, 1, "", "compute_output_signature"], [27, 3, 1, "", "count_params"], [27, 2, 1, "", "dtype"], [27, 2, 1, "", "dtype_policy"], [27, 2, 1, "", "dynamic"], [27, 3, 1, "", "finalize_state"], [27, 3, 1, "", "from_config"], [27, 3, 1, "", "get_build_config"], [27, 3, 1, "", "get_config"], [27, 3, 1, "", "get_input_at"], [27, 3, 1, "", "get_input_mask_at"], [27, 3, 1, "", "get_input_shape_at"], [27, 3, 1, "", "get_output_at"], [27, 3, 1, "", "get_output_mask_at"], [27, 3, 1, "", "get_output_shape_at"], [27, 3, 1, "", "get_weights"], [27, 2, 1, "", "inbound_nodes"], [27, 2, 1, "", "input"], [27, 2, 1, "", "input_mask"], [27, 2, 1, "", "input_shape"], [27, 2, 1, "", "input_spec"], [27, 3, 1, "", "load_own_variables"], [27, 2, 1, "", "losses"], [27, 2, 1, "", "metrics"], [27, 2, 1, "", "name"], [27, 2, 1, "", "name_scope"], [27, 2, 1, "", "non_trainable_variables"], [27, 2, 1, "", "non_trainable_weights"], [27, 2, 1, "", "outbound_nodes"], [27, 2, 1, "", "output"], [27, 2, 1, "", "output_mask"], [27, 2, 1, "", "output_shape"], [27, 3, 1, "", "save_own_variables"], [27, 3, 1, "", "set_weights"], [27, 2, 1, "", "submodules"], [27, 2, 1, "", "supports_masking"], [27, 2, 1, "", "trainable_variables"], [27, 2, 1, "", "trainable_weights"], [27, 2, 1, "", "variable_dtype"], [27, 2, 1, "", "variables"], [27, 2, 1, "", "weights"], [27, 3, 1, "", "with_name_scope"]], "phygnn.layers.custom_layers.TileLayer": [[28, 3, 1, "", "__call__"], [28, 2, 1, "", "activity_regularizer"], [28, 3, 1, "", "add_loss"], [28, 3, 1, "", "add_metric"], [28, 3, 1, "", "add_update"], [28, 3, 1, "", "add_variable"], [28, 3, 1, "", "add_weight"], [28, 3, 1, "", "build"], [28, 3, 1, "", "build_from_config"], [28, 3, 1, "", "call"], [28, 2, 1, "", "compute_dtype"], [28, 3, 1, "", "compute_mask"], [28, 3, 1, "", "compute_output_shape"], [28, 3, 1, "", "compute_output_signature"], [28, 3, 1, "", "count_params"], [28, 2, 1, "", "dtype"], [28, 2, 1, "", "dtype_policy"], [28, 2, 1, "", "dynamic"], [28, 3, 1, "", "finalize_state"], [28, 3, 1, "", "from_config"], [28, 3, 1, "", "get_build_config"], [28, 3, 1, "", "get_config"], [28, 3, 1, "", "get_input_at"], [28, 3, 1, "", "get_input_mask_at"], [28, 3, 1, "", "get_input_shape_at"], [28, 3, 1, "", "get_output_at"], [28, 3, 1, "", "get_output_mask_at"], [28, 3, 1, "", "get_output_shape_at"], [28, 3, 1, "", "get_weights"], [28, 2, 1, "", "inbound_nodes"], [28, 2, 1, "", "input"], [28, 2, 1, "", "input_mask"], [28, 2, 1, "", "input_shape"], [28, 2, 1, "", "input_spec"], [28, 3, 1, "", "load_own_variables"], [28, 2, 1, "", "losses"], [28, 2, 1, "", "metrics"], [28, 2, 1, "", "name"], [28, 2, 1, "", "name_scope"], [28, 2, 1, "", "non_trainable_variables"], [28, 2, 1, "", "non_trainable_weights"], [28, 2, 1, "", "outbound_nodes"], [28, 2, 1, "", "output"], [28, 2, 1, "", "output_mask"], [28, 2, 1, "", "output_shape"], [28, 3, 1, "", "save_own_variables"], [28, 3, 1, "", "set_weights"], [28, 2, 1, "", "submodules"], [28, 2, 1, "", "supports_masking"], [28, 2, 1, "", "trainable_variables"], [28, 2, 1, "", "trainable_weights"], [28, 2, 1, "", "variable_dtype"], [28, 2, 1, "", "variables"], [28, 2, 1, "", "weights"], [28, 3, 1, "", "with_name_scope"]], "phygnn.layers.custom_layers.UnitConversion": [[29, 3, 1, "", "__call__"], [29, 2, 1, "", "activity_regularizer"], [29, 3, 1, "", "add_loss"], [29, 3, 1, "", "add_metric"], [29, 3, 1, "", "add_update"], [29, 3, 1, "", "add_variable"], [29, 3, 1, "", "add_weight"], [29, 3, 1, "", "build"], [29, 3, 1, "", "build_from_config"], [29, 3, 1, "", "call"], [29, 2, 1, "", "compute_dtype"], [29, 3, 1, "", "compute_mask"], [29, 3, 1, "", "compute_output_shape"], [29, 3, 1, "", "compute_output_signature"], [29, 3, 1, "", "count_params"], [29, 2, 1, "", "dtype"], [29, 2, 1, "", "dtype_policy"], [29, 2, 1, "", "dynamic"], [29, 3, 1, "", "finalize_state"], [29, 3, 1, "", "from_config"], [29, 3, 1, "", "get_build_config"], [29, 3, 1, "", "get_config"], [29, 3, 1, "", "get_input_at"], [29, 3, 1, "", "get_input_mask_at"], [29, 3, 1, "", "get_input_shape_at"], [29, 3, 1, "", "get_output_at"], [29, 3, 1, "", "get_output_mask_at"], [29, 3, 1, "", "get_output_shape_at"], [29, 3, 1, "", "get_weights"], [29, 2, 1, "", "inbound_nodes"], [29, 2, 1, "", "input"], [29, 2, 1, "", "input_mask"], [29, 2, 1, "", "input_shape"], [29, 2, 1, "", "input_spec"], [29, 3, 1, "", "load_own_variables"], [29, 2, 1, "", "losses"], [29, 2, 1, "", "metrics"], [29, 2, 1, "", "name"], [29, 2, 1, "", "name_scope"], [29, 2, 1, "", "non_trainable_variables"], [29, 2, 1, "", "non_trainable_weights"], [29, 2, 1, "", "outbound_nodes"], [29, 2, 1, "", "output"], [29, 2, 1, "", "output_mask"], [29, 2, 1, "", "output_shape"], [29, 3, 1, "", "save_own_variables"], [29, 3, 1, "", "set_weights"], [29, 2, 1, "", "submodules"], [29, 2, 1, "", "supports_masking"], [29, 2, 1, "", "trainable_variables"], [29, 2, 1, "", "trainable_weights"], [29, 2, 1, "", "variable_dtype"], [29, 2, 1, "", "variables"], [29, 2, 1, "", "weights"], [29, 3, 1, "", "with_name_scope"]], "phygnn.layers.handlers": [[31, 1, 1, "", "HiddenLayers"], [32, 1, 1, "", "Layers"]], "phygnn.layers.handlers.HiddenLayers": [[31, 3, 1, "", "add_layer"], [31, 3, 1, "", "add_layer_by_class"], [31, 3, 1, "", "add_skip_layer"], [31, 2, 1, "", "bias_weights"], [31, 3, 1, "", "compile"], [31, 2, 1, "", "hidden_layer_kwargs"], [31, 2, 1, "", "kernel_weights"], [31, 2, 1, "", "layers"], [31, 3, 1, "", "parse_repeats"], [31, 2, 1, "", "skip_layers"], [31, 2, 1, "", "weights"]], "phygnn.layers.handlers.Layers": [[32, 3, 1, "", "add_layer"], [32, 3, 1, "", "add_layer_by_class"], [32, 3, 1, "", "add_skip_layer"], [32, 2, 1, "", "bias_weights"], [32, 3, 1, "", "compile"], [32, 2, 1, "", "hidden_layer_kwargs"], [32, 2, 1, "", "input_layer_kwargs"], [32, 2, 1, "", "kernel_weights"], [32, 2, 1, "", "layers"], [32, 2, 1, "", "output_layer_kwargs"], [32, 3, 1, "", "parse_repeats"], [32, 2, 1, "", "skip_layers"], [32, 2, 1, "", "weights"]], "phygnn.model_interfaces": [[34, 0, 0, "-", "base_model"], [36, 0, 0, "-", "phygnn_model"], [38, 0, 0, "-", "random_forest_model"], [40, 0, 0, "-", "tf_model"]], "phygnn.model_interfaces.base_model": [[35, 1, 1, "", "ModelBase"]], "phygnn.model_interfaces.base_model.ModelBase": [[35, 3, 1, "", "dict_json_convert"], [35, 2, 1, "", "feature_dims"], [35, 2, 1, "", "feature_means"], [35, 2, 1, "", "feature_names"], [35, 2, 1, "", "feature_stdevs"], [35, 3, 1, "", "get_mean"], [35, 3, 1, "", "get_norm_params"], [35, 3, 1, "", "get_stdev"], [35, 2, 1, "", "input_feature_names"], [35, 2, 1, "", "label_dims"], [35, 2, 1, "", "label_means"], [35, 2, 1, "", "label_names"], [35, 2, 1, "", "label_stdevs"], [35, 3, 1, "", "make_one_hot_feature_names"], [35, 2, 1, "", "means"], [35, 2, 1, "", "model"], [35, 2, 1, "", "model_summary"], [35, 2, 1, "", "normalization_parameters"], [35, 3, 1, "", "normalize"], [35, 2, 1, "", "normalize_features"], [35, 2, 1, "", "normalize_labels"], [35, 2, 1, "", "one_hot_categories"], [35, 2, 1, "", "one_hot_feature_names"], [35, 2, 1, "", "one_hot_input_feature_names"], [35, 3, 1, "", "parse_features"], [35, 3, 1, "", "parse_labels"], [35, 3, 1, "", "predict"], [35, 3, 1, "", "seed"], [35, 2, 1, "", "stdevs"], [35, 3, 1, "", "unnormalize"], [35, 2, 1, "", "version_record"]], "phygnn.model_interfaces.phygnn_model": [[37, 1, 1, "", "PhygnnModel"]], "phygnn.model_interfaces.phygnn_model.PhygnnModel": [[37, 4, 1, "", "MODEL_CLASS"], [37, 2, 1, "", "bias_weights"], [37, 3, 1, "", "build"], [37, 3, 1, "", "build_trained"], [37, 3, 1, "", "dict_json_convert"], [37, 2, 1, "", "feature_dims"], [37, 2, 1, "", "feature_means"], [37, 2, 1, "", "feature_names"], [37, 2, 1, "", "feature_stdevs"], [37, 3, 1, "", "get_mean"], [37, 3, 1, "", "get_norm_params"], [37, 3, 1, "", "get_stdev"], [37, 2, 1, "", "history"], [37, 2, 1, "", "input_feature_names"], [37, 2, 1, "", "kernel_weights"], [37, 2, 1, "", "label_dims"], [37, 2, 1, "", "label_means"], [37, 2, 1, "", "label_names"], [37, 2, 1, "", "label_stdevs"], [37, 2, 1, "", "layers"], [37, 3, 1, "", "load"], [37, 3, 1, "", "make_one_hot_feature_names"], [37, 2, 1, "", "means"], [37, 2, 1, "", "model"], [37, 2, 1, "", "model_summary"], [37, 2, 1, "", "normalization_parameters"], [37, 3, 1, "", "normalize"], [37, 2, 1, "", "normalize_features"], [37, 2, 1, "", "normalize_labels"], [37, 2, 1, "", "one_hot_categories"], [37, 2, 1, "", "one_hot_feature_names"], [37, 2, 1, "", "one_hot_input_feature_names"], [37, 3, 1, "", "parse_features"], [37, 3, 1, "", "parse_labels"], [37, 3, 1, "", "predict"], [37, 3, 1, "", "save_model"], [37, 3, 1, "", "seed"], [37, 3, 1, "", "set_loss_weights"], [37, 2, 1, "", "stdevs"], [37, 3, 1, "", "train_model"], [37, 3, 1, "", "unnormalize"], [37, 2, 1, "", "version_record"], [37, 2, 1, "", "weights"]], "phygnn.model_interfaces.random_forest_model": [[39, 1, 1, "", "RandomForestModel"]], "phygnn.model_interfaces.random_forest_model.RandomForestModel": [[39, 3, 1, "", "build_trained"], [39, 3, 1, "", "compile_model"], [39, 3, 1, "", "dict_json_convert"], [39, 2, 1, "", "feature_dims"], [39, 2, 1, "", "feature_means"], [39, 2, 1, "", "feature_names"], [39, 2, 1, "", "feature_stdevs"], [39, 3, 1, "", "get_mean"], [39, 3, 1, "", "get_norm_params"], [39, 3, 1, "", "get_stdev"], [39, 2, 1, "", "input_feature_names"], [39, 2, 1, "", "label_dims"], [39, 2, 1, "", "label_means"], [39, 2, 1, "", "label_names"], [39, 2, 1, "", "label_stdevs"], [39, 3, 1, "", "load"], [39, 3, 1, "", "make_one_hot_feature_names"], [39, 2, 1, "", "means"], [39, 2, 1, "", "model"], [39, 2, 1, "", "model_summary"], [39, 2, 1, "", "normalization_parameters"], [39, 3, 1, "", "normalize"], [39, 2, 1, "", "normalize_features"], [39, 2, 1, "", "normalize_labels"], [39, 2, 1, "", "one_hot_categories"], [39, 2, 1, "", "one_hot_feature_names"], [39, 2, 1, "", "one_hot_input_feature_names"], [39, 3, 1, "", "parse_features"], [39, 3, 1, "", "parse_labels"], [39, 3, 1, "", "predict"], [39, 3, 1, "", "save_model"], [39, 3, 1, "", "seed"], [39, 2, 1, "", "stdevs"], [39, 3, 1, "", "train_model"], [39, 3, 1, "", "unnormalize"], [39, 3, 1, "", "unnormalize_prediction"], [39, 2, 1, "", "version_record"]], "phygnn.model_interfaces.tf_model": [[41, 1, 1, "", "TfModel"]], "phygnn.model_interfaces.tf_model.TfModel": [[41, 2, 1, "", "bias_weights"], [41, 3, 1, "", "build"], [41, 3, 1, "", "build_trained"], [41, 3, 1, "", "compile_model"], [41, 3, 1, "", "dict_json_convert"], [41, 2, 1, "", "feature_dims"], [41, 2, 1, "", "feature_means"], [41, 2, 1, "", "feature_names"], [41, 2, 1, "", "feature_stdevs"], [41, 3, 1, "", "get_mean"], [41, 3, 1, "", "get_norm_params"], [41, 3, 1, "", "get_stdev"], [41, 2, 1, "", "history"], [41, 2, 1, "", "input_feature_names"], [41, 2, 1, "", "kernel_weights"], [41, 2, 1, "", "label_dims"], [41, 2, 1, "", "label_means"], [41, 2, 1, "", "label_names"], [41, 2, 1, "", "label_stdevs"], [41, 2, 1, "", "layers"], [41, 3, 1, "", "load"], [41, 3, 1, "", "make_one_hot_feature_names"], [41, 2, 1, "", "means"], [41, 2, 1, "", "model"], [41, 2, 1, "", "model_summary"], [41, 2, 1, "", "normalization_parameters"], [41, 3, 1, "", "normalize"], [41, 2, 1, "", "normalize_features"], [41, 2, 1, "", "normalize_labels"], [41, 2, 1, "", "one_hot_categories"], [41, 2, 1, "", "one_hot_feature_names"], [41, 2, 1, "", "one_hot_input_feature_names"], [41, 3, 1, "", "parse_features"], [41, 3, 1, "", "parse_labels"], [41, 3, 1, "", "predict"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "seed"], [41, 2, 1, "", "stdevs"], [41, 3, 1, "", "train_model"], [41, 3, 1, "", "unnormalize"], [41, 2, 1, "", "version_record"], [41, 2, 1, "", "weights"]], "phygnn.phygnn": [[43, 1, 1, "", "PhysicsGuidedNeuralNetwork"]], "phygnn.phygnn.PhysicsGuidedNeuralNetwork": [[43, 2, 1, "", "bias_reg_term"], [43, 2, 1, "", "bias_weights"], [43, 3, 1, "", "calc_loss"], [43, 3, 1, "", "fit"], [43, 3, 1, "", "get_val_split"], [43, 2, 1, "", "history"], [43, 2, 1, "", "kernel_reg_term"], [43, 2, 1, "", "kernel_weights"], [43, 2, 1, "", "layers"], [43, 2, 1, "", "layers_obj"], [43, 3, 1, "", "load"], [43, 3, 1, "", "make_batches"], [43, 2, 1, "", "model_params"], [43, 3, 1, "", "p_fun_dummy"], [43, 3, 1, "", "predict"], [43, 3, 1, "", "preflight_data"], [43, 3, 1, "", "preflight_features"], [43, 3, 1, "", "preflight_p_fun"], [43, 3, 1, "", "reset_history"], [43, 3, 1, "", "run_gradient_descent"], [43, 3, 1, "", "save"], [43, 3, 1, "", "seed"], [43, 3, 1, "", "set_loss_weights"], [43, 2, 1, "", "version_record"], [43, 2, 1, "", "weights"]], "phygnn.utilities": [[45, 0, 0, "-", "loss_metrics"], [53, 0, 0, "-", "pre_processing"], [55, 0, 0, "-", "tf_utilities"]], "phygnn.utilities.loss_metrics": [[46, 5, 1, "", "binary_crossentropy"], [47, 5, 1, "", "mae"], [48, 5, 1, "", "mbe"], [49, 5, 1, "", "mse"], [50, 5, 1, "", "relative_mae"], [51, 5, 1, "", "relative_mbe"], [52, 5, 1, "", "relative_mse"]], "phygnn.utilities.pre_processing": [[54, 1, 1, "", "PreProcess"]], "phygnn.utilities.pre_processing.PreProcess": [[54, 3, 1, "", "check_one_hot_categories"], [54, 3, 1, "", "normalize"], [54, 3, 1, "", "one_hot"], [54, 3, 1, "", "process_one_hot"], [54, 3, 1, "", "unnormalize"], [54, 3, 1, "", "update_names"]], "phygnn.utilities.tf_utilities": [[56, 5, 1, "", "idw_fill"], [57, 5, 1, "", "mean_fill"], [58, 5, 1, "", "tf_isin"], [59, 5, 1, "", "tf_log10"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"phygnn": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61], "base": [1, 2, 3], "customnetwork": 2, "gradientutil": 3, "layer": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "custom_lay": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "attent": 6, "axialattentionblock": 7, "cbam": 8, "expanddim": 9, "fno": 10, "flattenaxi": 11, "flexiblepad": 12, "functionallay": 13, "gaussianaveragepooling2d": 14, "gaussiannoiseaxi": 15, "logtransform": 16, "maskedsqueezeandexcit": 17, "siglin": 18, "skipconnect": 19, "sparseattent": 20, "spatialexpans": 21, "spatiotemporalexpans": 22, "squeezeandexcit": 23, "sup3radd": 24, "sup3rconcat": 25, "sup3rconcatob": 26, "sup3robsmodel": 27, "tilelay": 28, "unitconvers": 29, "handler": [30, 31, 32], "hiddenlay": 31, "model_interfac": [33, 34, 35, 36, 37, 38, 39, 40, 41], "base_model": [34, 35], "modelbas": 35, "phygnn_model": [36, 37], "phygnnmodel": 37, "random_forest_model": [38, 39], "randomforestmodel": 39, "tf_model": [40, 41], "tfmodel": 41, "physicsguidedneuralnetwork": 43, "util": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "loss_metr": [45, 46, 47, 48, 49, 50, 51, 52], "binary_crossentropi": 46, "mae": 47, "mbe": 48, "mse": 49, "relative_ma": 50, "relative_mb": 51, "relative_ms": 52, "pre_process": [53, 54], "preprocess": 54, "tf_util": [55, 56, 57, 58, 59], "idw_fil": 56, "mean_fil": 57, "tf_isin": 58, "tf_log10": 59, "suggest": 61, "citat": 61, "instal": [61, 62, 63], "simpl": [61, 62], "develop": [61, 62], "acknowledg": 61, "usag": 63}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"phygnn": [[0, "module-phygnn"], [61, "phygnn"]], "phygnn.base": [[1, "module-phygnn.base"]], "phygnn.base.CustomNetwork": [[2, "phygnn-base-customnetwork"]], "phygnn.base.GradientUtils": [[3, "phygnn-base-gradientutils"]], "phygnn.layers": [[4, "module-phygnn.layers"]], "phygnn.layers.custom_layers": [[5, "module-phygnn.layers.custom_layers"]], "phygnn.layers.custom_layers.Attention": [[6, "phygnn-layers-custom-layers-attention"]], "phygnn.layers.custom_layers.AxialAttentionBlock": [[7, "phygnn-layers-custom-layers-axialattentionblock"]], "phygnn.layers.custom_layers.CBAM": [[8, "phygnn-layers-custom-layers-cbam"]], "phygnn.layers.custom_layers.ExpandDims": [[9, "phygnn-layers-custom-layers-expanddims"]], "phygnn.layers.custom_layers.FNO": [[10, "phygnn-layers-custom-layers-fno"]], "phygnn.layers.custom_layers.FlattenAxis": [[11, "phygnn-layers-custom-layers-flattenaxis"]], "phygnn.layers.custom_layers.FlexiblePadding": [[12, "phygnn-layers-custom-layers-flexiblepadding"]], "phygnn.layers.custom_layers.FunctionalLayer": [[13, "phygnn-layers-custom-layers-functionallayer"]], "phygnn.layers.custom_layers.GaussianAveragePooling2D": [[14, "phygnn-layers-custom-layers-gaussianaveragepooling2d"]], "phygnn.layers.custom_layers.GaussianNoiseAxis": [[15, "phygnn-layers-custom-layers-gaussiannoiseaxis"]], "phygnn.layers.custom_layers.LogTransform": [[16, "phygnn-layers-custom-layers-logtransform"]], "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation": [[17, "phygnn-layers-custom-layers-maskedsqueezeandexcitation"]], "phygnn.layers.custom_layers.SigLin": [[18, "phygnn-layers-custom-layers-siglin"]], "phygnn.layers.custom_layers.SkipConnection": [[19, "phygnn-layers-custom-layers-skipconnection"]], "phygnn.layers.custom_layers.SparseAttention": [[20, "phygnn-layers-custom-layers-sparseattention"]], "phygnn.layers.custom_layers.SpatialExpansion": [[21, "phygnn-layers-custom-layers-spatialexpansion"]], "phygnn.layers.custom_layers.SpatioTemporalExpansion": [[22, "phygnn-layers-custom-layers-spatiotemporalexpansion"]], "phygnn.layers.custom_layers.SqueezeAndExcitation": [[23, "phygnn-layers-custom-layers-squeezeandexcitation"]], "phygnn.layers.custom_layers.Sup3rAdder": [[24, "phygnn-layers-custom-layers-sup3radder"]], "phygnn.layers.custom_layers.Sup3rConcat": [[25, "phygnn-layers-custom-layers-sup3rconcat"]], "phygnn.layers.custom_layers.Sup3rConcatObs": [[26, "phygnn-layers-custom-layers-sup3rconcatobs"]], "phygnn.layers.custom_layers.Sup3rObsModel": [[27, "phygnn-layers-custom-layers-sup3robsmodel"]], "phygnn.layers.custom_layers.TileLayer": [[28, "phygnn-layers-custom-layers-tilelayer"]], "phygnn.layers.custom_layers.UnitConversion": [[29, "phygnn-layers-custom-layers-unitconversion"]], "phygnn.layers.handlers": [[30, "module-phygnn.layers.handlers"]], "phygnn.layers.handlers.HiddenLayers": [[31, "phygnn-layers-handlers-hiddenlayers"]], "phygnn.layers.handlers.Layers": [[32, "phygnn-layers-handlers-layers"]], "phygnn.model_interfaces": [[33, "module-phygnn.model_interfaces"]], "phygnn.model_interfaces.base_model": [[34, "module-phygnn.model_interfaces.base_model"]], "phygnn.model_interfaces.base_model.ModelBase": [[35, "phygnn-model-interfaces-base-model-modelbase"]], "phygnn.model_interfaces.phygnn_model": [[36, "module-phygnn.model_interfaces.phygnn_model"]], "phygnn.model_interfaces.phygnn_model.PhygnnModel": [[37, "phygnn-model-interfaces-phygnn-model-phygnnmodel"]], "phygnn.model_interfaces.random_forest_model": [[38, "module-phygnn.model_interfaces.random_forest_model"]], "phygnn.model_interfaces.random_forest_model.RandomForestModel": [[39, "phygnn-model-interfaces-random-forest-model-randomforestmodel"]], "phygnn.model_interfaces.tf_model": [[40, "module-phygnn.model_interfaces.tf_model"]], "phygnn.model_interfaces.tf_model.TfModel": [[41, "phygnn-model-interfaces-tf-model-tfmodel"]], "phygnn.phygnn": [[42, "module-phygnn.phygnn"]], "phygnn.phygnn.PhysicsGuidedNeuralNetwork": [[43, "phygnn-phygnn-physicsguidedneuralnetwork"]], "phygnn.utilities": [[44, "module-phygnn.utilities"]], "phygnn.utilities.loss_metrics": [[45, "module-phygnn.utilities.loss_metrics"]], "phygnn.utilities.loss_metrics.binary_crossentropy": [[46, "phygnn-utilities-loss-metrics-binary-crossentropy"]], "phygnn.utilities.loss_metrics.mae": [[47, "phygnn-utilities-loss-metrics-mae"]], "phygnn.utilities.loss_metrics.mbe": [[48, "phygnn-utilities-loss-metrics-mbe"]], "phygnn.utilities.loss_metrics.mse": [[49, "phygnn-utilities-loss-metrics-mse"]], "phygnn.utilities.loss_metrics.relative_mae": [[50, "phygnn-utilities-loss-metrics-relative-mae"]], "phygnn.utilities.loss_metrics.relative_mbe": [[51, "phygnn-utilities-loss-metrics-relative-mbe"]], "phygnn.utilities.loss_metrics.relative_mse": [[52, "phygnn-utilities-loss-metrics-relative-mse"]], "phygnn.utilities.pre_processing": [[53, "module-phygnn.utilities.pre_processing"]], "phygnn.utilities.pre_processing.PreProcess": [[54, "phygnn-utilities-pre-processing-preprocess"]], "phygnn.utilities.tf_utilities": [[55, "module-phygnn.utilities.tf_utilities"]], "phygnn.utilities.tf_utilities.idw_fill": [[56, "phygnn-utilities-tf-utilities-idw-fill"]], "phygnn.utilities.tf_utilities.mean_fill": [[57, "phygnn-utilities-tf-utilities-mean-fill"]], "phygnn.utilities.tf_utilities.tf_isin": [[58, "phygnn-utilities-tf-utilities-tf-isin"]], "phygnn.utilities.tf_utilities.tf_log10": [[59, "phygnn-utilities-tf-utilities-tf-log10"]], "Suggested Citation": [[61, "suggested-citation"]], "Installation": [[61, "installation"], [62, "installation"]], "Simple Install": [[61, "simple-install"], [62, "simple-install"]], "Developer Install": [[61, "developer-install"], [62, "developer-install"]], "Acknowledgements": [[61, "acknowledgements"]], "Installation and Usage": [[63, "installation-and-usage"]]}, "indexentries": {"module": [[0, "module-phygnn"], [1, "module-phygnn.base"], [4, "module-phygnn.layers"], [5, "module-phygnn.layers.custom_layers"], [30, "module-phygnn.layers.handlers"], [33, "module-phygnn.model_interfaces"], [34, "module-phygnn.model_interfaces.base_model"], [36, "module-phygnn.model_interfaces.phygnn_model"], [38, "module-phygnn.model_interfaces.random_forest_model"], [40, "module-phygnn.model_interfaces.tf_model"], [42, "module-phygnn.phygnn"], [44, "module-phygnn.utilities"], [45, "module-phygnn.utilities.loss_metrics"], [53, "module-phygnn.utilities.pre_processing"], [55, "module-phygnn.utilities.tf_utilities"]], "phygnn": [[0, "module-phygnn"]], "phygnn.base": [[1, "module-phygnn.base"]], "customnetwork (class in phygnn.base)": [[2, "phygnn.base.CustomNetwork"]], "bias_weights (customnetwork property)": [[2, "phygnn.base.CustomNetwork.bias_weights"]], "get_val_split() (customnetwork class method)": [[2, "phygnn.base.CustomNetwork.get_val_split"]], "kernel_weights (customnetwork property)": [[2, "phygnn.base.CustomNetwork.kernel_weights"]], "layers (customnetwork property)": [[2, "phygnn.base.CustomNetwork.layers"]], "layers_obj (customnetwork property)": [[2, "phygnn.base.CustomNetwork.layers_obj"]], "load() (customnetwork class method)": [[2, "phygnn.base.CustomNetwork.load"]], "make_batches() (customnetwork static method)": [[2, "phygnn.base.CustomNetwork.make_batches"]], "model_params (customnetwork property)": [[2, "phygnn.base.CustomNetwork.model_params"]], "predict() (customnetwork method)": [[2, "phygnn.base.CustomNetwork.predict"]], "preflight_features() (customnetwork method)": [[2, "phygnn.base.CustomNetwork.preflight_features"]], "save() (customnetwork method)": [[2, "phygnn.base.CustomNetwork.save"]], "seed() (customnetwork static method)": [[2, "phygnn.base.CustomNetwork.seed"]], "version_record (customnetwork property)": [[2, "phygnn.base.CustomNetwork.version_record"]], "weights (customnetwork property)": [[2, "phygnn.base.CustomNetwork.weights"]], "gradientutils (class in phygnn.base)": [[3, "phygnn.base.GradientUtils"]], "calc_loss() (gradientutils method)": [[3, "phygnn.base.GradientUtils.calc_loss"]], "predict() (gradientutils method)": [[3, "phygnn.base.GradientUtils.predict"]], "run_gradient_descent() (gradientutils method)": [[3, "phygnn.base.GradientUtils.run_gradient_descent"]], "phygnn.layers": [[4, "module-phygnn.layers"]], "phygnn.layers.custom_layers": [[5, "module-phygnn.layers.custom_layers"]], "attention (class in phygnn.layers.custom_layers)": [[6, "phygnn.layers.custom_layers.Attention"]], "__call__() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.__call__"]], "activity_regularizer (attention property)": [[6, "phygnn.layers.custom_layers.Attention.activity_regularizer"]], "add_loss() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.add_loss"]], "add_metric() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.add_metric"]], "add_update() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.add_update"]], "add_variable() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.add_variable"]], "add_weight() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.add_weight"]], "build() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.build"]], "build_from_config() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.build_from_config"]], "call() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.call"]], "compute_dtype (attention property)": [[6, "phygnn.layers.custom_layers.Attention.compute_dtype"]], "compute_mask() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.compute_mask"]], "compute_output_shape() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.compute_output_shape"]], "compute_output_signature() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.compute_output_signature"]], "count_params() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.count_params"]], "dtype (attention property)": [[6, "phygnn.layers.custom_layers.Attention.dtype"]], "dtype_policy (attention property)": [[6, "phygnn.layers.custom_layers.Attention.dtype_policy"]], "dynamic (attention property)": [[6, "phygnn.layers.custom_layers.Attention.dynamic"]], "finalize_state() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.finalize_state"]], "from_config() (attention class method)": [[6, "phygnn.layers.custom_layers.Attention.from_config"]], "get_build_config() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.get_build_config"]], "get_config() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.get_config"]], "get_input_at() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.get_input_at"]], "get_input_mask_at() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.get_input_mask_at"]], "get_input_shape_at() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.get_input_shape_at"]], "get_output_at() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.get_output_at"]], "get_output_mask_at() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.get_output_mask_at"]], "get_output_shape_at() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.get_output_shape_at"]], "get_weights() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.get_weights"]], "inbound_nodes (attention property)": [[6, "phygnn.layers.custom_layers.Attention.inbound_nodes"]], "input (attention property)": [[6, "phygnn.layers.custom_layers.Attention.input"]], "input_mask (attention property)": [[6, "phygnn.layers.custom_layers.Attention.input_mask"]], "input_shape (attention property)": [[6, "phygnn.layers.custom_layers.Attention.input_shape"]], "input_spec (attention property)": [[6, "phygnn.layers.custom_layers.Attention.input_spec"]], "load_own_variables() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.load_own_variables"]], "losses (attention property)": [[6, "phygnn.layers.custom_layers.Attention.losses"]], "metrics (attention property)": [[6, "phygnn.layers.custom_layers.Attention.metrics"]], "name (attention property)": [[6, "phygnn.layers.custom_layers.Attention.name"]], "name_scope (attention property)": [[6, "phygnn.layers.custom_layers.Attention.name_scope"]], "non_trainable_variables (attention property)": [[6, "phygnn.layers.custom_layers.Attention.non_trainable_variables"]], "non_trainable_weights (attention property)": [[6, "phygnn.layers.custom_layers.Attention.non_trainable_weights"]], "outbound_nodes (attention property)": [[6, "phygnn.layers.custom_layers.Attention.outbound_nodes"]], "output (attention property)": [[6, "phygnn.layers.custom_layers.Attention.output"]], "output_mask (attention property)": [[6, "phygnn.layers.custom_layers.Attention.output_mask"]], "output_shape (attention property)": [[6, "phygnn.layers.custom_layers.Attention.output_shape"]], "save_own_variables() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.save_own_variables"]], "set_weights() (attention method)": [[6, "phygnn.layers.custom_layers.Attention.set_weights"]], "submodules (attention property)": [[6, "phygnn.layers.custom_layers.Attention.submodules"]], "supports_masking (attention property)": [[6, "phygnn.layers.custom_layers.Attention.supports_masking"]], "trainable_variables (attention property)": [[6, "phygnn.layers.custom_layers.Attention.trainable_variables"]], "trainable_weights (attention property)": [[6, "phygnn.layers.custom_layers.Attention.trainable_weights"]], "variable_dtype (attention property)": [[6, "phygnn.layers.custom_layers.Attention.variable_dtype"]], "variables (attention property)": [[6, "phygnn.layers.custom_layers.Attention.variables"]], "weights (attention property)": [[6, "phygnn.layers.custom_layers.Attention.weights"]], "with_name_scope() (attention class method)": [[6, "phygnn.layers.custom_layers.Attention.with_name_scope"]], "axialattentionblock (class in phygnn.layers.custom_layers)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock"]], "__call__() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.__call__"]], "activity_regularizer (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.activity_regularizer"]], "add_loss() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.add_loss"]], "add_metric() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.add_metric"]], "add_update() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.add_update"]], "add_variable() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.add_variable"]], "add_weight() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.add_weight"]], "build() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.build"]], "build_from_config() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.build_from_config"]], "call() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.call"]], "compute_dtype (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.compute_dtype"]], "compute_mask() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.compute_mask"]], "compute_output_shape() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.compute_output_shape"]], "compute_output_signature() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.compute_output_signature"]], "count_params() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.count_params"]], "dtype (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.dtype"]], "dtype_policy (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.dtype_policy"]], "dynamic (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.dynamic"]], "finalize_state() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.finalize_state"]], "from_config() (axialattentionblock class method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.from_config"]], "get_build_config() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.get_build_config"]], "get_config() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.get_config"]], "get_input_at() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.get_input_at"]], "get_input_mask_at() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.get_input_mask_at"]], "get_input_shape_at() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.get_input_shape_at"]], "get_output_at() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.get_output_at"]], "get_output_mask_at() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.get_output_mask_at"]], "get_output_shape_at() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.get_output_shape_at"]], "get_weights() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.get_weights"]], "inbound_nodes (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.inbound_nodes"]], "input (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.input"]], "input_mask (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.input_mask"]], "input_shape (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.input_shape"]], "input_spec (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.input_spec"]], "load_own_variables() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.load_own_variables"]], "losses (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.losses"]], "metrics (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.metrics"]], "name (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.name"]], "name_scope (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.name_scope"]], "non_trainable_variables (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.non_trainable_variables"]], "non_trainable_weights (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.non_trainable_weights"]], "outbound_nodes (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.outbound_nodes"]], "output (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.output"]], "output_mask (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.output_mask"]], "output_shape (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.output_shape"]], "save_own_variables() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.save_own_variables"]], "set_weights() (axialattentionblock method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.set_weights"]], "submodules (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.submodules"]], "supports_masking (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.supports_masking"]], "trainable_variables (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.trainable_variables"]], "trainable_weights (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.trainable_weights"]], "variable_dtype (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.variable_dtype"]], "variables (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.variables"]], "weights (axialattentionblock property)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.weights"]], "with_name_scope() (axialattentionblock class method)": [[7, "phygnn.layers.custom_layers.AxialAttentionBlock.with_name_scope"]], "cbam (class in phygnn.layers.custom_layers)": [[8, "phygnn.layers.custom_layers.CBAM"]], "__call__() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.__call__"]], "activity_regularizer (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.activity_regularizer"]], "add_loss() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.add_loss"]], "add_metric() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.add_metric"]], "add_update() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.add_update"]], "add_variable() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.add_variable"]], "add_weight() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.add_weight"]], "build() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.build"]], "build_from_config() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.build_from_config"]], "call() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.call"]], "channel_attention() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.channel_attention"]], "compute_dtype (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.compute_dtype"]], "compute_mask() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.compute_mask"]], "compute_output_shape() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.compute_output_shape"]], "compute_output_signature() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.compute_output_signature"]], "count_params() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.count_params"]], "dtype (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.dtype"]], "dtype_policy (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.dtype_policy"]], "dynamic (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.dynamic"]], "finalize_state() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.finalize_state"]], "from_config() (cbam class method)": [[8, "phygnn.layers.custom_layers.CBAM.from_config"]], "get_build_config() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.get_build_config"]], "get_config() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.get_config"]], "get_input_at() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.get_input_at"]], "get_input_mask_at() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.get_input_mask_at"]], "get_input_shape_at() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.get_input_shape_at"]], "get_output_at() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.get_output_at"]], "get_output_mask_at() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.get_output_mask_at"]], "get_output_shape_at() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.get_output_shape_at"]], "get_weights() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.get_weights"]], "inbound_nodes (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.inbound_nodes"]], "input (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.input"]], "input_mask (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.input_mask"]], "input_shape (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.input_shape"]], "input_spec (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.input_spec"]], "load_own_variables() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.load_own_variables"]], "losses (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.losses"]], "metrics (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.metrics"]], "name (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.name"]], "name_scope (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.name_scope"]], "non_trainable_variables (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.non_trainable_variables"]], "non_trainable_weights (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.non_trainable_weights"]], "outbound_nodes (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.outbound_nodes"]], "output (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.output"]], "output_mask (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.output_mask"]], "output_shape (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.output_shape"]], "save_own_variables() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.save_own_variables"]], "set_weights() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.set_weights"]], "spatiotemporal_attention() (cbam method)": [[8, "phygnn.layers.custom_layers.CBAM.spatiotemporal_attention"]], "submodules (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.submodules"]], "supports_masking (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.supports_masking"]], "trainable_variables (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.trainable_variables"]], "trainable_weights (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.trainable_weights"]], "variable_dtype (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.variable_dtype"]], "variables (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.variables"]], "weights (cbam property)": [[8, "phygnn.layers.custom_layers.CBAM.weights"]], "with_name_scope() (cbam class method)": [[8, "phygnn.layers.custom_layers.CBAM.with_name_scope"]], "expanddims (class in phygnn.layers.custom_layers)": [[9, "phygnn.layers.custom_layers.ExpandDims"]], "__call__() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.__call__"]], "activity_regularizer (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.activity_regularizer"]], "add_loss() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.add_loss"]], "add_metric() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.add_metric"]], "add_update() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.add_update"]], "add_variable() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.add_variable"]], "add_weight() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.add_weight"]], "build() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.build"]], "build_from_config() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.build_from_config"]], "call() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.call"]], "compute_dtype (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.compute_dtype"]], "compute_mask() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.compute_mask"]], "compute_output_shape() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.compute_output_shape"]], "compute_output_signature() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.compute_output_signature"]], "count_params() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.count_params"]], "dtype (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.dtype"]], "dtype_policy (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.dtype_policy"]], "dynamic (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.dynamic"]], "finalize_state() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.finalize_state"]], "from_config() (expanddims class method)": [[9, "phygnn.layers.custom_layers.ExpandDims.from_config"]], "get_build_config() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.get_build_config"]], "get_config() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.get_config"]], "get_input_at() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.get_input_at"]], "get_input_mask_at() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.get_input_mask_at"]], "get_input_shape_at() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.get_input_shape_at"]], "get_output_at() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.get_output_at"]], "get_output_mask_at() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.get_output_mask_at"]], "get_output_shape_at() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.get_output_shape_at"]], "get_weights() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.get_weights"]], "inbound_nodes (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.inbound_nodes"]], "input (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.input"]], "input_mask (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.input_mask"]], "input_shape (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.input_shape"]], "input_spec (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.input_spec"]], "load_own_variables() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.load_own_variables"]], "losses (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.losses"]], "metrics (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.metrics"]], "name (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.name"]], "name_scope (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.name_scope"]], "non_trainable_variables (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.non_trainable_variables"]], "non_trainable_weights (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.non_trainable_weights"]], "outbound_nodes (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.outbound_nodes"]], "output (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.output"]], "output_mask (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.output_mask"]], "output_shape (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.output_shape"]], "save_own_variables() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.save_own_variables"]], "set_weights() (expanddims method)": [[9, "phygnn.layers.custom_layers.ExpandDims.set_weights"]], "submodules (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.submodules"]], "supports_masking (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.supports_masking"]], "trainable_variables (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.trainable_variables"]], "trainable_weights (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.trainable_weights"]], "variable_dtype (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.variable_dtype"]], "variables (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.variables"]], "weights (expanddims property)": [[9, "phygnn.layers.custom_layers.ExpandDims.weights"]], "with_name_scope() (expanddims class method)": [[9, "phygnn.layers.custom_layers.ExpandDims.with_name_scope"]], "fno (class in phygnn.layers.custom_layers)": [[10, "phygnn.layers.custom_layers.FNO"]], "__call__() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.__call__"]], "activity_regularizer (fno property)": [[10, "phygnn.layers.custom_layers.FNO.activity_regularizer"]], "add_loss() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.add_loss"]], "add_metric() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.add_metric"]], "add_update() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.add_update"]], "add_variable() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.add_variable"]], "add_weight() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.add_weight"]], "build() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.build"]], "build_from_config() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.build_from_config"]], "call() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.call"]], "compute_dtype (fno property)": [[10, "phygnn.layers.custom_layers.FNO.compute_dtype"]], "compute_mask() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.compute_mask"]], "compute_output_shape() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.compute_output_shape"]], "compute_output_signature() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.compute_output_signature"]], "count_params() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.count_params"]], "dtype (fno property)": [[10, "phygnn.layers.custom_layers.FNO.dtype"]], "dtype_policy (fno property)": [[10, "phygnn.layers.custom_layers.FNO.dtype_policy"]], "dynamic (fno property)": [[10, "phygnn.layers.custom_layers.FNO.dynamic"]], "finalize_state() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.finalize_state"]], "from_config() (fno class method)": [[10, "phygnn.layers.custom_layers.FNO.from_config"]], "get_build_config() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.get_build_config"]], "get_config() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.get_config"]], "get_input_at() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.get_input_at"]], "get_input_mask_at() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.get_input_mask_at"]], "get_input_shape_at() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.get_input_shape_at"]], "get_output_at() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.get_output_at"]], "get_output_mask_at() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.get_output_mask_at"]], "get_output_shape_at() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.get_output_shape_at"]], "get_weights() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.get_weights"]], "inbound_nodes (fno property)": [[10, "phygnn.layers.custom_layers.FNO.inbound_nodes"]], "input (fno property)": [[10, "phygnn.layers.custom_layers.FNO.input"]], "input_mask (fno property)": [[10, "phygnn.layers.custom_layers.FNO.input_mask"]], "input_shape (fno property)": [[10, "phygnn.layers.custom_layers.FNO.input_shape"]], "input_spec (fno property)": [[10, "phygnn.layers.custom_layers.FNO.input_spec"]], "load_own_variables() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.load_own_variables"]], "losses (fno property)": [[10, "phygnn.layers.custom_layers.FNO.losses"]], "metrics (fno property)": [[10, "phygnn.layers.custom_layers.FNO.metrics"]], "name (fno property)": [[10, "phygnn.layers.custom_layers.FNO.name"]], "name_scope (fno property)": [[10, "phygnn.layers.custom_layers.FNO.name_scope"]], "non_trainable_variables (fno property)": [[10, "phygnn.layers.custom_layers.FNO.non_trainable_variables"]], "non_trainable_weights (fno property)": [[10, "phygnn.layers.custom_layers.FNO.non_trainable_weights"]], "outbound_nodes (fno property)": [[10, "phygnn.layers.custom_layers.FNO.outbound_nodes"]], "output (fno property)": [[10, "phygnn.layers.custom_layers.FNO.output"]], "output_mask (fno property)": [[10, "phygnn.layers.custom_layers.FNO.output_mask"]], "output_shape (fno property)": [[10, "phygnn.layers.custom_layers.FNO.output_shape"]], "save_own_variables() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.save_own_variables"]], "set_weights() (fno method)": [[10, "phygnn.layers.custom_layers.FNO.set_weights"]], "submodules (fno property)": [[10, "phygnn.layers.custom_layers.FNO.submodules"]], "supports_masking (fno property)": [[10, "phygnn.layers.custom_layers.FNO.supports_masking"]], "trainable_variables (fno property)": [[10, "phygnn.layers.custom_layers.FNO.trainable_variables"]], "trainable_weights (fno property)": [[10, "phygnn.layers.custom_layers.FNO.trainable_weights"]], "variable_dtype (fno property)": [[10, "phygnn.layers.custom_layers.FNO.variable_dtype"]], "variables (fno property)": [[10, "phygnn.layers.custom_layers.FNO.variables"]], "weights (fno property)": [[10, "phygnn.layers.custom_layers.FNO.weights"]], "with_name_scope() (fno class method)": [[10, "phygnn.layers.custom_layers.FNO.with_name_scope"]], "flattenaxis (class in phygnn.layers.custom_layers)": [[11, "phygnn.layers.custom_layers.FlattenAxis"]], "__call__() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.__call__"]], "activity_regularizer (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.activity_regularizer"]], "add_loss() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.add_loss"]], "add_metric() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.add_metric"]], "add_update() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.add_update"]], "add_variable() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.add_variable"]], "add_weight() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.add_weight"]], "build() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.build"]], "build_from_config() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.build_from_config"]], "call() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.call"]], "compute_dtype (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.compute_dtype"]], "compute_mask() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.compute_mask"]], "compute_output_shape() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.compute_output_shape"]], "compute_output_signature() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.compute_output_signature"]], "count_params() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.count_params"]], "dtype (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.dtype"]], "dtype_policy (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.dtype_policy"]], "dynamic (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.dynamic"]], "finalize_state() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.finalize_state"]], "from_config() (flattenaxis class method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.from_config"]], "get_build_config() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.get_build_config"]], "get_config() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.get_config"]], "get_input_at() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.get_input_at"]], "get_input_mask_at() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.get_input_mask_at"]], "get_input_shape_at() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.get_input_shape_at"]], "get_output_at() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.get_output_at"]], "get_output_mask_at() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.get_output_mask_at"]], "get_output_shape_at() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.get_output_shape_at"]], "get_weights() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.get_weights"]], "inbound_nodes (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.inbound_nodes"]], "input (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.input"]], "input_mask (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.input_mask"]], "input_shape (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.input_shape"]], "input_spec (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.input_spec"]], "load_own_variables() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.load_own_variables"]], "losses (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.losses"]], "metrics (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.metrics"]], "name (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.name"]], "name_scope (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.name_scope"]], "non_trainable_variables (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.non_trainable_variables"]], "non_trainable_weights (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.non_trainable_weights"]], "outbound_nodes (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.outbound_nodes"]], "output (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.output"]], "output_mask (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.output_mask"]], "output_shape (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.output_shape"]], "save_own_variables() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.save_own_variables"]], "set_weights() (flattenaxis method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.set_weights"]], "submodules (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.submodules"]], "supports_masking (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.supports_masking"]], "trainable_variables (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.trainable_variables"]], "trainable_weights (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.trainable_weights"]], "variable_dtype (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.variable_dtype"]], "variables (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.variables"]], "weights (flattenaxis property)": [[11, "phygnn.layers.custom_layers.FlattenAxis.weights"]], "with_name_scope() (flattenaxis class method)": [[11, "phygnn.layers.custom_layers.FlattenAxis.with_name_scope"]], "flexiblepadding (class in phygnn.layers.custom_layers)": [[12, "phygnn.layers.custom_layers.FlexiblePadding"]], "__call__() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.__call__"]], "activity_regularizer (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.activity_regularizer"]], "add_loss() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.add_loss"]], "add_metric() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.add_metric"]], "add_update() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.add_update"]], "add_variable() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.add_variable"]], "add_weight() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.add_weight"]], "build() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.build"]], "build_from_config() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.build_from_config"]], "call() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.call"]], "compute_dtype (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.compute_dtype"]], "compute_mask() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.compute_mask"]], "compute_output_shape() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.compute_output_shape"]], "compute_output_signature() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.compute_output_signature"]], "count_params() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.count_params"]], "dtype (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.dtype"]], "dtype_policy (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.dtype_policy"]], "dynamic (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.dynamic"]], "finalize_state() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.finalize_state"]], "from_config() (flexiblepadding class method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.from_config"]], "get_build_config() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.get_build_config"]], "get_config() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.get_config"]], "get_input_at() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.get_input_at"]], "get_input_mask_at() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.get_input_mask_at"]], "get_input_shape_at() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.get_input_shape_at"]], "get_output_at() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.get_output_at"]], "get_output_mask_at() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.get_output_mask_at"]], "get_output_shape_at() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.get_output_shape_at"]], "get_weights() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.get_weights"]], "inbound_nodes (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.inbound_nodes"]], "input (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.input"]], "input_mask (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.input_mask"]], "input_shape (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.input_shape"]], "input_spec (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.input_spec"]], "load_own_variables() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.load_own_variables"]], "losses (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.losses"]], "metrics (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.metrics"]], "name (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.name"]], "name_scope (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.name_scope"]], "non_trainable_variables (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.non_trainable_variables"]], "non_trainable_weights (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.non_trainable_weights"]], "outbound_nodes (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.outbound_nodes"]], "output (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.output"]], "output_mask (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.output_mask"]], "output_shape (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.output_shape"]], "save_own_variables() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.save_own_variables"]], "set_weights() (flexiblepadding method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.set_weights"]], "submodules (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.submodules"]], "supports_masking (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.supports_masking"]], "trainable_variables (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.trainable_variables"]], "trainable_weights (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.trainable_weights"]], "variable_dtype (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.variable_dtype"]], "variables (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.variables"]], "weights (flexiblepadding property)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.weights"]], "with_name_scope() (flexiblepadding class method)": [[12, "phygnn.layers.custom_layers.FlexiblePadding.with_name_scope"]], "functionallayer (class in phygnn.layers.custom_layers)": [[13, "phygnn.layers.custom_layers.FunctionalLayer"]], "__call__() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.__call__"]], "activity_regularizer (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.activity_regularizer"]], "add_loss() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.add_loss"]], "add_metric() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.add_metric"]], "add_update() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.add_update"]], "add_variable() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.add_variable"]], "add_weight() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.add_weight"]], "build() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.build"]], "build_from_config() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.build_from_config"]], "call() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.call"]], "compute_dtype (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.compute_dtype"]], "compute_mask() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.compute_mask"]], "compute_output_shape() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.compute_output_shape"]], "compute_output_signature() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.compute_output_signature"]], "count_params() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.count_params"]], "dtype (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.dtype"]], "dtype_policy (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.dtype_policy"]], "dynamic (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.dynamic"]], "finalize_state() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.finalize_state"]], "from_config() (functionallayer class method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.from_config"]], "get_build_config() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.get_build_config"]], "get_config() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.get_config"]], "get_input_at() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.get_input_at"]], "get_input_mask_at() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.get_input_mask_at"]], "get_input_shape_at() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.get_input_shape_at"]], "get_output_at() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.get_output_at"]], "get_output_mask_at() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.get_output_mask_at"]], "get_output_shape_at() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.get_output_shape_at"]], "get_weights() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.get_weights"]], "inbound_nodes (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.inbound_nodes"]], "input (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.input"]], "input_mask (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.input_mask"]], "input_shape (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.input_shape"]], "input_spec (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.input_spec"]], "load_own_variables() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.load_own_variables"]], "losses (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.losses"]], "metrics (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.metrics"]], "name (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.name"]], "name_scope (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.name_scope"]], "non_trainable_variables (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.non_trainable_variables"]], "non_trainable_weights (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.non_trainable_weights"]], "outbound_nodes (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.outbound_nodes"]], "output (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.output"]], "output_mask (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.output_mask"]], "output_shape (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.output_shape"]], "save_own_variables() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.save_own_variables"]], "set_weights() (functionallayer method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.set_weights"]], "submodules (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.submodules"]], "supports_masking (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.supports_masking"]], "trainable_variables (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.trainable_variables"]], "trainable_weights (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.trainable_weights"]], "variable_dtype (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.variable_dtype"]], "variables (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.variables"]], "weights (functionallayer property)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.weights"]], "with_name_scope() (functionallayer class method)": [[13, "phygnn.layers.custom_layers.FunctionalLayer.with_name_scope"]], "gaussianaveragepooling2d (class in phygnn.layers.custom_layers)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D"]], "__call__() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.__call__"]], "activity_regularizer (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.activity_regularizer"]], "add_loss() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.add_loss"]], "add_metric() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.add_metric"]], "add_update() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.add_update"]], "add_variable() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.add_variable"]], "add_weight() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.add_weight"]], "build() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.build"]], "build_from_config() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.build_from_config"]], "call() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.call"]], "compute_dtype (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.compute_dtype"]], "compute_mask() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.compute_mask"]], "compute_output_shape() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.compute_output_shape"]], "compute_output_signature() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.compute_output_signature"]], "count_params() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.count_params"]], "dtype (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.dtype"]], "dtype_policy (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.dtype_policy"]], "dynamic (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.dynamic"]], "finalize_state() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.finalize_state"]], "from_config() (gaussianaveragepooling2d class method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.from_config"]], "get_build_config() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.get_build_config"]], "get_config() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.get_config"]], "get_input_at() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.get_input_at"]], "get_input_mask_at() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.get_input_mask_at"]], "get_input_shape_at() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.get_input_shape_at"]], "get_output_at() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.get_output_at"]], "get_output_mask_at() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.get_output_mask_at"]], "get_output_shape_at() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.get_output_shape_at"]], "get_weights() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.get_weights"]], "inbound_nodes (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.inbound_nodes"]], "input (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.input"]], "input_mask (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.input_mask"]], "input_shape (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.input_shape"]], "input_spec (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.input_spec"]], "load_own_variables() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.load_own_variables"]], "losses (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.losses"]], "make_kernel() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.make_kernel"]], "metrics (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.metrics"]], "name (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.name"]], "name_scope (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.name_scope"]], "non_trainable_variables (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.non_trainable_variables"]], "non_trainable_weights (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.non_trainable_weights"]], "outbound_nodes (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.outbound_nodes"]], "output (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.output"]], "output_mask (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.output_mask"]], "output_shape (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.output_shape"]], "save_own_variables() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.save_own_variables"]], "set_weights() (gaussianaveragepooling2d method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.set_weights"]], "submodules (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.submodules"]], "supports_masking (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.supports_masking"]], "trainable_variables (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.trainable_variables"]], "trainable_weights (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.trainable_weights"]], "variable_dtype (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.variable_dtype"]], "variables (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.variables"]], "weights (gaussianaveragepooling2d property)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.weights"]], "with_name_scope() (gaussianaveragepooling2d class method)": [[14, "phygnn.layers.custom_layers.GaussianAveragePooling2D.with_name_scope"]], "gaussiannoiseaxis (class in phygnn.layers.custom_layers)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis"]], "__call__() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.__call__"]], "activity_regularizer (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.activity_regularizer"]], "add_loss() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.add_loss"]], "add_metric() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.add_metric"]], "add_update() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.add_update"]], "add_variable() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.add_variable"]], "add_weight() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.add_weight"]], "build() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.build"]], "build_from_config() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.build_from_config"]], "call() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.call"]], "compute_dtype (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.compute_dtype"]], "compute_mask() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.compute_mask"]], "compute_output_shape() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.compute_output_shape"]], "compute_output_signature() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.compute_output_signature"]], "count_params() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.count_params"]], "dtype (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.dtype"]], "dtype_policy (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.dtype_policy"]], "dynamic (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.dynamic"]], "finalize_state() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.finalize_state"]], "from_config() (gaussiannoiseaxis class method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.from_config"]], "get_build_config() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.get_build_config"]], "get_config() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.get_config"]], "get_input_at() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.get_input_at"]], "get_input_mask_at() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.get_input_mask_at"]], "get_input_shape_at() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.get_input_shape_at"]], "get_output_at() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.get_output_at"]], "get_output_mask_at() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.get_output_mask_at"]], "get_output_shape_at() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.get_output_shape_at"]], "get_weights() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.get_weights"]], "inbound_nodes (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.inbound_nodes"]], "input (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.input"]], "input_mask (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.input_mask"]], "input_shape (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.input_shape"]], "input_spec (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.input_spec"]], "load_own_variables() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.load_own_variables"]], "losses (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.losses"]], "metrics (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.metrics"]], "name (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.name"]], "name_scope (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.name_scope"]], "non_trainable_variables (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.non_trainable_variables"]], "non_trainable_weights (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.non_trainable_weights"]], "outbound_nodes (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.outbound_nodes"]], "output (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.output"]], "output_mask (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.output_mask"]], "output_shape (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.output_shape"]], "save_own_variables() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.save_own_variables"]], "set_weights() (gaussiannoiseaxis method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.set_weights"]], "submodules (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.submodules"]], "supports_masking (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.supports_masking"]], "trainable_variables (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.trainable_variables"]], "trainable_weights (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.trainable_weights"]], "variable_dtype (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.variable_dtype"]], "variables (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.variables"]], "weights (gaussiannoiseaxis property)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.weights"]], "with_name_scope() (gaussiannoiseaxis class method)": [[15, "phygnn.layers.custom_layers.GaussianNoiseAxis.with_name_scope"]], "logtransform (class in phygnn.layers.custom_layers)": [[16, "phygnn.layers.custom_layers.LogTransform"]], "__call__() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.__call__"]], "activity_regularizer (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.activity_regularizer"]], "add_loss() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.add_loss"]], "add_metric() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.add_metric"]], "add_update() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.add_update"]], "add_variable() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.add_variable"]], "add_weight() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.add_weight"]], "build() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.build"]], "build_from_config() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.build_from_config"]], "call() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.call"]], "compute_dtype (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.compute_dtype"]], "compute_mask() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.compute_mask"]], "compute_output_shape() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.compute_output_shape"]], "compute_output_signature() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.compute_output_signature"]], "count_params() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.count_params"]], "dtype (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.dtype"]], "dtype_policy (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.dtype_policy"]], "dynamic (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.dynamic"]], "finalize_state() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.finalize_state"]], "from_config() (logtransform class method)": [[16, "phygnn.layers.custom_layers.LogTransform.from_config"]], "get_build_config() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.get_build_config"]], "get_config() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.get_config"]], "get_input_at() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.get_input_at"]], "get_input_mask_at() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.get_input_mask_at"]], "get_input_shape_at() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.get_input_shape_at"]], "get_output_at() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.get_output_at"]], "get_output_mask_at() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.get_output_mask_at"]], "get_output_shape_at() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.get_output_shape_at"]], "get_weights() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.get_weights"]], "inbound_nodes (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.inbound_nodes"]], "input (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.input"]], "input_mask (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.input_mask"]], "input_shape (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.input_shape"]], "input_spec (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.input_spec"]], "load_own_variables() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.load_own_variables"]], "losses (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.losses"]], "metrics (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.metrics"]], "name (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.name"]], "name_scope (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.name_scope"]], "non_trainable_variables (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.non_trainable_variables"]], "non_trainable_weights (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.non_trainable_weights"]], "outbound_nodes (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.outbound_nodes"]], "output (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.output"]], "output_mask (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.output_mask"]], "output_shape (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.output_shape"]], "save_own_variables() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.save_own_variables"]], "set_weights() (logtransform method)": [[16, "phygnn.layers.custom_layers.LogTransform.set_weights"]], "submodules (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.submodules"]], "supports_masking (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.supports_masking"]], "trainable_variables (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.trainable_variables"]], "trainable_weights (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.trainable_weights"]], "variable_dtype (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.variable_dtype"]], "variables (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.variables"]], "weights (logtransform property)": [[16, "phygnn.layers.custom_layers.LogTransform.weights"]], "with_name_scope() (logtransform class method)": [[16, "phygnn.layers.custom_layers.LogTransform.with_name_scope"]], "maskedsqueezeandexcitation (class in phygnn.layers.custom_layers)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation"]], "__call__() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.__call__"]], "activity_regularizer (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.activity_regularizer"]], "add_loss() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.add_loss"]], "add_metric() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.add_metric"]], "add_update() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.add_update"]], "add_variable() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.add_variable"]], "add_weight() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.add_weight"]], "build() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.build"]], "build_from_config() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.build_from_config"]], "call() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.call"]], "compute_dtype (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.compute_dtype"]], "compute_mask() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.compute_mask"]], "compute_output_shape() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.compute_output_shape"]], "compute_output_signature() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.compute_output_signature"]], "count_params() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.count_params"]], "dtype (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.dtype"]], "dtype_policy (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.dtype_policy"]], "dynamic (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.dynamic"]], "finalize_state() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.finalize_state"]], "from_config() (maskedsqueezeandexcitation class method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.from_config"]], "get_build_config() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.get_build_config"]], "get_config() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.get_config"]], "get_input_at() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.get_input_at"]], "get_input_mask_at() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.get_input_mask_at"]], "get_input_shape_at() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.get_input_shape_at"]], "get_output_at() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.get_output_at"]], "get_output_mask_at() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.get_output_mask_at"]], "get_output_shape_at() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.get_output_shape_at"]], "get_weights() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.get_weights"]], "inbound_nodes (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.inbound_nodes"]], "input (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.input"]], "input_mask (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.input_mask"]], "input_shape (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.input_shape"]], "input_spec (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.input_spec"]], "load_own_variables() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.load_own_variables"]], "losses (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.losses"]], "metrics (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.metrics"]], "name (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.name"]], "name_scope (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.name_scope"]], "non_trainable_variables (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.non_trainable_variables"]], "non_trainable_weights (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.non_trainable_weights"]], "outbound_nodes (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.outbound_nodes"]], "output (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.output"]], "output_mask (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.output_mask"]], "output_shape (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.output_shape"]], "save_own_variables() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.save_own_variables"]], "set_weights() (maskedsqueezeandexcitation method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.set_weights"]], "submodules (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.submodules"]], "supports_masking (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.supports_masking"]], "trainable_variables (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.trainable_variables"]], "trainable_weights (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.trainable_weights"]], "variable_dtype (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.variable_dtype"]], "variables (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.variables"]], "weights (maskedsqueezeandexcitation property)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.weights"]], "with_name_scope() (maskedsqueezeandexcitation class method)": [[17, "phygnn.layers.custom_layers.MaskedSqueezeAndExcitation.with_name_scope"]], "siglin (class in phygnn.layers.custom_layers)": [[18, "phygnn.layers.custom_layers.SigLin"]], "__call__() (siglin method)": [[18, "phygnn.layers.custom_layers.SigLin.__call__"]], "activity_regularizer (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.activity_regularizer"]], "add_loss() (siglin method)": [[18, "phygnn.layers.custom_layers.SigLin.add_loss"]], "add_metric() (siglin method)": [[18, "phygnn.layers.custom_layers.SigLin.add_metric"]], "add_update() (siglin method)": [[18, "phygnn.layers.custom_layers.SigLin.add_update"]], "add_variable() (siglin method)": [[18, "phygnn.layers.custom_layers.SigLin.add_variable"]], "add_weight() (siglin method)": [[18, "phygnn.layers.custom_layers.SigLin.add_weight"]], "build() (siglin method)": [[18, "phygnn.layers.custom_layers.SigLin.build"]], "build_from_config() (siglin method)": [[18, "phygnn.layers.custom_layers.SigLin.build_from_config"]], "call() (siglin static method)": [[18, "phygnn.layers.custom_layers.SigLin.call"]], "compute_dtype (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.compute_dtype"]], "compute_mask() (siglin method)": [[18, "phygnn.layers.custom_layers.SigLin.compute_mask"]], "compute_output_shape() (siglin method)": [[18, "phygnn.layers.custom_layers.SigLin.compute_output_shape"]], "compute_output_signature() (siglin method)": [[18, "phygnn.layers.custom_layers.SigLin.compute_output_signature"]], "count_params() (siglin method)": [[18, "phygnn.layers.custom_layers.SigLin.count_params"]], "dtype (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.dtype"]], "dtype_policy (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.dtype_policy"]], "dynamic (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.dynamic"]], "finalize_state() (siglin method)": [[18, "phygnn.layers.custom_layers.SigLin.finalize_state"]], "from_config() (siglin class method)": [[18, "phygnn.layers.custom_layers.SigLin.from_config"]], "get_build_config() (siglin method)": [[18, "phygnn.layers.custom_layers.SigLin.get_build_config"]], "get_config() (siglin method)": [[18, "phygnn.layers.custom_layers.SigLin.get_config"]], "get_input_at() (siglin method)": [[18, "phygnn.layers.custom_layers.SigLin.get_input_at"]], "get_input_mask_at() (siglin method)": [[18, "phygnn.layers.custom_layers.SigLin.get_input_mask_at"]], "get_input_shape_at() (siglin method)": [[18, "phygnn.layers.custom_layers.SigLin.get_input_shape_at"]], "get_output_at() (siglin method)": [[18, "phygnn.layers.custom_layers.SigLin.get_output_at"]], "get_output_mask_at() (siglin method)": [[18, "phygnn.layers.custom_layers.SigLin.get_output_mask_at"]], "get_output_shape_at() (siglin method)": [[18, "phygnn.layers.custom_layers.SigLin.get_output_shape_at"]], "get_weights() (siglin method)": [[18, "phygnn.layers.custom_layers.SigLin.get_weights"]], "inbound_nodes (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.inbound_nodes"]], "input (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.input"]], "input_mask (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.input_mask"]], "input_shape (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.input_shape"]], "input_spec (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.input_spec"]], "load_own_variables() (siglin method)": [[18, "phygnn.layers.custom_layers.SigLin.load_own_variables"]], "losses (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.losses"]], "metrics (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.metrics"]], "name (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.name"]], "name_scope (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.name_scope"]], "non_trainable_variables (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.non_trainable_variables"]], "non_trainable_weights (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.non_trainable_weights"]], "outbound_nodes (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.outbound_nodes"]], "output (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.output"]], "output_mask (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.output_mask"]], "output_shape (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.output_shape"]], "save_own_variables() (siglin method)": [[18, "phygnn.layers.custom_layers.SigLin.save_own_variables"]], "set_weights() (siglin method)": [[18, "phygnn.layers.custom_layers.SigLin.set_weights"]], "submodules (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.submodules"]], "supports_masking (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.supports_masking"]], "trainable_variables (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.trainable_variables"]], "trainable_weights (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.trainable_weights"]], "variable_dtype (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.variable_dtype"]], "variables (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.variables"]], "weights (siglin property)": [[18, "phygnn.layers.custom_layers.SigLin.weights"]], "with_name_scope() (siglin class method)": [[18, "phygnn.layers.custom_layers.SigLin.with_name_scope"]], "skipconnection (class in phygnn.layers.custom_layers)": [[19, "phygnn.layers.custom_layers.SkipConnection"]], "__call__() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.__call__"]], "activity_regularizer (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.activity_regularizer"]], "add_loss() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.add_loss"]], "add_metric() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.add_metric"]], "add_update() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.add_update"]], "add_variable() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.add_variable"]], "add_weight() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.add_weight"]], "build() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.build"]], "build_from_config() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.build_from_config"]], "call() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.call"]], "compute_dtype (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.compute_dtype"]], "compute_mask() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.compute_mask"]], "compute_output_shape() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.compute_output_shape"]], "compute_output_signature() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.compute_output_signature"]], "count_params() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.count_params"]], "dtype (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.dtype"]], "dtype_policy (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.dtype_policy"]], "dynamic (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.dynamic"]], "finalize_state() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.finalize_state"]], "from_config() (skipconnection class method)": [[19, "phygnn.layers.custom_layers.SkipConnection.from_config"]], "get_build_config() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.get_build_config"]], "get_config() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.get_config"]], "get_input_at() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.get_input_at"]], "get_input_mask_at() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.get_input_mask_at"]], "get_input_shape_at() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.get_input_shape_at"]], "get_output_at() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.get_output_at"]], "get_output_mask_at() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.get_output_mask_at"]], "get_output_shape_at() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.get_output_shape_at"]], "get_weights() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.get_weights"]], "inbound_nodes (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.inbound_nodes"]], "input (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.input"]], "input_mask (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.input_mask"]], "input_shape (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.input_shape"]], "input_spec (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.input_spec"]], "load_own_variables() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.load_own_variables"]], "losses (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.losses"]], "metrics (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.metrics"]], "name (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.name"]], "name_scope (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.name_scope"]], "non_trainable_variables (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.non_trainable_variables"]], "non_trainable_weights (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.non_trainable_weights"]], "outbound_nodes (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.outbound_nodes"]], "output (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.output"]], "output_mask (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.output_mask"]], "output_shape (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.output_shape"]], "save_own_variables() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.save_own_variables"]], "set_weights() (skipconnection method)": [[19, "phygnn.layers.custom_layers.SkipConnection.set_weights"]], "submodules (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.submodules"]], "supports_masking (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.supports_masking"]], "trainable_variables (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.trainable_variables"]], "trainable_weights (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.trainable_weights"]], "variable_dtype (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.variable_dtype"]], "variables (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.variables"]], "weights (skipconnection property)": [[19, "phygnn.layers.custom_layers.SkipConnection.weights"]], "with_name_scope() (skipconnection class method)": [[19, "phygnn.layers.custom_layers.SkipConnection.with_name_scope"]], "sparseattention (class in phygnn.layers.custom_layers)": [[20, "phygnn.layers.custom_layers.SparseAttention"]], "__call__() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.__call__"]], "activity_regularizer (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.activity_regularizer"]], "add_loss() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.add_loss"]], "add_metric() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.add_metric"]], "add_update() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.add_update"]], "add_variable() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.add_variable"]], "add_weight() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.add_weight"]], "build() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.build"]], "build_from_config() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.build_from_config"]], "call() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.call"]], "compute_dtype (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.compute_dtype"]], "compute_mask() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.compute_mask"]], "compute_output_shape() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.compute_output_shape"]], "compute_output_signature() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.compute_output_signature"]], "count_params() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.count_params"]], "dtype (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.dtype"]], "dtype_policy (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.dtype_policy"]], "dynamic (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.dynamic"]], "finalize_state() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.finalize_state"]], "from_config() (sparseattention class method)": [[20, "phygnn.layers.custom_layers.SparseAttention.from_config"]], "get_build_config() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.get_build_config"]], "get_config() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.get_config"]], "get_input_at() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.get_input_at"]], "get_input_mask_at() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.get_input_mask_at"]], "get_input_shape_at() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.get_input_shape_at"]], "get_output_at() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.get_output_at"]], "get_output_mask_at() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.get_output_mask_at"]], "get_output_shape_at() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.get_output_shape_at"]], "get_weights() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.get_weights"]], "inbound_nodes (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.inbound_nodes"]], "input (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.input"]], "input_mask (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.input_mask"]], "input_shape (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.input_shape"]], "input_spec (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.input_spec"]], "load_own_variables() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.load_own_variables"]], "losses (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.losses"]], "metrics (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.metrics"]], "name (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.name"]], "name_scope (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.name_scope"]], "non_trainable_variables (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.non_trainable_variables"]], "non_trainable_weights (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.non_trainable_weights"]], "outbound_nodes (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.outbound_nodes"]], "output (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.output"]], "output_mask (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.output_mask"]], "output_shape (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.output_shape"]], "save_own_variables() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.save_own_variables"]], "set_weights() (sparseattention method)": [[20, "phygnn.layers.custom_layers.SparseAttention.set_weights"]], "submodules (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.submodules"]], "supports_masking (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.supports_masking"]], "trainable_variables (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.trainable_variables"]], "trainable_weights (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.trainable_weights"]], "variable_dtype (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.variable_dtype"]], "variables (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.variables"]], "weights (sparseattention property)": [[20, "phygnn.layers.custom_layers.SparseAttention.weights"]], "with_name_scope() (sparseattention class method)": [[20, "phygnn.layers.custom_layers.SparseAttention.with_name_scope"]], "spatialexpansion (class in phygnn.layers.custom_layers)": [[21, "phygnn.layers.custom_layers.SpatialExpansion"]], "__call__() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.__call__"]], "activity_regularizer (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.activity_regularizer"]], "add_loss() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.add_loss"]], "add_metric() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.add_metric"]], "add_update() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.add_update"]], "add_variable() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.add_variable"]], "add_weight() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.add_weight"]], "build() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.build"]], "build_from_config() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.build_from_config"]], "call() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.call"]], "compute_dtype (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.compute_dtype"]], "compute_mask() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.compute_mask"]], "compute_output_shape() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.compute_output_shape"]], "compute_output_signature() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.compute_output_signature"]], "count_params() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.count_params"]], "dtype (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.dtype"]], "dtype_policy (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.dtype_policy"]], "dynamic (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.dynamic"]], "finalize_state() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.finalize_state"]], "from_config() (spatialexpansion class method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.from_config"]], "get_build_config() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.get_build_config"]], "get_config() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.get_config"]], "get_input_at() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.get_input_at"]], "get_input_mask_at() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.get_input_mask_at"]], "get_input_shape_at() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.get_input_shape_at"]], "get_output_at() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.get_output_at"]], "get_output_mask_at() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.get_output_mask_at"]], "get_output_shape_at() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.get_output_shape_at"]], "get_weights() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.get_weights"]], "inbound_nodes (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.inbound_nodes"]], "input (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.input"]], "input_mask (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.input_mask"]], "input_shape (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.input_shape"]], "input_spec (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.input_spec"]], "load_own_variables() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.load_own_variables"]], "losses (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.losses"]], "metrics (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.metrics"]], "name (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.name"]], "name_scope (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.name_scope"]], "non_trainable_variables (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.non_trainable_variables"]], "non_trainable_weights (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.non_trainable_weights"]], "outbound_nodes (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.outbound_nodes"]], "output (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.output"]], "output_mask (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.output_mask"]], "output_shape (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.output_shape"]], "save_own_variables() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.save_own_variables"]], "set_weights() (spatialexpansion method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.set_weights"]], "submodules (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.submodules"]], "supports_masking (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.supports_masking"]], "trainable_variables (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.trainable_variables"]], "trainable_weights (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.trainable_weights"]], "variable_dtype (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.variable_dtype"]], "variables (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.variables"]], "weights (spatialexpansion property)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.weights"]], "with_name_scope() (spatialexpansion class method)": [[21, "phygnn.layers.custom_layers.SpatialExpansion.with_name_scope"]], "spatiotemporalexpansion (class in phygnn.layers.custom_layers)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion"]], "__call__() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.__call__"]], "activity_regularizer (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.activity_regularizer"]], "add_loss() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.add_loss"]], "add_metric() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.add_metric"]], "add_update() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.add_update"]], "add_variable() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.add_variable"]], "add_weight() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.add_weight"]], "build() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.build"]], "build_from_config() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.build_from_config"]], "call() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.call"]], "compute_dtype (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.compute_dtype"]], "compute_mask() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.compute_mask"]], "compute_output_shape() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.compute_output_shape"]], "compute_output_signature() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.compute_output_signature"]], "count_params() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.count_params"]], "dtype (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.dtype"]], "dtype_policy (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.dtype_policy"]], "dynamic (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.dynamic"]], "finalize_state() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.finalize_state"]], "from_config() (spatiotemporalexpansion class method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.from_config"]], "get_build_config() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.get_build_config"]], "get_config() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.get_config"]], "get_input_at() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.get_input_at"]], "get_input_mask_at() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.get_input_mask_at"]], "get_input_shape_at() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.get_input_shape_at"]], "get_output_at() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.get_output_at"]], "get_output_mask_at() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.get_output_mask_at"]], "get_output_shape_at() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.get_output_shape_at"]], "get_weights() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.get_weights"]], "inbound_nodes (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.inbound_nodes"]], "input (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.input"]], "input_mask (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.input_mask"]], "input_shape (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.input_shape"]], "input_spec (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.input_spec"]], "load_own_variables() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.load_own_variables"]], "losses (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.losses"]], "metrics (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.metrics"]], "name (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.name"]], "name_scope (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.name_scope"]], "non_trainable_variables (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.non_trainable_variables"]], "non_trainable_weights (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.non_trainable_weights"]], "outbound_nodes (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.outbound_nodes"]], "output (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.output"]], "output_mask (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.output_mask"]], "output_shape (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.output_shape"]], "save_own_variables() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.save_own_variables"]], "set_weights() (spatiotemporalexpansion method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.set_weights"]], "submodules (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.submodules"]], "supports_masking (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.supports_masking"]], "trainable_variables (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.trainable_variables"]], "trainable_weights (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.trainable_weights"]], "variable_dtype (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.variable_dtype"]], "variables (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.variables"]], "weights (spatiotemporalexpansion property)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.weights"]], "with_name_scope() (spatiotemporalexpansion class method)": [[22, "phygnn.layers.custom_layers.SpatioTemporalExpansion.with_name_scope"]], "squeezeandexcitation (class in phygnn.layers.custom_layers)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation"]], "__call__() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.__call__"]], "activity_regularizer (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.activity_regularizer"]], "add_loss() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.add_loss"]], "add_metric() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.add_metric"]], "add_update() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.add_update"]], "add_variable() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.add_variable"]], "add_weight() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.add_weight"]], "build() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.build"]], "build_from_config() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.build_from_config"]], "call() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.call"]], "compute_dtype (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.compute_dtype"]], "compute_mask() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.compute_mask"]], "compute_output_shape() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.compute_output_shape"]], "compute_output_signature() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.compute_output_signature"]], "count_params() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.count_params"]], "dtype (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.dtype"]], "dtype_policy (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.dtype_policy"]], "dynamic (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.dynamic"]], "finalize_state() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.finalize_state"]], "from_config() (squeezeandexcitation class method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.from_config"]], "get_build_config() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.get_build_config"]], "get_config() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.get_config"]], "get_input_at() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.get_input_at"]], "get_input_mask_at() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.get_input_mask_at"]], "get_input_shape_at() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.get_input_shape_at"]], "get_output_at() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.get_output_at"]], "get_output_mask_at() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.get_output_mask_at"]], "get_output_shape_at() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.get_output_shape_at"]], "get_weights() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.get_weights"]], "inbound_nodes (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.inbound_nodes"]], "input (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.input"]], "input_mask (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.input_mask"]], "input_shape (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.input_shape"]], "input_spec (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.input_spec"]], "load_own_variables() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.load_own_variables"]], "losses (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.losses"]], "metrics (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.metrics"]], "name (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.name"]], "name_scope (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.name_scope"]], "non_trainable_variables (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.non_trainable_variables"]], "non_trainable_weights (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.non_trainable_weights"]], "outbound_nodes (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.outbound_nodes"]], "output (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.output"]], "output_mask (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.output_mask"]], "output_shape (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.output_shape"]], "save_own_variables() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.save_own_variables"]], "set_weights() (squeezeandexcitation method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.set_weights"]], "submodules (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.submodules"]], "supports_masking (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.supports_masking"]], "trainable_variables (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.trainable_variables"]], "trainable_weights (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.trainable_weights"]], "variable_dtype (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.variable_dtype"]], "variables (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.variables"]], "weights (squeezeandexcitation property)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.weights"]], "with_name_scope() (squeezeandexcitation class method)": [[23, "phygnn.layers.custom_layers.SqueezeAndExcitation.with_name_scope"]], "sup3radder (class in phygnn.layers.custom_layers)": [[24, "phygnn.layers.custom_layers.Sup3rAdder"]], "__call__() (sup3radder method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.__call__"]], "activity_regularizer (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.activity_regularizer"]], "add_loss() (sup3radder method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.add_loss"]], "add_metric() (sup3radder method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.add_metric"]], "add_update() (sup3radder method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.add_update"]], "add_variable() (sup3radder method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.add_variable"]], "add_weight() (sup3radder method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.add_weight"]], "build() (sup3radder method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.build"]], "build_from_config() (sup3radder method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.build_from_config"]], "call() (sup3radder static method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.call"]], "compute_dtype (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.compute_dtype"]], "compute_mask() (sup3radder method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.compute_mask"]], "compute_output_shape() (sup3radder method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.compute_output_shape"]], "compute_output_signature() (sup3radder method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.compute_output_signature"]], "count_params() (sup3radder method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.count_params"]], "dtype (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.dtype"]], "dtype_policy (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.dtype_policy"]], "dynamic (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.dynamic"]], "finalize_state() (sup3radder method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.finalize_state"]], "from_config() (sup3radder class method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.from_config"]], "get_build_config() (sup3radder method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.get_build_config"]], "get_config() (sup3radder method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.get_config"]], "get_input_at() (sup3radder method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.get_input_at"]], "get_input_mask_at() (sup3radder method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.get_input_mask_at"]], "get_input_shape_at() (sup3radder method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.get_input_shape_at"]], "get_output_at() (sup3radder method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.get_output_at"]], "get_output_mask_at() (sup3radder method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.get_output_mask_at"]], "get_output_shape_at() (sup3radder method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.get_output_shape_at"]], "get_weights() (sup3radder method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.get_weights"]], "inbound_nodes (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.inbound_nodes"]], "input (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.input"]], "input_mask (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.input_mask"]], "input_shape (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.input_shape"]], "input_spec (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.input_spec"]], "load_own_variables() (sup3radder method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.load_own_variables"]], "losses (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.losses"]], "metrics (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.metrics"]], "name (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.name"]], "name_scope (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.name_scope"]], "non_trainable_variables (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.non_trainable_variables"]], "non_trainable_weights (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.non_trainable_weights"]], "outbound_nodes (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.outbound_nodes"]], "output (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.output"]], "output_mask (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.output_mask"]], "output_shape (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.output_shape"]], "save_own_variables() (sup3radder method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.save_own_variables"]], "set_weights() (sup3radder method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.set_weights"]], "submodules (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.submodules"]], "supports_masking (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.supports_masking"]], "trainable_variables (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.trainable_variables"]], "trainable_weights (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.trainable_weights"]], "variable_dtype (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.variable_dtype"]], "variables (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.variables"]], "weights (sup3radder property)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.weights"]], "with_name_scope() (sup3radder class method)": [[24, "phygnn.layers.custom_layers.Sup3rAdder.with_name_scope"]], "sup3rconcat (class in phygnn.layers.custom_layers)": [[25, "phygnn.layers.custom_layers.Sup3rConcat"]], "__call__() (sup3rconcat method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.__call__"]], "activity_regularizer (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.activity_regularizer"]], "add_loss() (sup3rconcat method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.add_loss"]], "add_metric() (sup3rconcat method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.add_metric"]], "add_update() (sup3rconcat method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.add_update"]], "add_variable() (sup3rconcat method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.add_variable"]], "add_weight() (sup3rconcat method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.add_weight"]], "build() (sup3rconcat method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.build"]], "build_from_config() (sup3rconcat method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.build_from_config"]], "call() (sup3rconcat static method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.call"]], "compute_dtype (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.compute_dtype"]], "compute_mask() (sup3rconcat method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.compute_mask"]], "compute_output_shape() (sup3rconcat method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.compute_output_shape"]], "compute_output_signature() (sup3rconcat method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.compute_output_signature"]], "count_params() (sup3rconcat method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.count_params"]], "dtype (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.dtype"]], "dtype_policy (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.dtype_policy"]], "dynamic (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.dynamic"]], "finalize_state() (sup3rconcat method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.finalize_state"]], "from_config() (sup3rconcat class method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.from_config"]], "get_build_config() (sup3rconcat method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.get_build_config"]], "get_config() (sup3rconcat method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.get_config"]], "get_input_at() (sup3rconcat method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.get_input_at"]], "get_input_mask_at() (sup3rconcat method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.get_input_mask_at"]], "get_input_shape_at() (sup3rconcat method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.get_input_shape_at"]], "get_output_at() (sup3rconcat method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.get_output_at"]], "get_output_mask_at() (sup3rconcat method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.get_output_mask_at"]], "get_output_shape_at() (sup3rconcat method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.get_output_shape_at"]], "get_weights() (sup3rconcat method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.get_weights"]], "inbound_nodes (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.inbound_nodes"]], "input (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.input"]], "input_mask (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.input_mask"]], "input_shape (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.input_shape"]], "input_spec (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.input_spec"]], "load_own_variables() (sup3rconcat method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.load_own_variables"]], "losses (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.losses"]], "metrics (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.metrics"]], "name (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.name"]], "name_scope (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.name_scope"]], "non_trainable_variables (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.non_trainable_variables"]], "non_trainable_weights (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.non_trainable_weights"]], "outbound_nodes (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.outbound_nodes"]], "output (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.output"]], "output_mask (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.output_mask"]], "output_shape (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.output_shape"]], "save_own_variables() (sup3rconcat method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.save_own_variables"]], "set_weights() (sup3rconcat method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.set_weights"]], "submodules (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.submodules"]], "supports_masking (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.supports_masking"]], "trainable_variables (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.trainable_variables"]], "trainable_weights (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.trainable_weights"]], "variable_dtype (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.variable_dtype"]], "variables (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.variables"]], "weights (sup3rconcat property)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.weights"]], "with_name_scope() (sup3rconcat class method)": [[25, "phygnn.layers.custom_layers.Sup3rConcat.with_name_scope"]], "sup3rconcatobs (class in phygnn.layers.custom_layers)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs"]], "__call__() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.__call__"]], "activity_regularizer (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.activity_regularizer"]], "add_loss() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.add_loss"]], "add_metric() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.add_metric"]], "add_update() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.add_update"]], "add_variable() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.add_variable"]], "add_weight() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.add_weight"]], "build() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.build"]], "build_from_config() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.build_from_config"]], "call() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.call"]], "compute_dtype (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.compute_dtype"]], "compute_mask() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.compute_mask"]], "compute_output_shape() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.compute_output_shape"]], "compute_output_signature() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.compute_output_signature"]], "count_params() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.count_params"]], "dtype (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.dtype"]], "dtype_policy (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.dtype_policy"]], "dynamic (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.dynamic"]], "finalize_state() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.finalize_state"]], "from_config() (sup3rconcatobs class method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.from_config"]], "get_build_config() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.get_build_config"]], "get_config() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.get_config"]], "get_input_at() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.get_input_at"]], "get_input_mask_at() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.get_input_mask_at"]], "get_input_shape_at() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.get_input_shape_at"]], "get_output_at() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.get_output_at"]], "get_output_mask_at() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.get_output_mask_at"]], "get_output_shape_at() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.get_output_shape_at"]], "get_weights() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.get_weights"]], "inbound_nodes (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.inbound_nodes"]], "input (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.input"]], "input_mask (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.input_mask"]], "input_shape (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.input_shape"]], "input_spec (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.input_spec"]], "load_own_variables() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.load_own_variables"]], "losses (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.losses"]], "metrics (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.metrics"]], "name (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.name"]], "name_scope (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.name_scope"]], "non_trainable_variables (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.non_trainable_variables"]], "non_trainable_weights (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.non_trainable_weights"]], "outbound_nodes (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.outbound_nodes"]], "output (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.output"]], "output_mask (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.output_mask"]], "output_shape (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.output_shape"]], "save_own_variables() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.save_own_variables"]], "set_weights() (sup3rconcatobs method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.set_weights"]], "submodules (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.submodules"]], "supports_masking (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.supports_masking"]], "trainable_variables (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.trainable_variables"]], "trainable_weights (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.trainable_weights"]], "variable_dtype (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.variable_dtype"]], "variables (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.variables"]], "weights (sup3rconcatobs property)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.weights"]], "with_name_scope() (sup3rconcatobs class method)": [[26, "phygnn.layers.custom_layers.Sup3rConcatObs.with_name_scope"]], "sup3robsmodel (class in phygnn.layers.custom_layers)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel"]], "__call__() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.__call__"]], "activity_regularizer (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.activity_regularizer"]], "add_loss() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.add_loss"]], "add_metric() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.add_metric"]], "add_update() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.add_update"]], "add_variable() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.add_variable"]], "add_weight() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.add_weight"]], "build() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.build"]], "build_from_config() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.build_from_config"]], "call() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.call"]], "compute_dtype (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.compute_dtype"]], "compute_mask() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.compute_mask"]], "compute_output_shape() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.compute_output_shape"]], "compute_output_signature() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.compute_output_signature"]], "count_params() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.count_params"]], "dtype (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.dtype"]], "dtype_policy (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.dtype_policy"]], "dynamic (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.dynamic"]], "finalize_state() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.finalize_state"]], "from_config() (sup3robsmodel class method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.from_config"]], "get_build_config() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.get_build_config"]], "get_config() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.get_config"]], "get_input_at() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.get_input_at"]], "get_input_mask_at() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.get_input_mask_at"]], "get_input_shape_at() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.get_input_shape_at"]], "get_output_at() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.get_output_at"]], "get_output_mask_at() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.get_output_mask_at"]], "get_output_shape_at() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.get_output_shape_at"]], "get_weights() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.get_weights"]], "inbound_nodes (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.inbound_nodes"]], "input (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.input"]], "input_mask (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.input_mask"]], "input_shape (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.input_shape"]], "input_spec (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.input_spec"]], "load_own_variables() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.load_own_variables"]], "losses (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.losses"]], "metrics (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.metrics"]], "name (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.name"]], "name_scope (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.name_scope"]], "non_trainable_variables (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.non_trainable_variables"]], "non_trainable_weights (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.non_trainable_weights"]], "outbound_nodes (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.outbound_nodes"]], "output (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.output"]], "output_mask (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.output_mask"]], "output_shape (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.output_shape"]], "save_own_variables() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.save_own_variables"]], "set_weights() (sup3robsmodel method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.set_weights"]], "submodules (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.submodules"]], "supports_masking (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.supports_masking"]], "trainable_variables (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.trainable_variables"]], "trainable_weights (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.trainable_weights"]], "variable_dtype (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.variable_dtype"]], "variables (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.variables"]], "weights (sup3robsmodel property)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.weights"]], "with_name_scope() (sup3robsmodel class method)": [[27, "phygnn.layers.custom_layers.Sup3rObsModel.with_name_scope"]], "tilelayer (class in phygnn.layers.custom_layers)": [[28, "phygnn.layers.custom_layers.TileLayer"]], "__call__() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.__call__"]], "activity_regularizer (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.activity_regularizer"]], "add_loss() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.add_loss"]], "add_metric() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.add_metric"]], "add_update() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.add_update"]], "add_variable() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.add_variable"]], "add_weight() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.add_weight"]], "build() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.build"]], "build_from_config() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.build_from_config"]], "call() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.call"]], "compute_dtype (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.compute_dtype"]], "compute_mask() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.compute_mask"]], "compute_output_shape() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.compute_output_shape"]], "compute_output_signature() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.compute_output_signature"]], "count_params() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.count_params"]], "dtype (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.dtype"]], "dtype_policy (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.dtype_policy"]], "dynamic (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.dynamic"]], "finalize_state() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.finalize_state"]], "from_config() (tilelayer class method)": [[28, "phygnn.layers.custom_layers.TileLayer.from_config"]], "get_build_config() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.get_build_config"]], "get_config() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.get_config"]], "get_input_at() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.get_input_at"]], "get_input_mask_at() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.get_input_mask_at"]], "get_input_shape_at() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.get_input_shape_at"]], "get_output_at() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.get_output_at"]], "get_output_mask_at() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.get_output_mask_at"]], "get_output_shape_at() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.get_output_shape_at"]], "get_weights() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.get_weights"]], "inbound_nodes (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.inbound_nodes"]], "input (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.input"]], "input_mask (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.input_mask"]], "input_shape (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.input_shape"]], "input_spec (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.input_spec"]], "load_own_variables() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.load_own_variables"]], "losses (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.losses"]], "metrics (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.metrics"]], "name (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.name"]], "name_scope (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.name_scope"]], "non_trainable_variables (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.non_trainable_variables"]], "non_trainable_weights (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.non_trainable_weights"]], "outbound_nodes (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.outbound_nodes"]], "output (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.output"]], "output_mask (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.output_mask"]], "output_shape (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.output_shape"]], "save_own_variables() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.save_own_variables"]], "set_weights() (tilelayer method)": [[28, "phygnn.layers.custom_layers.TileLayer.set_weights"]], "submodules (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.submodules"]], "supports_masking (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.supports_masking"]], "trainable_variables (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.trainable_variables"]], "trainable_weights (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.trainable_weights"]], "variable_dtype (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.variable_dtype"]], "variables (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.variables"]], "weights (tilelayer property)": [[28, "phygnn.layers.custom_layers.TileLayer.weights"]], "with_name_scope() (tilelayer class method)": [[28, "phygnn.layers.custom_layers.TileLayer.with_name_scope"]], "unitconversion (class in phygnn.layers.custom_layers)": [[29, "phygnn.layers.custom_layers.UnitConversion"]], "__call__() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.__call__"]], "activity_regularizer (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.activity_regularizer"]], "add_loss() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.add_loss"]], "add_metric() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.add_metric"]], "add_update() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.add_update"]], "add_variable() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.add_variable"]], "add_weight() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.add_weight"]], "build() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.build"]], "build_from_config() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.build_from_config"]], "call() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.call"]], "compute_dtype (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.compute_dtype"]], "compute_mask() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.compute_mask"]], "compute_output_shape() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.compute_output_shape"]], "compute_output_signature() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.compute_output_signature"]], "count_params() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.count_params"]], "dtype (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.dtype"]], "dtype_policy (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.dtype_policy"]], "dynamic (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.dynamic"]], "finalize_state() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.finalize_state"]], "from_config() (unitconversion class method)": [[29, "phygnn.layers.custom_layers.UnitConversion.from_config"]], "get_build_config() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.get_build_config"]], "get_config() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.get_config"]], "get_input_at() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.get_input_at"]], "get_input_mask_at() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.get_input_mask_at"]], "get_input_shape_at() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.get_input_shape_at"]], "get_output_at() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.get_output_at"]], "get_output_mask_at() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.get_output_mask_at"]], "get_output_shape_at() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.get_output_shape_at"]], "get_weights() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.get_weights"]], "inbound_nodes (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.inbound_nodes"]], "input (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.input"]], "input_mask (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.input_mask"]], "input_shape (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.input_shape"]], "input_spec (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.input_spec"]], "load_own_variables() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.load_own_variables"]], "losses (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.losses"]], "metrics (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.metrics"]], "name (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.name"]], "name_scope (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.name_scope"]], "non_trainable_variables (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.non_trainable_variables"]], "non_trainable_weights (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.non_trainable_weights"]], "outbound_nodes (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.outbound_nodes"]], "output (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.output"]], "output_mask (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.output_mask"]], "output_shape (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.output_shape"]], "save_own_variables() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.save_own_variables"]], "set_weights() (unitconversion method)": [[29, "phygnn.layers.custom_layers.UnitConversion.set_weights"]], "submodules (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.submodules"]], "supports_masking (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.supports_masking"]], "trainable_variables (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.trainable_variables"]], "trainable_weights (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.trainable_weights"]], "variable_dtype (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.variable_dtype"]], "variables (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.variables"]], "weights (unitconversion property)": [[29, "phygnn.layers.custom_layers.UnitConversion.weights"]], "with_name_scope() (unitconversion class method)": [[29, "phygnn.layers.custom_layers.UnitConversion.with_name_scope"]], "phygnn.layers.handlers": [[30, "module-phygnn.layers.handlers"]], "hiddenlayers (class in phygnn.layers.handlers)": [[31, "phygnn.layers.handlers.HiddenLayers"]], "add_layer() (hiddenlayers method)": [[31, "phygnn.layers.handlers.HiddenLayers.add_layer"]], "add_layer_by_class() (hiddenlayers method)": [[31, "phygnn.layers.handlers.HiddenLayers.add_layer_by_class"]], "add_skip_layer() (hiddenlayers method)": [[31, "phygnn.layers.handlers.HiddenLayers.add_skip_layer"]], "bias_weights (hiddenlayers property)": [[31, "phygnn.layers.handlers.HiddenLayers.bias_weights"]], "compile() (hiddenlayers class method)": [[31, "phygnn.layers.handlers.HiddenLayers.compile"]], "hidden_layer_kwargs (hiddenlayers property)": [[31, "phygnn.layers.handlers.HiddenLayers.hidden_layer_kwargs"]], "kernel_weights (hiddenlayers property)": [[31, "phygnn.layers.handlers.HiddenLayers.kernel_weights"]], "layers (hiddenlayers property)": [[31, "phygnn.layers.handlers.HiddenLayers.layers"]], "parse_repeats() (hiddenlayers static method)": [[31, "phygnn.layers.handlers.HiddenLayers.parse_repeats"]], "skip_layers (hiddenlayers property)": [[31, "phygnn.layers.handlers.HiddenLayers.skip_layers"]], "weights (hiddenlayers property)": [[31, "phygnn.layers.handlers.HiddenLayers.weights"]], "layers (class in phygnn.layers.handlers)": [[32, "phygnn.layers.handlers.Layers"]], "add_layer() (layers method)": [[32, "phygnn.layers.handlers.Layers.add_layer"]], "add_layer_by_class() (layers method)": [[32, "phygnn.layers.handlers.Layers.add_layer_by_class"]], "add_skip_layer() (layers method)": [[32, "phygnn.layers.handlers.Layers.add_skip_layer"]], "bias_weights (layers property)": [[32, "phygnn.layers.handlers.Layers.bias_weights"]], "compile() (layers class method)": [[32, "phygnn.layers.handlers.Layers.compile"]], "hidden_layer_kwargs (layers property)": [[32, "phygnn.layers.handlers.Layers.hidden_layer_kwargs"]], "input_layer_kwargs (layers property)": [[32, "phygnn.layers.handlers.Layers.input_layer_kwargs"]], "kernel_weights (layers property)": [[32, "phygnn.layers.handlers.Layers.kernel_weights"]], "layers (layers property)": [[32, "phygnn.layers.handlers.Layers.layers"]], "output_layer_kwargs (layers property)": [[32, "phygnn.layers.handlers.Layers.output_layer_kwargs"]], "parse_repeats() (layers static method)": [[32, "phygnn.layers.handlers.Layers.parse_repeats"]], "skip_layers (layers property)": [[32, "phygnn.layers.handlers.Layers.skip_layers"]], "weights (layers property)": [[32, "phygnn.layers.handlers.Layers.weights"]], "phygnn.model_interfaces": [[33, "module-phygnn.model_interfaces"]], "phygnn.model_interfaces.base_model": [[34, "module-phygnn.model_interfaces.base_model"]], "modelbase (class in phygnn.model_interfaces.base_model)": [[35, "phygnn.model_interfaces.base_model.ModelBase"]], "dict_json_convert() (modelbase static method)": [[35, "phygnn.model_interfaces.base_model.ModelBase.dict_json_convert"]], "feature_dims (modelbase property)": [[35, "phygnn.model_interfaces.base_model.ModelBase.feature_dims"]], "feature_means (modelbase property)": [[35, "phygnn.model_interfaces.base_model.ModelBase.feature_means"]], "feature_names (modelbase property)": [[35, "phygnn.model_interfaces.base_model.ModelBase.feature_names"]], "feature_stdevs (modelbase property)": [[35, "phygnn.model_interfaces.base_model.ModelBase.feature_stdevs"]], "get_mean() (modelbase method)": [[35, "phygnn.model_interfaces.base_model.ModelBase.get_mean"]], "get_norm_params() (modelbase method)": [[35, "phygnn.model_interfaces.base_model.ModelBase.get_norm_params"]], "get_stdev() (modelbase method)": [[35, "phygnn.model_interfaces.base_model.ModelBase.get_stdev"]], "input_feature_names (modelbase property)": [[35, "phygnn.model_interfaces.base_model.ModelBase.input_feature_names"]], "label_dims (modelbase property)": [[35, "phygnn.model_interfaces.base_model.ModelBase.label_dims"]], "label_means (modelbase property)": [[35, "phygnn.model_interfaces.base_model.ModelBase.label_means"]], "label_names (modelbase property)": [[35, "phygnn.model_interfaces.base_model.ModelBase.label_names"]], "label_stdevs (modelbase property)": [[35, "phygnn.model_interfaces.base_model.ModelBase.label_stdevs"]], "make_one_hot_feature_names() (modelbase static method)": [[35, "phygnn.model_interfaces.base_model.ModelBase.make_one_hot_feature_names"]], "means (modelbase property)": [[35, "phygnn.model_interfaces.base_model.ModelBase.means"]], "model (modelbase property)": [[35, "phygnn.model_interfaces.base_model.ModelBase.model"]], "model_summary (modelbase property)": [[35, "phygnn.model_interfaces.base_model.ModelBase.model_summary"]], "normalization_parameters (modelbase property)": [[35, "phygnn.model_interfaces.base_model.ModelBase.normalization_parameters"]], "normalize() (modelbase method)": [[35, "phygnn.model_interfaces.base_model.ModelBase.normalize"]], "normalize_features (modelbase property)": [[35, "phygnn.model_interfaces.base_model.ModelBase.normalize_features"]], "normalize_labels (modelbase property)": [[35, "phygnn.model_interfaces.base_model.ModelBase.normalize_labels"]], "one_hot_categories (modelbase property)": [[35, "phygnn.model_interfaces.base_model.ModelBase.one_hot_categories"]], "one_hot_feature_names (modelbase property)": [[35, "phygnn.model_interfaces.base_model.ModelBase.one_hot_feature_names"]], "one_hot_input_feature_names (modelbase property)": [[35, "phygnn.model_interfaces.base_model.ModelBase.one_hot_input_feature_names"]], "parse_features() (modelbase method)": [[35, "phygnn.model_interfaces.base_model.ModelBase.parse_features"]], "parse_labels() (modelbase method)": [[35, "phygnn.model_interfaces.base_model.ModelBase.parse_labels"]], "predict() (modelbase method)": [[35, "phygnn.model_interfaces.base_model.ModelBase.predict"]], "seed() (modelbase static method)": [[35, "phygnn.model_interfaces.base_model.ModelBase.seed"]], "stdevs (modelbase property)": [[35, "phygnn.model_interfaces.base_model.ModelBase.stdevs"]], "unnormalize() (modelbase method)": [[35, "phygnn.model_interfaces.base_model.ModelBase.unnormalize"]], "version_record (modelbase property)": [[35, "phygnn.model_interfaces.base_model.ModelBase.version_record"]], "phygnn.model_interfaces.phygnn_model": [[36, "module-phygnn.model_interfaces.phygnn_model"]], "model_class (phygnnmodel attribute)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.MODEL_CLASS"]], "phygnnmodel (class in phygnn.model_interfaces.phygnn_model)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel"]], "bias_weights (phygnnmodel property)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.bias_weights"]], "build() (phygnnmodel class method)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.build"]], "build_trained() (phygnnmodel class method)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.build_trained"]], "dict_json_convert() (phygnnmodel static method)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.dict_json_convert"]], "feature_dims (phygnnmodel property)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.feature_dims"]], "feature_means (phygnnmodel property)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.feature_means"]], "feature_names (phygnnmodel property)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.feature_names"]], "feature_stdevs (phygnnmodel property)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.feature_stdevs"]], "get_mean() (phygnnmodel method)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.get_mean"]], "get_norm_params() (phygnnmodel method)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.get_norm_params"]], "get_stdev() (phygnnmodel method)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.get_stdev"]], "history (phygnnmodel property)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.history"]], "input_feature_names (phygnnmodel property)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.input_feature_names"]], "kernel_weights (phygnnmodel property)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.kernel_weights"]], "label_dims (phygnnmodel property)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.label_dims"]], "label_means (phygnnmodel property)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.label_means"]], "label_names (phygnnmodel property)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.label_names"]], "label_stdevs (phygnnmodel property)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.label_stdevs"]], "layers (phygnnmodel property)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.layers"]], "load() (phygnnmodel class method)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.load"]], "make_one_hot_feature_names() (phygnnmodel static method)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.make_one_hot_feature_names"]], "means (phygnnmodel property)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.means"]], "model (phygnnmodel property)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.model"]], "model_summary (phygnnmodel property)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.model_summary"]], "normalization_parameters (phygnnmodel property)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.normalization_parameters"]], "normalize() (phygnnmodel method)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.normalize"]], "normalize_features (phygnnmodel property)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.normalize_features"]], "normalize_labels (phygnnmodel property)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.normalize_labels"]], "one_hot_categories (phygnnmodel property)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.one_hot_categories"]], "one_hot_feature_names (phygnnmodel property)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.one_hot_feature_names"]], "one_hot_input_feature_names (phygnnmodel property)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.one_hot_input_feature_names"]], "parse_features() (phygnnmodel method)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.parse_features"]], "parse_labels() (phygnnmodel method)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.parse_labels"]], "predict() (phygnnmodel method)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.predict"]], "save_model() (phygnnmodel method)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.save_model"]], "seed() (phygnnmodel static method)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.seed"]], "set_loss_weights() (phygnnmodel method)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.set_loss_weights"]], "stdevs (phygnnmodel property)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.stdevs"]], "train_model() (phygnnmodel method)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.train_model"]], "unnormalize() (phygnnmodel method)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.unnormalize"]], "version_record (phygnnmodel property)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.version_record"]], "weights (phygnnmodel property)": [[37, "phygnn.model_interfaces.phygnn_model.PhygnnModel.weights"]], "phygnn.model_interfaces.random_forest_model": [[38, "module-phygnn.model_interfaces.random_forest_model"]], "randomforestmodel (class in phygnn.model_interfaces.random_forest_model)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel"]], "build_trained() (randomforestmodel class method)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.build_trained"]], "compile_model() (randomforestmodel static method)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.compile_model"]], "dict_json_convert() (randomforestmodel static method)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.dict_json_convert"]], "feature_dims (randomforestmodel property)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.feature_dims"]], "feature_means (randomforestmodel property)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.feature_means"]], "feature_names (randomforestmodel property)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.feature_names"]], "feature_stdevs (randomforestmodel property)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.feature_stdevs"]], "get_mean() (randomforestmodel method)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.get_mean"]], "get_norm_params() (randomforestmodel method)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.get_norm_params"]], "get_stdev() (randomforestmodel method)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.get_stdev"]], "input_feature_names (randomforestmodel property)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.input_feature_names"]], "label_dims (randomforestmodel property)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.label_dims"]], "label_means (randomforestmodel property)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.label_means"]], "label_names (randomforestmodel property)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.label_names"]], "label_stdevs (randomforestmodel property)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.label_stdevs"]], "load() (randomforestmodel class method)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.load"]], "make_one_hot_feature_names() (randomforestmodel static method)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.make_one_hot_feature_names"]], "means (randomforestmodel property)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.means"]], "model (randomforestmodel property)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.model"]], "model_summary (randomforestmodel property)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.model_summary"]], "normalization_parameters (randomforestmodel property)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.normalization_parameters"]], "normalize() (randomforestmodel method)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.normalize"]], "normalize_features (randomforestmodel property)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.normalize_features"]], "normalize_labels (randomforestmodel property)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.normalize_labels"]], "one_hot_categories (randomforestmodel property)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.one_hot_categories"]], "one_hot_feature_names (randomforestmodel property)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.one_hot_feature_names"]], "one_hot_input_feature_names (randomforestmodel property)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.one_hot_input_feature_names"]], "parse_features() (randomforestmodel method)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.parse_features"]], "parse_labels() (randomforestmodel method)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.parse_labels"]], "predict() (randomforestmodel method)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.predict"]], "save_model() (randomforestmodel method)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.save_model"]], "seed() (randomforestmodel static method)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.seed"]], "stdevs (randomforestmodel property)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.stdevs"]], "train_model() (randomforestmodel method)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.train_model"]], "unnormalize() (randomforestmodel method)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.unnormalize"]], "unnormalize_prediction() (randomforestmodel method)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.unnormalize_prediction"]], "version_record (randomforestmodel property)": [[39, "phygnn.model_interfaces.random_forest_model.RandomForestModel.version_record"]], "phygnn.model_interfaces.tf_model": [[40, "module-phygnn.model_interfaces.tf_model"]], "tfmodel (class in phygnn.model_interfaces.tf_model)": [[41, "phygnn.model_interfaces.tf_model.TfModel"]], "bias_weights (tfmodel property)": [[41, "phygnn.model_interfaces.tf_model.TfModel.bias_weights"]], "build() (tfmodel class method)": [[41, "phygnn.model_interfaces.tf_model.TfModel.build"]], "build_trained() (tfmodel class method)": [[41, "phygnn.model_interfaces.tf_model.TfModel.build_trained"]], "compile_model() (tfmodel static method)": [[41, "phygnn.model_interfaces.tf_model.TfModel.compile_model"]], "dict_json_convert() (tfmodel static method)": [[41, "phygnn.model_interfaces.tf_model.TfModel.dict_json_convert"]], "feature_dims (tfmodel property)": [[41, "phygnn.model_interfaces.tf_model.TfModel.feature_dims"]], "feature_means (tfmodel property)": [[41, "phygnn.model_interfaces.tf_model.TfModel.feature_means"]], "feature_names (tfmodel property)": [[41, "phygnn.model_interfaces.tf_model.TfModel.feature_names"]], "feature_stdevs (tfmodel property)": [[41, "phygnn.model_interfaces.tf_model.TfModel.feature_stdevs"]], "get_mean() (tfmodel method)": [[41, "phygnn.model_interfaces.tf_model.TfModel.get_mean"]], "get_norm_params() (tfmodel method)": [[41, "phygnn.model_interfaces.tf_model.TfModel.get_norm_params"]], "get_stdev() (tfmodel method)": [[41, "phygnn.model_interfaces.tf_model.TfModel.get_stdev"]], "history (tfmodel property)": [[41, "phygnn.model_interfaces.tf_model.TfModel.history"]], "input_feature_names (tfmodel property)": [[41, "phygnn.model_interfaces.tf_model.TfModel.input_feature_names"]], "kernel_weights (tfmodel property)": [[41, "phygnn.model_interfaces.tf_model.TfModel.kernel_weights"]], "label_dims (tfmodel property)": [[41, "phygnn.model_interfaces.tf_model.TfModel.label_dims"]], "label_means (tfmodel property)": [[41, "phygnn.model_interfaces.tf_model.TfModel.label_means"]], "label_names (tfmodel property)": [[41, "phygnn.model_interfaces.tf_model.TfModel.label_names"]], "label_stdevs (tfmodel property)": [[41, "phygnn.model_interfaces.tf_model.TfModel.label_stdevs"]], "layers (tfmodel property)": [[41, "phygnn.model_interfaces.tf_model.TfModel.layers"]], "load() (tfmodel class method)": [[41, "phygnn.model_interfaces.tf_model.TfModel.load"]], "make_one_hot_feature_names() (tfmodel static method)": [[41, "phygnn.model_interfaces.tf_model.TfModel.make_one_hot_feature_names"]], "means (tfmodel property)": [[41, "phygnn.model_interfaces.tf_model.TfModel.means"]], "model (tfmodel property)": [[41, "phygnn.model_interfaces.tf_model.TfModel.model"]], "model_summary (tfmodel property)": [[41, "phygnn.model_interfaces.tf_model.TfModel.model_summary"]], "normalization_parameters (tfmodel property)": [[41, "phygnn.model_interfaces.tf_model.TfModel.normalization_parameters"]], "normalize() (tfmodel method)": [[41, "phygnn.model_interfaces.tf_model.TfModel.normalize"]], "normalize_features (tfmodel property)": [[41, "phygnn.model_interfaces.tf_model.TfModel.normalize_features"]], "normalize_labels (tfmodel property)": [[41, "phygnn.model_interfaces.tf_model.TfModel.normalize_labels"]], "one_hot_categories (tfmodel property)": [[41, "phygnn.model_interfaces.tf_model.TfModel.one_hot_categories"]], "one_hot_feature_names (tfmodel property)": [[41, "phygnn.model_interfaces.tf_model.TfModel.one_hot_feature_names"]], "one_hot_input_feature_names (tfmodel property)": [[41, "phygnn.model_interfaces.tf_model.TfModel.one_hot_input_feature_names"]], "parse_features() (tfmodel method)": [[41, "phygnn.model_interfaces.tf_model.TfModel.parse_features"]], "parse_labels() (tfmodel method)": [[41, "phygnn.model_interfaces.tf_model.TfModel.parse_labels"]], "predict() (tfmodel method)": [[41, "phygnn.model_interfaces.tf_model.TfModel.predict"]], "save_model() (tfmodel method)": [[41, "phygnn.model_interfaces.tf_model.TfModel.save_model"]], "seed() (tfmodel static method)": [[41, "phygnn.model_interfaces.tf_model.TfModel.seed"]], "stdevs (tfmodel property)": [[41, "phygnn.model_interfaces.tf_model.TfModel.stdevs"]], "train_model() (tfmodel method)": [[41, "phygnn.model_interfaces.tf_model.TfModel.train_model"]], "unnormalize() (tfmodel method)": [[41, "phygnn.model_interfaces.tf_model.TfModel.unnormalize"]], "version_record (tfmodel property)": [[41, "phygnn.model_interfaces.tf_model.TfModel.version_record"]], "weights (tfmodel property)": [[41, "phygnn.model_interfaces.tf_model.TfModel.weights"]], "phygnn.phygnn": [[42, "module-phygnn.phygnn"]], "physicsguidedneuralnetwork (class in phygnn.phygnn)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork"]], "bias_reg_term (physicsguidedneuralnetwork property)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork.bias_reg_term"]], "bias_weights (physicsguidedneuralnetwork property)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork.bias_weights"]], "calc_loss() (physicsguidedneuralnetwork method)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork.calc_loss"]], "fit() (physicsguidedneuralnetwork method)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork.fit"]], "get_val_split() (physicsguidedneuralnetwork class method)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork.get_val_split"]], "history (physicsguidedneuralnetwork property)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork.history"]], "kernel_reg_term (physicsguidedneuralnetwork property)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork.kernel_reg_term"]], "kernel_weights (physicsguidedneuralnetwork property)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork.kernel_weights"]], "layers (physicsguidedneuralnetwork property)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork.layers"]], "layers_obj (physicsguidedneuralnetwork property)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork.layers_obj"]], "load() (physicsguidedneuralnetwork class method)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork.load"]], "make_batches() (physicsguidedneuralnetwork static method)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork.make_batches"]], "model_params (physicsguidedneuralnetwork property)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork.model_params"]], "p_fun_dummy() (physicsguidedneuralnetwork static method)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork.p_fun_dummy"]], "predict() (physicsguidedneuralnetwork method)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork.predict"]], "preflight_data() (physicsguidedneuralnetwork method)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork.preflight_data"]], "preflight_features() (physicsguidedneuralnetwork method)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork.preflight_features"]], "preflight_p_fun() (physicsguidedneuralnetwork method)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork.preflight_p_fun"]], "reset_history() (physicsguidedneuralnetwork method)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork.reset_history"]], "run_gradient_descent() (physicsguidedneuralnetwork method)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork.run_gradient_descent"]], "save() (physicsguidedneuralnetwork method)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork.save"]], "seed() (physicsguidedneuralnetwork static method)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork.seed"]], "set_loss_weights() (physicsguidedneuralnetwork method)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork.set_loss_weights"]], "version_record (physicsguidedneuralnetwork property)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork.version_record"]], "weights (physicsguidedneuralnetwork property)": [[43, "phygnn.phygnn.PhysicsGuidedNeuralNetwork.weights"]], "phygnn.utilities": [[44, "module-phygnn.utilities"]], "phygnn.utilities.loss_metrics": [[45, "module-phygnn.utilities.loss_metrics"]], "binary_crossentropy() (in module phygnn.utilities.loss_metrics)": [[46, "phygnn.utilities.loss_metrics.binary_crossentropy"]], "mae() (in module phygnn.utilities.loss_metrics)": [[47, "phygnn.utilities.loss_metrics.mae"]], "mbe() (in module phygnn.utilities.loss_metrics)": [[48, "phygnn.utilities.loss_metrics.mbe"]], "mse() (in module phygnn.utilities.loss_metrics)": [[49, "phygnn.utilities.loss_metrics.mse"]], "relative_mae() (in module phygnn.utilities.loss_metrics)": [[50, "phygnn.utilities.loss_metrics.relative_mae"]], "relative_mbe() (in module phygnn.utilities.loss_metrics)": [[51, "phygnn.utilities.loss_metrics.relative_mbe"]], "relative_mse() (in module phygnn.utilities.loss_metrics)": [[52, "phygnn.utilities.loss_metrics.relative_mse"]], "phygnn.utilities.pre_processing": [[53, "module-phygnn.utilities.pre_processing"]], "preprocess (class in phygnn.utilities.pre_processing)": [[54, "phygnn.utilities.pre_processing.PreProcess"]], "check_one_hot_categories() (preprocess static method)": [[54, "phygnn.utilities.pre_processing.PreProcess.check_one_hot_categories"]], "normalize() (preprocess static method)": [[54, "phygnn.utilities.pre_processing.PreProcess.normalize"]], "one_hot() (preprocess class method)": [[54, "phygnn.utilities.pre_processing.PreProcess.one_hot"]], "process_one_hot() (preprocess method)": [[54, "phygnn.utilities.pre_processing.PreProcess.process_one_hot"]], "unnormalize() (preprocess static method)": [[54, "phygnn.utilities.pre_processing.PreProcess.unnormalize"]], "update_names() (preprocess static method)": [[54, "phygnn.utilities.pre_processing.PreProcess.update_names"]], "phygnn.utilities.tf_utilities": [[55, "module-phygnn.utilities.tf_utilities"]], "idw_fill() (in module phygnn.utilities.tf_utilities)": [[56, "phygnn.utilities.tf_utilities.idw_fill"]], "mean_fill() (in module phygnn.utilities.tf_utilities)": [[57, "phygnn.utilities.tf_utilities.mean_fill"]], "tf_isin() (in module phygnn.utilities.tf_utilities)": [[58, "phygnn.utilities.tf_utilities.tf_isin"]], "tf_log10() (in module phygnn.utilities.tf_utilities)": [[59, "phygnn.utilities.tf_utilities.tf_log10"]]}})